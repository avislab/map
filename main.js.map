{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/rbush/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/ol/webgl.js","webpack:///./node_modules/ol/index.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/events/EventTarget.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/interaction/DragAndDrop.js","webpack:///./node_modules/ol/interaction/DragRotateAndZoom.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/geom/Circle.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/LayerType.js","webpack:///./node_modules/ol/layer/VectorRenderType.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/interaction/Draw.js","webpack:///./node_modules/ol/interaction/Extent.js","webpack:///./node_modules/ol/interaction/Modify.js","webpack:///./node_modules/ol/interaction/Select.js","webpack:///./node_modules/ol/interaction/Snap.js","webpack:///./node_modules/ol/interaction/Translate.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/ImageCanvas.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/canvas/Map.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack:///./node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/render/ReplayGroup.js","webpack:///./node_modules/ol/render/ReplayType.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/replay.js","webpack:///./node_modules/ol/render/canvas/Replay.js","webpack:///./node_modules/ol/render/canvas/ImageReplay.js","webpack:///./node_modules/ol/render/canvas/LineStringReplay.js","webpack:///./node_modules/ol/render/canvas/PolygonReplay.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/render/canvas/TextReplay.js","webpack:///./node_modules/ol/render/canvas/ReplayGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/VectorTileRenderType.js","webpack:///./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/style/IconAnchorUnits.js","webpack:///./node_modules/ol/style/IconImage.js","webpack:///./node_modules/ol/style/IconOrigin.js","webpack:///./node_modules/ol/style/Icon.js","webpack:///./node_modules/ol/layer/Heatmap.js","webpack:///./node_modules/ol/layer/Image.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/layer/VectorTile.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./node_modules/ol/control/FullScreen.js","webpack:///./node_modules/ol/OverlayPositioning.js","webpack:///./node_modules/ol/Overlay.js","webpack:///./node_modules/ol/control/OverviewMap.js","webpack:///./node_modules/ol/control/ScaleLine.js","webpack:///./node_modules/ol/control/ZoomSlider.js","webpack:///./node_modules/ol/control/ZoomToExtent.js","webpack:///./node_modules/ol/style/Atlas.js","webpack:///./node_modules/ol/style/AtlasManager.js","webpack:///./node_modules/ol/style/Text.js","webpack:///./node_modules/ol/GeolocationProperty.js","webpack:///./node_modules/ol/Geolocation.js","webpack:///./node_modules/ol/control/MousePosition.js","webpack:///./notify.js","webpack:///./gps.js","webpack:///./main.js","webpack:///./node_modules/util/node_modules/inherits/inherits_browser.js","webpack:///./node_modules/util/support/isBufferBrowser.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/util/util.js","webpack:///./node_modules/assert/assert.js","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/ol/ol.css","webpack:///./node_modules/ol/ol.css?f5a7"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","rbush","default","quickselect","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","length","calcBBox","node","toBBox","distBBox","children","k","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","intersects","height","multiSelect","arr","left","right","compare","mid","stack","pop","push","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","g","eval","e","window","CONTEXT_IDS","WEBGL_MAX_TEXTURE_SIZE","WEBGL_EXTENSIONS","HAS_WEBGL","gl","canvas","opt_attributes","ii","context","getContext","document","createElement","failIfMajorPerformanceCaveat","getParameter","MAX_TEXTURE_SIZE","getSupportedExtensions","inherits","childCtor","parentCtor","create","constructor","uidCounter_","getUid","obj","ol_uid","AssertionError","code","split","message","Error","ol_AssertionError","CollectionEventType","ObjectEventType","obj_assign","assign","target","var_sources","undefined","TypeError","output","arguments","source","key","getValues","values","isEmpty","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","type","listenerMap","ol_lm","getListenerMap","removeListeners","removeEventListener","boundListener","keys","listen","opt_once","callOnce","addEventListener","evt","unlistenByKey","bindListener","listenOnce","unlisten","TRUE","FALSE","UNDEFINED","Disposable","disposed_","dispose","disposeInternal","ol_Disposable","Event","propagationStopped","stopPropagation","preventDefault","events_Event","EventTarget","pendingRemovals_","dispatching_","listeners_","dispatchEvent","event","propagate","pendingRemovals","unlistenAll","hasListener","opt_type","events_EventTarget","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","Observable","revision_","changed","getRevision","on","Array","isArray","once","un","ol_Observable","ObjectEvent","oldValue","BaseObject","opt_values","values_","setProperties","changeEventTypeCache","getChangeEventType","getKeys","getProperties","notify","eventType","set","opt_silent","unset","ol_Object","Property","CollectionEvent","opt_element","element","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","forEach","f","array","getArray","insertAt","elem","removeAt","prev","setAt","opt_except","ol_Collection","MapEvent","map","opt_frameState","frameState","ol_MapEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","coordinate","getCoordinateFromPixel","dragging","ol_MapBrowserEvent","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","has","setLineDash","GEOLOCATION","TOUCH","POINTER","MSPOINTER","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent","pointerEvent","ol_MapBrowserPointerEvent","pointer_EventType","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","pointer_EventSource","MouseSource","mousedown","mousemove","mouseup","mouseover","mouseout","pointerMap","lastTouches","POINTER_ID","POINTER_TYPE","prepareEvent","inEvent","cloneEvent","pd","pointerId","isPrimary","pointerType","isEventSimulatedFromTouch_","lts","x","clientX","y","clientY","t","dx","abs","dy","toString","cancel","down","move","button","up","cleanupMouse","enterOver","leaveOut","pointer_MouseSource","MsSource","MSPointerDown","msPointerDown","MSPointerMove","msPointerMove","MSPointerUp","msPointerUp","MSPointerOut","msPointerOut","MSPointerOver","msPointerOver","MSPointerCancel","msPointerCancel","MSGotPointerCapture","msGotPointerCapture","MSLostPointerCapture","msLostPointerCapture","POINTER_TYPES","prepareEvent_","cleanup","makeEvent","pointer_MsSource","NativeSource","pointerdown","pointerDown","pointermove","pointerMove","pointerup","pointerUp","pointerout","pointerOut","pointerover","pointerOver","pointercancel","pointerCancel","gotpointercapture","gotPointerCapture","lostpointercapture","lostPointerCapture","fireNativeEvent","pointer_NativeSource","PointerEvent","opt_eventDict","eventDict","buttons","getButtons_","pressure","getPressure_","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","width","tiltX","tiltY","hwTimestamp","HAS_BUTTONS","which","ev","MouseEvent","pointer_PointerEvent","numberSafeCompareFunction","includes","linearFindNearest","direction","reverseSubArray","begin","end","tmp","extension","equals","arr1","arr2","len1","TouchSource","mouseSource","touchstart","touchmove","touchend","touchcancel","firstTouchId_","clickCount_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","setPrimaryTouch_","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","bind","clearTimeout","touchToPointer_","webkitRadiusX","radiusX","webkitRadiusY","radiusY","webkitForce","force","processTouches_","inFunction","touches","changedTouches","pointer","findTouch_","touchList","searchId","vacuumTouches_","out","cancelOut_","dedupSynthMouse_","overDown_","outTarget","over","enter","moveOverOut_","outEvent","upOut_","leave","cleanUpPointer_","lt","found","array_remove","pointer_TouchSource","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","CLONE_PROPS","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","pointer_PointerEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","ol_MapBrowserEventHandler","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","TileState","assert","assertion","errorCode","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","structs_PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","state","getState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","ol_TileQueue","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","clamp","cosh","exp","squaredSegmentDistance","x1","y1","x2","y2","math_squaredDistance","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","none","center","disable","rotation","delta","rotationconstraint_none","ViewHint","ANIMATING","INTERACTING","ViewProperty","coordinate_add","closestOnSegment","segment","x0","y0","start","along","createStringXY","opt_fractionDigits","template","replace","toFixed","coordinate_format","toStringXY","coordinate_equals","coordinate1","coordinate2","rotate","angle","cosAngle","cos","sinAngle","sin","coordinate_scale","scale","coordinate_squaredDistance","coord1","coord2","coordinate_distance","squaredDistanceToSegment","easeIn","easeOut","inAndOut","linear","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","opt_extent","clone","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extent_equals","extent_extend","extendCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","extent_isEmpty","getWidth","getHeight","getCenter","getForViewAndSize","resolution","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x3","y3","getIntersection","intersection","extent_intersects","scaleFromCenter","deltaX","deltaY","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","GeometryLayout","XY","XYZ","XYM","XYZM","transform2D","transform","opt_dest","dest","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","sphere_offset","distance","bearing","lon1","dByR","lat","asin","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","epsg3857_toEPSG4326","atan","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","transforms","transforms_add","destination","transformFn","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transforms_get","getTransform","proj_transform","projections2","forwardTransform","inverseTransform","tmp_","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","transform_set","setFromArray","ol_transform_scale","transform_translate","compose","dx1","dy1","sx","sy","dx2","dy2","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","tmpTransform","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","returnOrUpdate","anchor","opt_sy","opt_anchor","simplify","tolerance","getSimplifiedGeometry","squaredTolerance","getType","applyTransform","intersectsExtent","translate","inCoordinates","outCoordinates","pixelExtent","projectedExtent","geom_Geometry","SimpleGeometry","layout","getStrideForLayout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinatesInternal","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","transform_rotate","transform_scale","geom_SimpleGeometry","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","round","quantize","quantizeArray","LinearRing","maxDelta_","maxDeltaRevision_","linearRing","setFlatCoordinates","simplifiedLinearRing","geom_LinearRing","Point","geom_Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","point1","point2","ret","intersectsLineString","coordinatesExtent","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","simplifiedPolygon","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","arrayLength","makeRegular","getRadius","startAngle","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","applyOptions_","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","properties","resolutionConstraintInfo","resolutionConstraint","maxResolution","minResolution","minZoom","maxZoom","zoomFactor","resolutions","z","floor","power","defaultMaxResolution","defaultMinResolution","opt_maxLevel","oldLevel","newLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","createSnapToZero","theta","createSnapToN","createRotationConstraint","constraints_","zoom","constrainResolution","Number","getResolution","options_","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","animationCount","isDef","setCenter","setZoom","setRotation","Date","now","series","complete","duration","easing","setHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","calculateCenterZoom","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","getComputedStyle","parseInt","constrainCenter","opt_delta","opt_direction","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getProjection","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","nearest","getResolutionForZoom","fit","geometryOrExtent","geometry","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","setResolution","centerOn","position","centerX","centerY","hint","ol_View","createCanvasContext2D","opt_width","opt_height","replaceNode","oldNode","parentNode","replaceChild","removeNode","removeChild","removeChildren","lastChild","layer_Property","BaseLayer","opacity","visible","zIndex","state_","layer","managed","getLayerState","getOpacity","sourceState","getSourceState","getVisible","getZIndex","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","Base","State","Group_Property","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","id","layersArray","collectionEvent","states","pos","ownLayerState","layerState","Group","toSize","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","layerGroup","controls","interactions","overlays","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","pixelRatio","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","style","overflow","msTouchAction","touchAction","overlayContainer_","appendChild","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","opt_layerFilter","opt_this2","thisArg","thisArg2","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","postRenderFunctions","render","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","time","viewState","previousFrameState","hasArea","layerStatesArray","layerStates","pixelResolution","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setSize","setView","skipFeature","featureUid","computedStyle","offsetWidth","parseFloat","offsetHeight","unskipFeature","ol_PluggableMap","Control","target_","listenerKeys","getMap","control_Control","CLASS_HIDDEN","getFontFamilies","cache","font","family","fontFamily","render_EventType","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","visibleAtResolution","getSource","handleSourceChange_","layer_Layer","Attribution","ulElement_","collapsed_","collapsed","collapsible_","collapsible","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","Attribution_render","renderedAttributions_","renderedVisible_","mapEvent","updateElement_","getSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsible","setCollapsed","getCollapsed","control_Attribution","Rotate","add","callResetNorth_","resetNorth","Rotate_render","duration_","autoHide_","autoHide","rotation_","msTransform","webkitTransform","resetNorth_","control_Rotate","Zoom_Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","control_Zoom","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","lastIndex","firstIndex","getAngle","ol_Kinetic","interaction_Property","Interaction","setActive","Interaction_rotate","opt_duration","rotateWithoutConstraints","currentRotation","zoomWithoutConstraints","zoomByDelta","active","interaction_Interaction","DoubleClickZoom","delta_","stopEvent","interaction_DoubleClickZoom","altShiftKeysOnly","always","mouseActionButton","never","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","handleDragEvent","handleUpEvent","handleDownEvent","handleMoveEvent","PointerInteraction","Pointer_handleEvent","handleDownEvent_","handleDragEvent_","handleMoveEvent_","handleUpEvent_","handlingDownUpSequence","trackedPointers_","targetPointers","Pointer_centroid","pointerEvents","updateTrackedPointers_","handledUp","handled","shouldStopEvent","isPointerDraggingEvent","Pointer","DragPan","DragPan_handleDownEvent","DragPan_handleDragEvent","DragPan_handleUpEvent","kinetic_","kinetic","lastCentroid","lastPointersCount_","condition_","condition","noKinetic_","centroid","centerpx","interaction_DragPan","DragRotate","DragRotate_handleDownEvent","DragRotate_handleDragEvent","DragRotate_handleUpEvent","lastAngle_","interaction_DragRotate","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","geom_Polygon","getGeometry","Box","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","DragBox","DragBox_handleDownEvent","DragBox_handleDragEvent","DragBox_handleUpEvent","box_","minArea_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","onBoxEnd","interaction_DragBox","DragZoom","out_","mapExtent","boxPixelExtent","interaction_DragZoom","KeyCode","UP","DOWN","KeyboardPan","KeyboardPan_handleEvent","defaultCondition_","pixelDelta_","pixelDelta","keyCode","mapUnitsDelta","pan","interaction_KeyboardPan","KeyboardZoom","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","Mode","TRACKPAD","MouseWheelZoom","MouseWheelZoom_handleEvent","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","decrementInteractingHint_","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_MouseWheelZoom","PinchRotate","PinchRotate_handleDownEvent","PinchRotate_handleDragEvent","PinchRotate_handleUpEvent","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","interaction_PinchRotate","PinchZoom","PinchZoom_handleDownEvent","PinchZoom_handleDragEvent","PinchZoom_handleUpEvent","lastDistance_","lastScaleDelta_","scaleDelta","interaction_PinchZoom","DragAndDropEventType","DragAndDropEvent","file","opt_features","opt_projection","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","source_","handleDrop","files","dataTransfer","reader","FileReader","handleResult_","readAsText","handleStop","dropEffect","formatConstructor","tryReadFeatures_","featureProjection","addFeatures","registerListeners_","dropArea","unregisterListeners_","text","readFeatures","DragRotateAndZoom","DragRotateAndZoom_handleDownEvent","DragRotateAndZoom_handleDragEvent","DragRotateAndZoom_handleUpEvent","lastMagnitude_","magnitude","angleDelta","interaction_DragRotateAndZoom","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","color_toString","fromString","cacheSize","exec","el","body","rgb","fromNamed","hasAlpha","substr","normalize","fromStringInternal_","asColorLike","CanvasPattern","CanvasGradient","isColorLike","ImageState","IDLE","LOADING","LOADED","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","prune","structs_LRUCache","defaultFillStyle","defaultLineDash","defaultStrokeStyle","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","retries","checked","referenceFonts","interval","referenceWidth","isAvailable","getMeasureContext","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","measureTextHeight","span","heights","measureTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","image","originX","originY","w","h","alpha","globalAlpha","setTransform","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","snapToPixel_","snapToPixel","getRotateWithView","getScale","getSnapToPixel","getAnchor","getImage","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setRotateWithView","setScale","setSnapToPixel","listenImageChange","unlistenImageChange","style_Image","RegularShape","checksums_","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","getFill","getPoints","getRadius2","getStroke","imageSize","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","renderOptions","draw_","createHitDetectionCanvas_","hasCustomHitDetectionImage","renderHitDetectionCallback","drawHitDetectionCanvas_","getChecksum","info","hitImage","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","strokeChecksum","fillChecksum","checksum","style_RegularShape","CircleStyle","setRadius","Circle","Fill","color_","checksum_","setColor","style_Fill","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","style_Stroke","Style","geometryFunction_","defaultGeometryFunction","setGeometry","image_","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","defaultStyles","createDefaultStyle","createEditingStyle","styles","white","blue","concat","style_Style","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","ol_Feature","Circle_Circle","setCenterAndRadius","getRadiusSquared_","geom_Circle","interpolatePoint","pointY","cumulativeLengths","haystack","needle","opt_comparator","cmp","comparator","low","high","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringLength","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","simplifiedLineString","geom_LineString","MultiLineString","appendLineString","multiLineString","opt_interpolate","interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","lineStrings","getFlatMidpoints","midpoints","simplifiedMultiLineString","intersectsLineStringArray","setLineStrings","geom_MultiLineString","MultiPoint","appendPoint","multiPoint","getPoint","geom_MultiPoint","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","appendPolygon","multiPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getEndss","getFlatInteriorPoints","center_linearRingss","interiorPoints","getInteriorPointsOfMultiArray","getInteriorPoints","linearRingsAreOriented","simplifiedEndss","quantizeMultiArray","simplifiedMultiPolygon","getPolygon","prevEnds","getPolygons","polygons","intersectsLinearRingMultiArray","opt_endss","deflateMultiCoordinatesArray","lastEnds","setPolygons","geom_MultiPolygon","LayerType","VectorRenderType","Vector_Property","VectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","toFunction","getRenderMode","Vector","FormatType","ARRAY_BUFFER","JSON","TEXT","XML","featureloader_xhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readProjection","getLastExtent","onerror","send","loadFeaturesXhr","dataProjection","loadingstrategy_all","Source","attributions_","adaptAttributions_","wrapX_","wrapX","attributionLike","getWrapX","refresh","setAttributions","setState","source_Source","VectorEventType","RBush","opt_maxEntries","rbush_","rbush_default","items_","extents","uid","getAll","getInExtent","forEach_","forEachInExtent","structs_RBush","VectorSourceEvent","opt_feature","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","useSpatialIndex","collection","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","source_Vector","Draw_Mode","DrawEventType","DrawEvent","Draw","Draw_handleDownEvent","Draw_handleEvent","Draw_handleUpEvent","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","features_","snapTolerance_","snapTolerance","type_","mode","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","Constructor","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","getDefaultStyleFunction","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","pass","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","ring","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","interaction_Draw","ExtentEventType","ExtentInteractionEvent","ExtentInteraction","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","Extent_handleDownEvent","Extent_handleDragEvent","Extent_handleEvent","Extent_handleUpEvent","extentOverlay_","boxStyle","getDefaultExtentStyleFunction","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","vertex","snapToVertex_","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","pixelCoordinate","createOrUpdatePointerFeature_","fixedPoint","fixedP1","fixedP2","sortByDistance","segments","getSegments","closestSegment","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdateExtentFeature_","extentFeature","vertexFeature","ModifyEventType","MODIFYSTART","MODIFYEND","ModifyEvent","mapBrowserPointerEvent","Modify","Modify_handleDownEvent","Modify_handleDragEvent","Modify_handleEvent","Modify_handleUpEvent","defaultDeleteCondition_","altKeyOnly","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","Modify_getDefaultStyleFunction","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","GeometryCollection","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","compareIndexes","handlePointerAtPixel_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","depth","closestOnSegmentData","willModifyFeatures_","insertVertex_","dragSegment","segmentData","setGeometryCoordinates_","createOrUpdateVertexFeature_","centerSegmentData","featureSegments","circumferenceSegmentData","removePoint","pointDistanceToSegmentDataSquared","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","lines","rings","kk","geometries","getGeometriesArray","box","nodes","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","deleted","interaction_Modify","SelectEventType","SELECT","SelectEvent","selected","deselected","Select","Select_handleEvent","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","featureOverlay","Select_getDefaultStyleFunction","featureOverlay_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","removeFeatureLayerAssociation_","getHitTolerance","getLayer","setHitTolerance","currentMap","selectedFeatures","Snap","Snap_handleEvent","Snap_handleUpEvent","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","deltaA","deltaB","snapTo","snapped","featuresToUpdate","updateFeature_","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","opt_unlisten","unregister","snappedToVertex","isCircle","closestOnCircle","TranslateEventType","TRANSLATESTART","TRANSLATING","TRANSLATEEND","TranslateEvent","Translate","Translate_handleDownEvent","Translate_handleDragEvent","Translate_handleMoveEvent","Translate_handleUpEvent","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","geom","oldMap","interaction_defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ImageBase","getPixelRatio","ol_ImageBase","ImageCanvas","opt_loader","error_","getError","handleLoad_","err","ol_ImageCanvas","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","glContext","render_Event","VectorContext","drawCustom","drawGeometry","drawCircle","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageSnapToPixel_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","drawRings_","simpleGeometry","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","textAlign","textBaseline","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageAnchor","imageImage","imageOrigin","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","Immediate","IconImageCache","cache_","cacheSize_","maxCacheSize_","src","crossOrigin","expire","iconImage","maxCacheSize","shared","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","expireIconCache","sortByZIndex","state1","state2","registerLayerRenderers","constructors","getLayerRendererConstructors","calculateMatrices2D","det","mat","invert","removeLayerRendererByKey_","viewResolution","translatedCoordinate","projectionExtent","worldWidth","layerRenderer","getLayerRenderer","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","Map","layerRendererConstructors","CanvasMapRenderer","insertBefore","childNodes","dispatchComposeEvent_","composeEvent","clearRect","compareFnc","stableSort","save","prepareFrame","composeFrame","restore","numLayers","forEachLayerAtCoordinate","ctor","canvas_Map","LayerRenderer","layer_","createLoadedTileFinder","tiles","tileRange","forEachLoadedTile","tileCoord","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTileRangeForExtentAndZ","getTile","getTileCoordCenter","useTile","renderer_Layer","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","opt_transform","postCompose","preCompose","dispatchRenderEvent","canvas_Layer","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","IntermediateCanvas","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","mapRenderer","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","imageExtent","imageResolution","imagePixelRatio","ImageLayer","TileRange","TileRange_createOrUpdate","containsTileRange","ol_TileRange","CanvasTileLayerRenderer","tileLayer","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","getInterimTile","sourceRevision","getTileGridForProjection","getZForResolution","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","zs","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","getGutter","tileCoordKey","getTileCoordExtent","getTileCoord","drawTileImage","gutter","transition","getOpaque","alphaChanged","endTransition","TileLayer","ReplayGroup","getReplay","replayType","render_ReplayGroup","ReplayType","DEFAULT","IMAGE","drawTextOnPath","measure","startM","maxAngle","reverse","numChars","previousAngle","segmentM","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","CanvasReplay","maxExtent","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","Replay_tmpExtent","Replay_tmpTransform","replayTextBackground_","p1","p2","p3","p4","fillInstruction","strokeInstruction","setStrokeStyle_","replayImage_","declutterGroup","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayBegin","replayEndss","myEnds","endGeometry","origin","repeatSize","instruction","renderDeclutter_","groupCount","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","skipFeatures","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","backgroundFill","backgroundStroke","baseline","fillKey","strokeKey","textKey","pathLength","textLength","textStates","parts","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","finish","Replay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","hitDetectionImage","ImageReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","LineStringReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","PolygonReplay","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","TextPlacement","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","flatEnd","flatOffset","oo","range","drawChars_","drawTextImage_","align","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","BATCH_CONSTRUCTORS","Default","Image","Text","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","resolution_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","circleArrayCache","0","fillCircleArrayRowToMiddle","addDeclutter","group","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","contextSize","hitExtent","mask","arraySize","error","getCircleArray","declutteredFeatures","zIndexKey","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","replayGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loading","renderGeometry","getGeometries","renderFeatureInternal","CanvasVectorLayerRenderer","vectorLayer","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","dirty","canvas_VectorLayer","VectorTileRenderType","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","createReplayGroup_","renderTileImage_","layerRevision","revision","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","zIndexKeys","tt","tileKeys","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","wrappedTileCoord","pixelScale","VectorTileLayer","Map_Map","ol_Map","IconAnchorUnits","IconImage","imageListenerKeys_","imageState_","src_","tainting_","determineTainting_","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","getSrc","ctx","imgData","putImageData","IconOrigin","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize","iconImage_","IconImage_get","offset_","offsetOrigin_","offsetOrigin","iconImageSize","style_Icon","Heatmap_Property","DEFAULT_GRADIENT","Heatmap","gradient","blur","shadow","weight","gradient_","shadow_","circleImage_","styleCache_","handleGradientChanged_","setGradient","setBlur","handleStyleChanged_","weightFunction","handleRender_","createCircle_","getBlur","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","toDataURL","getGradient","colors","createLinearGradient","step","addColorStop","createGradient","view8","Image_ImageLayer","TileProperty","Tile_TileLayer","setPreload","setUseInterimTilesOnError","Tile","VectorTile_VectorTileLayer","Tile_Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","ol_Tile","ImageTile","tileLoadFunction","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","ol_ImageTile","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","TileCache","pruneExceptNewestZ","fromKey","ol_TileCache","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","sourceExtent","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","p0","Triangulation","sourceProj","targetProj","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Triangulation","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad","sourceListenKey","reproj_Tile","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","hash","createFromTileUrlFunctions","nullTileUrlFunction","TileGrid","opt_func","opt_strict","every","currentVal","res","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","tmpTileCoord","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","tilegrid_TileGrid","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","corner","resolutionsFromExtent","getCorner","createForExtent","extentFromProjection","createForProjection","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","ratio","getTileCoordForTileUrlFunction","worldsAway","withinExtentAndZ","TileSourceEvent","source_Tile","TileEventType","UrlTile","tileUrlFunction","fixedTileUrlFunction","urls","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","opt_key","match","startCharCode","stopCharCode","String","fromCharCode","stop","expandUrl","source_UrlTile","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","imageTile","usedTileCache","getGutterInternal","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","source_TileImage","createXYZ","source_XYZ","OSM","source_OSM","getChangeType","changeType","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullscreen","FullScreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","isFullScreen","isFullScreenSupported","keys_","mozFullScreenEnabled","msFullscreenEnabled","fullscreenEnabled","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","handleFullScreen_","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","mozRequestFullScreenWithKeys","Element","ALLOW_KEYBOARD_INPUT","handleFullScreenChange_","firstElementChild","OverlayPositioning","Overlay_Property","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","marginLeft","marginRight","dom_outerWidth","marginTop","marginBottom","dom_outerHeight","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","getOptions","ol_Overlay","OverviewMap","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","OverviewMap_render","scope","overlayBox","mousePosition","endMoving","validateExtent_","updateBox_","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","LN2","ovresolution","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","getOverviewMap","ScaleLine_Units","LEADING_DIGITS","ScaleLine","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","renderedHTML_","ScaleLine_render","handleUnitsChanged_","setUnits","pointResolutionUnits","nominalCount","suffix","metersPerDegree","html","control_ScaleLine","Direction","ZoomSlider","currentResolution_","direction_","heightLimit_","widthLimit_","previousX_","previousY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","dragger_","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","ZoomSlider_render","initSlider_","setThumbPosition_","containerSize","thumb","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","getPositionForResolution_","amount","ZoomToExtent","handleZoomToExtent","Atlas","space","space_","emptyBlocks_","renderCallback","block","split_","newBlock1","newBlock2","updateBlocks_","args","style_Atlas","AtlasManager","currentSize_","initialSize","maxSize_","maxSize","atlases_","currentHitSize_","hitAtlases_","getInfo","getInfo_","hitInfo","mergeInfos_","atlases","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","atlas","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","GeolocationProperty","Geolocation","position_","watchId_","handleProjectionChanged_","handleTrackingChanged_","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","opt_n","opt_sphereRadius","circular","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getSpeed","ol_Geolocation","MousePosition","MousePosition_render","coordinateFormat","setCoordinateFormat","undefinedHTML_","undefinedHTML","renderOnMouseOut_","mapProjection_","lastMouseMovePixel_","updateHTML_","getCoordinateFormat","handleMouseMove","handleMouseOut","viewport","control_MousePosition","notify_0","ElementId","ele","gps","container_id","Lon","Lat","Zoom","keep_center","rotate_map","track_recording","track_name","prev_coordinates","start_point","scaleLineControl","iconFeature","pointer_heading","rotate_pointer","sketch","measureTooltipElement","measureTooltip","drawMeasurement","drawRoute","raster","trackSource","track","mousePositionControl","measurementSource","prSource","prVector","modify","lastCoordinates","nameTooltip","enableHighAccuracy","accuracyFeature","positionFeature","mapInfo","formatLength","line","disableMeasuring","getMeasuringStatus","addPointTitle","nameTooltipElement","_title_","_feature_","newTitle","prompt","saveRoutesAndPoints","confirm","enableRoutesAndPoints","disableRoutesAndPoints","console","localStorage","setItem","stringify","tooltipCoord","createInteraction","getItem","parse","sourceClear","loadRoutesAndPoints","enableKeepCenter","disableKeepCenter","toggleKeepCenter","getKeepCenterStatus","enableRotateMap","disableRotateMap","toggleRotateMap","getRotateMapStatus","toggleTrackRecording","trackName","saveTrack","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","newTrackName","getTrackRecording","loadTrack","setMode","newMode","returnValue","settings","default_settings","controlPanel","main_gps","gpsStartLon","gpsStartLat","gpsStartZoom","main_notify","onClick","HideToolBar","onButtonsClick","notify_text","newItem","onclick","newDelItem","removeItem","superCtor","super_","writable","TempCtor","arg","copy","readUInt8","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","noop","nextTick","browser","env","argv","version","versions","addListener","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","formatRegExp","isString","objects","inspect","str","_","isNull","isObject","deprecate","msg","isUndefined","noDeprecation","warned","throwDeprecation","traceDeprecation","trace","debugEnviron","debugs","opts","seen","stylize","stylizeNoColor","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","recurseTimes","isFunction","primitive","simple","isNumber","formatPrimitive","visibleKeys","idx","arrayToHash","getOwnPropertyNames","isError","formatError","isRegExp","RegExp","isDate","base","braces","toUTCString","formatProperty","formatArray","reduce","cur","numLinesEst","reduceToSingleString","desc","getOwnPropertyDescriptor","ar","re","objectToString","pad","debuglog","NODE_DEBUG","toUpperCase","test","pid","bold","italic","underline","inverse","grey","black","cyan","green","magenta","red","yellow","special","number","boolean","null","string","date","regexp","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","months","prop","Buffer","_isBuffer","util","hasOwn","pSlice","functionsHaveNames","pToString","isView","arrbuf","ArrayBuffer","DataView","ok","regex","getName","truncate","something","rawname","fail","actual","expected","operator","stackStartFunction","_deepEqual","strict","memos","getTime","multiline","ignoreCase","Float32Array","Float64Array","Uint8Array","actualIndex","actualVisitedObjects","getPrototypeOf","aIsArgs","isArguments","bIsArgs","ka","objectKeys","kb","objEquiv","expectedException","isPrototypeOf","_throws","shouldThrow","_tryBlock","userProvidedMessage","isUnwantedException","isUnexpectedException","self","generatedMessage","captureStackTrace","fn_name","next_line","substring","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","swap","defaultCompare","quickselectStep","sd","newLeft","newRight","factory","css","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","memo","stylesInDom","isOldIE","atob","styleTarget","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","domStyle","refs","addStyle","listToStyles","list","newStyles","media","sourceMap","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","nextSibling","firstChild","before","removeStyleElement","createStyleElement","attrs","addAttrs","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","blob","oldSrc","href","styleSheet","cssText","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","cssNode","useSourceMap","content","cssMapping","sourceMapping","sourceURLs","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","hmr","locals"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","/**\n * @module ol/webgl\n */\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n","/**\n * @module ol\n */\n\nimport {getContext} from './webgl.js';\n\n\n/**\n * An array with two elements, representing a pixel. The first element is the\n * x-coordinate, the second the y-coordinate of the pixel.\n * @typedef {Array.<number>} Pixel\n * @api\n */\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * TODO: move to a separate ol-webgl package\n * @type {boolean}\n */\nexport const DEBUG_WEBGL = true;\n\n\n/**\n * TODO: move to a separate ol-webgl package\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nlet WEBGL_MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * TODO: move to a separate ol-webgl package\n * List of supported WebGL extensions.\n * @type {Array.<string>}\n */\nlet WEBGL_EXTENSIONS; // value is set below\n\n\n/**\n * TODO: move to a separate ol-webgl package\n * WebGL is available.\n * @type {boolean}\n */\nlet HAS_WEBGL = false;\n\n\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n    const gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS_WEBGL = true;\n      WEBGL_MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      WEBGL_EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS_WEBGL, WEBGL_MAX_TEXTURE_SIZE, WEBGL_EXTENSIONS};\n\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'v4.6.4';\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = ++uidCounter_);\n}\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION, inherits} from './index.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error}\n * @constructor\n * @extends {Error}\n * @param {number} code Error code.\n */\nconst AssertionError = function(code) {\n\n  const path = VERSION ? VERSION.split('-')[0] : 'latest';\n\n  /**\n   * @type {string}\n   */\n  this.message = 'Assertion failed. See https://openlayers.org/en/' + path +\n      '/doc/errors/#' + code + ' for details.';\n\n  /**\n   * Error code. The meaning of the code can be found on\n   * {@link https://openlayers.org/en/latest/doc/errors/} (replace `latest` with\n   * the version found in the OpenLayers script's header comment if a version\n   * other than the latest is used).\n   * @type {number}\n   * @api\n   */\n  this.code = code;\n\n  this.name = 'AssertionError';\n\n};\n\ninherits(AssertionError, Error);\n\nexport default AssertionError;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection~CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection~CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object~ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n *\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const output = Object(target);\n  for (let i = 1, ii = arguments.length; i < ii; ++i) {\n    const source = arguments[i];\n    if (source !== undefined && source !== null) {\n      for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  const values = [];\n  for (const property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {module:ol/events~ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {module:ol/events~ListenerFunction} listener\n * @property {EventTarget|module:ol/events/EventTarget} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function(module:ol/events/Event)|function(module:ol/events/Event): boolean} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {module:ol/events~EventsKey} listenerObj Listener object.\n * @return {module:ol/events~ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  const boundListener = function(evt) {\n    const listener = listenerObj.listener;\n    const bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!module:ol/events~EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {module:ol/events~EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  let listenerObj;\n  for (let i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array.<module:ol/events~EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  const listenerMap = target.ol_lm;\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.  If one does not exist on the target, it is\n * created.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @return {!Object.<string, Array.<module:ol/events~EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target) {\n  let listenerMap = target.ol_lm;\n  if (!listenerMap) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      target.removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    const listenerMap = target.ol_lm;\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        delete target.ol_lm;\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {module:ol/events~EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  const listenerMap = getListenerMap(target);\n  let listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  let listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {module:ol/events~EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    target.addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {module:ol/events~EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    const listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {module:ol/events~EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.boundListener);\n    const listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      const i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  const listenerMap = getListenerMap(target);\n  for (const type in listenerMap) {\n    removeListeners(target, type);\n  }\n}\n","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {undefined} Nothing.\n */\nexport function UNDEFINED() {}\n","/**\n * @module ol/Disposable\n */\nimport {UNDEFINED} from './functions.js';\n\n/**\n * Objects that need to clean up after themselves.\n * @constructor\n */\nconst Disposable = function() {};\n\n/**\n * The object has already been disposed.\n * @type {boolean}\n * @private\n */\nDisposable.prototype.disposed_ = false;\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function() {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = UNDEFINED;\nexport default Disposable;\n","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * @see {@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface}\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/EventTarget~EventTarget}.\n *\n * @constructor\n * @param {string} type Type.\n */\nconst Event = function(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n\n};\n\n\n/**\n * Stop event propagation.\n * @function\n * @api\n */\nEvent.prototype.preventDefault =\n\n  /**\n   * Stop event propagation.\n   * @function\n   * @api\n   */\n  Event.prototype.stopPropagation = function() {\n    this.propagationStopped = true;\n  };\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n","/**\n * @module ol/events/EventTarget\n */\nimport {inherits} from '../index.js';\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {UNDEFINED} from '../functions.js';\nimport Event from '../events/Event.js';\n\n\n/**\n * @typedef {EventTarget|module:ol/events/EventTarget} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * @see {@link https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget}\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n *\n * @constructor\n * @extends {module:ol/Disposable}\n */\nconst EventTarget = function() {\n\n  Disposable.call(this);\n\n  /**\n   * @private\n   * @type {!Object.<string, number>}\n   */\n  this.pendingRemovals_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, number>}\n   */\n  this.dispatching_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, Array.<module:ol/events~ListenerFunction>>}\n   */\n  this.listeners_ = {};\n\n};\n\ninherits(EventTarget, Disposable);\n\n\n/**\n * @param {string} type Type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n */\nEventTarget.prototype.addEventListener = function(type, listener) {\n  let listeners = this.listeners_[type];\n  if (!listeners) {\n    listeners = this.listeners_[type] = [];\n  }\n  if (listeners.indexOf(listener) === -1) {\n    listeners.push(listener);\n  }\n};\n\n\n/**\n * @param {{type: string,\n *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|module:ol/events/Event|\n *     string} event Event or event type.\n * @return {boolean|undefined} `false` if anyone called preventDefault on the\n *     event object or if any of the listeners returned false.\n */\nEventTarget.prototype.dispatchEvent = function(event) {\n  const evt = typeof event === 'string' ? new Event(event) : event;\n  const type = evt.type;\n  evt.target = this;\n  const listeners = this.listeners_[type];\n  let propagate;\n  if (listeners) {\n    if (!(type in this.dispatching_)) {\n      this.dispatching_[type] = 0;\n      this.pendingRemovals_[type] = 0;\n    }\n    ++this.dispatching_[type];\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    --this.dispatching_[type];\n    if (this.dispatching_[type] === 0) {\n      let pendingRemovals = this.pendingRemovals_[type];\n      delete this.pendingRemovals_[type];\n      while (pendingRemovals--) {\n        this.removeEventListener(type, UNDEFINED);\n      }\n      delete this.dispatching_[type];\n    }\n    return propagate;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nEventTarget.prototype.disposeInternal = function() {\n  unlistenAll(this);\n};\n\n\n/**\n * Get the listeners for a specified event type. Listeners are returned in the\n * order that they will be called in.\n *\n * @param {string} type Type.\n * @return {Array.<module:ol/events~ListenerFunction>} Listeners.\n */\nEventTarget.prototype.getListeners = function(type) {\n  return this.listeners_[type];\n};\n\n\n/**\n * @param {string=} opt_type Type. If not provided,\n *     `true` will be returned if this EventTarget has any listeners.\n * @return {boolean} Has listeners.\n */\nEventTarget.prototype.hasListener = function(opt_type) {\n  return opt_type ?\n    opt_type in this.listeners_ :\n    Object.keys(this.listeners_).length > 0;\n};\n\n\n/**\n * @param {string} type Type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n */\nEventTarget.prototype.removeEventListener = function(type, listener) {\n  const listeners = this.listeners_[type];\n  if (listeners) {\n    const index = listeners.indexOf(listener);\n    if (type in this.pendingRemovals_) {\n      // make listener a no-op, and remove later in #dispatchEvent()\n      listeners[index] = UNDEFINED;\n      ++this.pendingRemovals_[type];\n    } else {\n      listeners.splice(index, 1);\n      if (listeners.length === 0) {\n        delete this.listeners_[type];\n      }\n    }\n  }\n};\nexport default EventTarget;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n","/**\n * @module ol/Observable\n */\nimport {inherits} from './index.js';\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @fires module:ol/events/Event~Event\n * @struct\n * @api\n */\nconst Observable = function() {\n\n  EventTarget.call(this);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.revision_ = 0;\n\n};\n\ninherits(Observable, EventTarget);\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {module:ol/events~EventsKey} */ (key));\n  }\n}\n\n\n/**\n * Increases the revision counter and dispatches a 'change' event.\n * @api\n */\nObservable.prototype.changed = function() {\n  ++this.revision_;\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * Dispatches an event and calls all listeners listening for events\n * of this type. The event parameter can either be a string or an\n * Object with a `type` property.\n *\n * @param {{type: string,\n *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|\n *     module:ol/events/Event|string} event Event object.\n * @function\n * @api\n */\nObservable.prototype.dispatchEvent;\n\n\n/**\n * Get the version number for this object.  Each time the object is modified,\n * its version number will be incremented.\n * @return {number} Revision.\n * @api\n */\nObservable.prototype.getRevision = function() {\n  return this.revision_;\n};\n\n\n/**\n * Listen for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on = function(type, listener) {\n  if (Array.isArray(type)) {\n    const len = type.length;\n    const keys = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      keys[i] = listen(this, type[i], listener);\n    }\n    return keys;\n  } else {\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n};\n\n\n/**\n * Listen once for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once = function(type, listener) {\n  if (Array.isArray(type)) {\n    const len = type.length;\n    const keys = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      keys[i] = listenOnce(this, type[i], listener);\n    }\n    return keys;\n  } else {\n    return listenOnce(this, /** @type {string} */ (type), listener);\n  }\n};\n\n\n/**\n * Unlisten for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un = function(type, listener) {\n  if (Array.isArray(type)) {\n    for (let i = 0, ii = type.length; i < ii; ++i) {\n      unlisten(this, type[i], listener);\n    }\n    return;\n  } else {\n    unlisten(this, /** @type {string} */ (type), listener);\n  }\n};\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport {getUid, inherits} from './index.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of\n * this type.\n *\n * @param {string} type The event type.\n * @param {string} key The property name.\n * @param {*} oldValue The old value for `key`.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst ObjectEvent = function(type, key, oldValue) {\n  Event.call(this, type);\n\n  /**\n   * The name of the property whose value is changing.\n   * @type {string}\n   * @api\n   */\n  this.key = key;\n\n  /**\n   * The old value. To get the new value use `e.target.get(e.key)` where\n   * `e` is the event object.\n   * @type {*}\n   * @api\n   */\n  this.oldValue = oldValue;\n\n};\ninherits(ObjectEvent, Event);\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @constructor\n * @extends {module:ol/Observable}\n * @param {Object.<string, *>=} opt_values An object with key-value pairs.\n * @fires module:ol/Object~ObjectEvent\n * @api\n */\nconst BaseObject = function(opt_values) {\n  Observable.call(this);\n\n  // Call {@link module:ol~getUid} to ensure that the order of objects' ids is\n  // the same as the order in which they were created.  This also helps to\n  // ensure that object properties are always added in the same order, which\n  // helps many JavaScript engines generate faster code.\n  getUid(this);\n\n  /**\n   * @private\n   * @type {!Object.<string, *>}\n   */\n  this.values_ = {};\n\n  if (opt_values !== undefined) {\n    this.setProperties(opt_values);\n  }\n};\n\ninherits(BaseObject, Observable);\n\n\n/**\n * @type {Object.<string, string>}\n */\nconst changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\n/**\n * Gets a value.\n * @param {string} key Key name.\n * @return {*} Value.\n * @api\n */\nBaseObject.prototype.get = function(key) {\n  let value;\n  if (this.values_.hasOwnProperty(key)) {\n    value = this.values_[key];\n  }\n  return value;\n};\n\n\n/**\n * Get a list of object property names.\n * @return {Array.<string>} List of property names.\n * @api\n */\nBaseObject.prototype.getKeys = function() {\n  return Object.keys(this.values_);\n};\n\n\n/**\n * Get an object of all property names and values.\n * @return {Object.<string, *>} Object.\n * @api\n */\nBaseObject.prototype.getProperties = function() {\n  return assign({}, this.values_);\n};\n\n\n/**\n * @param {string} key Key name.\n * @param {*} oldValue Old value.\n */\nBaseObject.prototype.notify = function(key, oldValue) {\n  let eventType;\n  eventType = getChangeEventType(key);\n  this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  eventType = ObjectEventType.PROPERTYCHANGE;\n  this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n};\n\n\n/**\n * Sets a value.\n * @param {string} key Key name.\n * @param {*} value Value.\n * @param {boolean=} opt_silent Update without triggering an event.\n * @api\n */\nBaseObject.prototype.set = function(key, value, opt_silent) {\n  if (opt_silent) {\n    this.values_[key] = value;\n  } else {\n    const oldValue = this.values_[key];\n    this.values_[key] = value;\n    if (oldValue !== value) {\n      this.notify(key, oldValue);\n    }\n  }\n};\n\n\n/**\n * Sets a collection of key-value pairs.  Note that this changes any existing\n * properties and adds new ones (it does not remove any existing properties).\n * @param {Object.<string, *>} values Values.\n * @param {boolean=} opt_silent Update without triggering an event.\n * @api\n */\nBaseObject.prototype.setProperties = function(values, opt_silent) {\n  for (const key in values) {\n    this.set(key, values[key], opt_silent);\n  }\n};\n\n\n/**\n * Unsets a property.\n * @param {string} key Key name.\n * @param {boolean=} opt_silent Unset without triggering an event.\n * @api\n */\nBaseObject.prototype.unset = function(key, opt_silent) {\n  if (key in this.values_) {\n    const oldValue = this.values_[key];\n    delete this.values_[key];\n    if (!opt_silent) {\n      this.notify(key, oldValue);\n    }\n  }\n};\n\n\nexport default BaseObject;\n","/**\n * @module ol/Collection\n */\nimport {inherits} from './index.js';\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/CollectionEventType} type Type.\n * @param {*=} opt_element Element.\n */\nexport const CollectionEvent = function(type, opt_element) {\n\n  Event.call(this, type);\n\n  /**\n   * The element that is added to or removed from the collection.\n   * @type {*}\n   * @api\n   */\n  this.element = opt_element;\n\n};\n\ninherits(CollectionEvent, Event);\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @fires module:ol/Collection~CollectionEvent\n * @param {Array.<T>=} opt_array Array.\n * @param {module:ol/Collection~Options=} opt_options Collection options.\n * @template T\n * @api\n */\nconst Collection = function(opt_array, opt_options) {\n\n  BaseObject.call(this);\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.unique_ = !!options.unique;\n\n  /**\n   * @private\n   * @type {!Array.<T>}\n   */\n  this.array_ = opt_array ? opt_array : [];\n\n  if (this.unique_) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      this.assertUnique_(this.array_[i], i);\n    }\n  }\n\n  this.updateLength_();\n\n};\n\ninherits(Collection, BaseObject);\n\n\n/**\n * Remove all elements from the collection.\n * @api\n */\nCollection.prototype.clear = function() {\n  while (this.getLength() > 0) {\n    this.pop();\n  }\n};\n\n\n/**\n * Add elements to the collection.  This pushes each item in the provided array\n * to the end of the collection.\n * @param {!Array.<T>} arr Array.\n * @return {module:ol/Collection.<T>} This collection.\n * @api\n */\nCollection.prototype.extend = function(arr) {\n  for (let i = 0, ii = arr.length; i < ii; ++i) {\n    this.push(arr[i]);\n  }\n  return this;\n};\n\n\n/**\n * Iterate over each element, calling the provided callback.\n * @param {function(T, number, Array.<T>): *} f The function to call\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array). The return value is ignored.\n * @api\n */\nCollection.prototype.forEach = function(f) {\n  const array = this.array_;\n  for (let i = 0, ii = array.length; i < ii; ++i) {\n    f(array[i], i, array);\n  }\n};\n\n\n/**\n * Get a reference to the underlying Array object. Warning: if the array\n * is mutated, no events will be dispatched by the collection, and the\n * collection's \"length\" property won't be in sync with the actual length\n * of the array.\n * @return {!Array.<T>} Array.\n * @api\n */\nCollection.prototype.getArray = function() {\n  return this.array_;\n};\n\n\n/**\n * Get the element at the provided index.\n * @param {number} index Index.\n * @return {T} Element.\n * @api\n */\nCollection.prototype.item = function(index) {\n  return this.array_[index];\n};\n\n\n/**\n * Get the length of this collection.\n * @return {number} The length of the array.\n * @observable\n * @api\n */\nCollection.prototype.getLength = function() {\n  return /** @type {number} */ (this.get(Property.LENGTH));\n};\n\n\n/**\n * Insert an element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\nCollection.prototype.insertAt = function(index, elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  this.array_.splice(index, 0, elem);\n  this.updateLength_();\n  this.dispatchEvent(\n    new CollectionEvent(CollectionEventType.ADD, elem));\n};\n\n\n/**\n * Remove the last element of the collection and return it.\n * Return `undefined` if the collection is empty.\n * @return {T|undefined} Element.\n * @api\n */\nCollection.prototype.pop = function() {\n  return this.removeAt(this.getLength() - 1);\n};\n\n\n/**\n * Insert the provided element at the end of the collection.\n * @param {T} elem Element.\n * @return {number} New length of the collection.\n * @api\n */\nCollection.prototype.push = function(elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  const n = this.getLength();\n  this.insertAt(n, elem);\n  return this.getLength();\n};\n\n\n/**\n * Remove the first occurrence of an element from the collection.\n * @param {T} elem Element.\n * @return {T|undefined} The removed element or undefined if none found.\n * @api\n */\nCollection.prototype.remove = function(elem) {\n  const arr = this.array_;\n  for (let i = 0, ii = arr.length; i < ii; ++i) {\n    if (arr[i] === elem) {\n      return this.removeAt(i);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Remove the element at the provided index and return it.\n * Return `undefined` if the collection does not contain this index.\n * @param {number} index Index.\n * @return {T|undefined} Value.\n * @api\n */\nCollection.prototype.removeAt = function(index) {\n  const prev = this.array_[index];\n  this.array_.splice(index, 1);\n  this.updateLength_();\n  this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n  return prev;\n};\n\n\n/**\n * Set the element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\nCollection.prototype.setAt = function(index, elem) {\n  const n = this.getLength();\n  if (index < n) {\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev));\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  } else {\n    for (let j = n; j < index; ++j) {\n      this.insertAt(j, undefined);\n    }\n    this.insertAt(index, elem);\n  }\n};\n\n\n/**\n * @private\n */\nCollection.prototype.updateLength_ = function() {\n  this.set(Property.LENGTH, this.array_.length);\n};\n\n\n/**\n * @private\n * @param {T} elem Element.\n * @param {number=} opt_except Optional index to ignore.\n */\nCollection.prototype.assertUnique_ = function(elem, opt_except) {\n  for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n    if (this.array_[i] === elem && i !== opt_except) {\n      throw new AssertionError(58);\n    }\n  }\n};\n\nexport default Collection;\n","/**\n * @module ol/MapEvent\n */\nimport {inherits} from './index.js';\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapEvent = function(type, map, opt_frameState) {\n\n  Event.call(this, type);\n\n  /**\n   * The map where the event occurred.\n   * @type {module:ol/PluggableMap}\n   * @api\n   */\n  this.map = map;\n\n  /**\n   * The frame state at the time of the event.\n   * @type {?module:ol/PluggableMap~FrameState}\n   * @api\n   */\n  this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n};\n\ninherits(MapEvent, Event);\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport {inherits} from './index.js';\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n *\n * @constructor\n * @extends {module:ol/MapEvent}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {Event} browserEvent Browser event.\n * @param {boolean=} opt_dragging Is the map currently being dragged?\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapBrowserEvent = function(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n  MapEvent.call(this, type, map, opt_frameState);\n\n  /**\n   * The original browser event.\n   * @const\n   * @type {Event}\n   * @api\n   */\n  this.originalEvent = browserEvent;\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original browser event.\n   * @type {module:ol~Pixel}\n   * @api\n   */\n  this.pixel = map.getEventPixel(browserEvent);\n\n  /**\n   * The coordinate in view projection corresponding to the original browser event.\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n  /**\n   * Indicates if the map is currently being dragged. Only set for\n   * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n   *\n   * @type {boolean}\n   * @api\n   */\n  this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n};\n\ninherits(MapBrowserEvent, MapEvent);\n\n\n/**\n * Prevents the default browser action.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault\n * @override\n * @api\n */\nMapBrowserEvent.prototype.preventDefault = function() {\n  MapEvent.prototype.preventDefault.call(this);\n  this.originalEvent.preventDefault();\n};\n\n\n/**\n * Prevents further propagation of the current event.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation\n * @override\n * @api\n */\nMapBrowserEvent.prototype.stopPropagation = function() {\n  MapEvent.prototype.stopPropagation.call(this);\n  this.originalEvent.stopPropagation();\n};\nexport default MapBrowserEvent;\n","/**\n * @module ol/has\n */\nimport {HAS_WEBGL} from './index.js';\n\nconst ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport const CANVAS_LINE_DASH = function() {\n  let has = false;\n  try {\n    has = !!document.createElement('CANVAS').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport const GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport const TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport const POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport const MSPOINTER = !!(navigator.msPointerEnabled);\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @const\n * @type {boolean}\n * @api\n */\nexport const WEBGL = HAS_WEBGL;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport {inherits} from './index.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\n/**\n * @constructor\n * @extends {module:ol/MapBrowserEvent}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @param {boolean=} opt_dragging Is the map currently being dragged?\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapBrowserPointerEvent = function(type, map, pointerEvent, opt_dragging,\n  opt_frameState) {\n\n  MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging,\n    opt_frameState);\n\n  /**\n   * @const\n   * @type {module:ol/pointer/PointerEvent}\n   */\n  this.pointerEvent = pointerEvent;\n\n};\n\ninherits(MapBrowserPointerEvent, MapBrowserEvent);\nexport default MapBrowserPointerEvent;\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/pointer/EventSource\n */\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @param {!Object.<string, function(Event)>} mapping Event mapping.\n * @constructor\n */\nconst EventSource = function(dispatcher, mapping) {\n  /**\n   * @type {module:ol/pointer/PointerEventHandler}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object.<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n\n/**\n * List of events supported by this source.\n * @return {Array.<string>} Event names\n */\nEventSource.prototype.getEvents = function() {\n  return Object.keys(this.mapping_);\n};\n\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function(eventType) {\n  return this.mapping_[eventType];\n};\nexport default EventSource;\n","/**\n * @module ol/pointer/MouseSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../index.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst MouseSource = function(dispatcher) {\n  const mapping = {\n    'mousedown': this.mousedown,\n    'mousemove': this.mousemove,\n    'mouseup': this.mouseup,\n    'mouseover': this.mouseover,\n    'mouseout': this.mouseout\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {Array.<module:ol~Pixel>}\n   */\n  this.lastTouches = [];\n};\n\ninherits(MouseSource, EventSource);\n\n\n/**\n * @type {number}\n */\nexport const POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport const POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nconst DEDUP_DIST = 25;\n\n\n/**\n * Detect if a mouse event was simulated from a touch by\n * checking if previously there was a touch event at the\n * same position.\n *\n * FIXME - Known problem with the native Android browser on\n * Samsung GT-I9100 (Android 4.1.2):\n * In case the page is scrolled, this function does not work\n * correctly when a canvas is used (WebGL or canvas renderer).\n * Mouse listeners on canvas elements (for this browser), create\n * two mouse events: One 'good' and one 'bad' one (on other browsers or\n * when a div is used, there is only one event). For the 'bad' one,\n * clientX/clientY and also pageX/pageY are wrong when the page\n * is scrolled. Because of that, this function can not detect if\n * the events were simulated from a touch event. As result, a\n * pointer event at a wrong position is dispatched, which confuses\n * the map interactions.\n * It is unclear, how one can get the correct position for the event\n * or detect that the positions are invalid.\n *\n * @private\n * @param {Event} inEvent The in event.\n * @return {boolean} True, if the event was generated by a touch.\n */\nMouseSource.prototype.isEventSimulatedFromTouch_ = function(inEvent) {\n  const lts = this.lastTouches;\n  const x = inEvent.clientX;\n  const y = inEvent.clientY;\n  for (let i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n    // simulated mouse events will be swallowed near a primary touchend\n    const dx = Math.abs(x - t[0]);\n    const dy = Math.abs(y - t[1]);\n    if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nfunction prepareEvent(inEvent, dispatcher) {\n  const e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  const pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\n/**\n * Handler for `mousedown`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mousedown = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mousemove`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mousemove = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mouseup`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseup = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      const e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n};\n\n\n/**\n * Handler for `mouseover`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseover = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mouseout`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseout = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n};\n\n\n/**\n * Dispatches a `pointercancel` event.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.cancel = function(inEvent) {\n  const e = prepareEvent(inEvent, this.dispatcher);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanupMouse();\n};\n\n\n/**\n * Remove the mouse from the list of active pointers.\n */\nMouseSource.prototype.cleanupMouse = function() {\n  delete this.pointerMap[POINTER_ID.toString()];\n};\nexport default MouseSource;\n","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../index.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst MsSource = function(dispatcher) {\n  const mapping = {\n    'MSPointerDown': this.msPointerDown,\n    'MSPointerMove': this.msPointerMove,\n    'MSPointerUp': this.msPointerUp,\n    'MSPointerOut': this.msPointerOut,\n    'MSPointerOver': this.msPointerOver,\n    'MSPointerCancel': this.msPointerCancel,\n    'MSGotPointerCapture': this.msGotPointerCapture,\n    'MSLostPointerCapture': this.msLostPointerCapture\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, MSPointerEvent|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n};\n\ninherits(MsSource, EventSource);\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @private\n * @param {MSPointerEvent} inEvent The in event.\n * @return {Object} The copied event.\n */\nMsSource.prototype.prepareEvent_ = function(inEvent) {\n  let e = inEvent;\n  if (typeof inEvent.pointerType === 'number') {\n    e = this.dispatcher.cloneEvent(inEvent, inEvent);\n    e.pointerType = POINTER_TYPES[inEvent.pointerType];\n  }\n\n  return e;\n};\n\n\n/**\n * Remove this pointer from the list of active pointers.\n * @param {number} pointerId Pointer identifier.\n */\nMsSource.prototype.cleanup = function(pointerId) {\n  delete this.pointerMap[pointerId.toString()];\n};\n\n\n/**\n * Handler for `msPointerDown`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerDown = function(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerMove`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerMove = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerUp`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerUp = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n};\n\n\n/**\n * Handler for `msPointerOut`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerOut = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerOver`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerOver = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerCancel = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n};\n\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msLostPointerCapture = function(inEvent) {\n  const e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n};\n\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msGotPointerCapture = function(inEvent) {\n  const e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n};\nexport default MsSource;\n","/**\n * @module ol/pointer/NativeSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../index.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst NativeSource = function(dispatcher) {\n  const mapping = {\n    'pointerdown': this.pointerDown,\n    'pointermove': this.pointerMove,\n    'pointerup': this.pointerUp,\n    'pointerout': this.pointerOut,\n    'pointerover': this.pointerOver,\n    'pointercancel': this.pointerCancel,\n    'gotpointercapture': this.gotPointerCapture,\n    'lostpointercapture': this.lostPointerCapture\n  };\n  EventSource.call(this, dispatcher, mapping);\n};\n\ninherits(NativeSource, EventSource);\n\n\n/**\n * Handler for `pointerdown`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerDown = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointermove`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerMove = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerup`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerUp = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerout`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerOut = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerover`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerOver = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointercancel`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerCancel = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.lostPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.gotPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\nexport default NativeSource;\n","/**\n * @module ol/pointer/PointerEvent\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../index.js';\nimport Event from '../events/Event.js';\n\n/**\n * A class for pointer events.\n *\n * This class is used as an abstraction for mouse events,\n * touch events and even native pointer events.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type The type of the event to create.\n * @param {Event} originalEvent The event.\n * @param {Object.<string, ?>=} opt_eventDict An optional dictionary of\n *    initial event properties.\n */\nconst PointerEvent = function(type, originalEvent, opt_eventDict) {\n  Event.call(this, type);\n\n  /**\n   * @const\n   * @type {Event}\n   */\n  this.originalEvent = originalEvent;\n\n  const eventDict = opt_eventDict ? opt_eventDict : {};\n\n  /**\n   * @type {number}\n   */\n  this.buttons = this.getButtons_(eventDict);\n\n  /**\n   * @type {number}\n   */\n  this.pressure = this.getPressure_(eventDict, this.buttons);\n\n  // MouseEvent related properties\n\n  /**\n   * @type {boolean}\n   */\n  this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n  /**\n   * @type {Object}\n   */\n  this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n  /**\n   * @type {number}\n   */\n  this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n  /**\n   * @type {number}\n   */\n  this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n  /**\n   * @type {boolean}\n   */\n  this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n  /**\n   * @type {number}\n   */\n  this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n  /**\n   * @type {Node}\n   */\n  this.relatedTarget = 'relatedTarget' in eventDict ?\n    eventDict['relatedTarget'] : null;\n\n  // PointerEvent related properties\n\n  /**\n   * @const\n   * @type {number}\n   */\n  this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n  /**\n   * @type {string}\n   */\n  this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n  /**\n   * @type {number}\n   */\n  this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n  /**\n   * @type {boolean}\n   */\n  this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n  // keep the semantics of preventDefault\n  if (originalEvent.preventDefault) {\n    this.preventDefault = function() {\n      originalEvent.preventDefault();\n    };\n  }\n};\n\ninherits(PointerEvent, Event);\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nlet HAS_BUTTONS = false;\n\n\n/**\n * @private\n * @param {Object.<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nPointerEvent.prototype.getButtons_ = function(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  let buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n};\n\n\n/**\n * @private\n * @param {Object.<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nPointerEvent.prototype.getPressure_ = function(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  let pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n};\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    const ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\nexport default PointerEvent;\n","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array.<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low  = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array.<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array.<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {!Array.<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to sort (modifies original).\n * @param {Function} compareFnc Comparison function.\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n","/**\n * @module ol/pointer/TouchSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../index.js';\nimport {remove} from '../array.js';\nimport EventSource from '../pointer/EventSource.js';\nimport {POINTER_ID} from '../pointer/MouseSource.js';\n\n\n/**\n * @constructor\n * @param {module:ol/pointer/PointerEventHandler} dispatcher The event handler.\n * @param {module:ol/pointer/MouseSource} mouseSource Mouse source.\n * @extends {module:ol/pointer/EventSource}\n */\nconst TouchSource = function(dispatcher, mouseSource) {\n  const mapping = {\n    'touchstart': this.touchstart,\n    'touchmove': this.touchmove,\n    'touchend': this.touchend,\n    'touchcancel': this.touchcancel\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {module:ol/pointer/MouseSource}\n   */\n  this.mouseSource = mouseSource;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.firstTouchId_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clickCount_ = 0;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.resetId_ = undefined;\n\n  /**\n   * Mouse event timeout: This should be long enough to\n   * ignore compat mouse events made by touch.\n   * @private\n   * @type {number}\n   */\n  this.dedupTimeout_ = 2500;\n};\n\ninherits(TouchSource, EventSource);\n\n\n/**\n * @type {number}\n */\nconst CLICK_COUNT_TIMEOUT = 200;\n\n\n/**\n * @type {string}\n */\nconst POINTER_TYPE = 'touch';\n\n/**\n * @private\n * @param {Touch} inTouch The in touch.\n * @return {boolean} True, if this is the primary touch.\n */\nTouchSource.prototype.isPrimaryTouch_ = function(inTouch) {\n  return this.firstTouchId_ === inTouch.identifier;\n};\n\n\n/**\n * Set primary touch if there are no pointers, or the only pointer is the mouse.\n * @param {Touch} inTouch The in touch.\n * @private\n */\nTouchSource.prototype.setPrimaryTouch_ = function(inTouch) {\n  const count = Object.keys(this.pointerMap).length;\n  if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n    this.firstTouchId_ = inTouch.identifier;\n    this.cancelResetClickCount_();\n  }\n};\n\n\n/**\n * @private\n * @param {Object} inPointer The in pointer object.\n */\nTouchSource.prototype.removePrimaryPointer_ = function(inPointer) {\n  if (inPointer.isPrimary) {\n    this.firstTouchId_ = undefined;\n    this.resetClickCount_();\n  }\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.resetClickCount_ = function() {\n  this.resetId_ = setTimeout(\n    this.resetClickCountHandler_.bind(this),\n    CLICK_COUNT_TIMEOUT);\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.resetClickCountHandler_ = function() {\n  this.clickCount_ = 0;\n  this.resetId_ = undefined;\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.cancelResetClickCount_ = function() {\n  if (this.resetId_ !== undefined) {\n    clearTimeout(this.resetId_);\n  }\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent Browser event\n * @param {Touch} inTouch Touch event\n * @return {Object} A pointer object.\n */\nTouchSource.prototype.touchToPointer_ = function(browserEvent, inTouch) {\n  const e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n  // Spec specifies that pointerId 1 is reserved for Mouse.\n  // Touch identifiers can start at 0.\n  // Add 2 to the touch identifier for compatibility.\n  e.pointerId = inTouch.identifier + 2;\n  // TODO: check if this is necessary?\n  //e.target = findTarget(e);\n  e.bubbles = true;\n  e.cancelable = true;\n  e.detail = this.clickCount_;\n  e.button = 0;\n  e.buttons = 1;\n  e.width = inTouch.webkitRadiusX || inTouch.radiusX || 0;\n  e.height = inTouch.webkitRadiusY || inTouch.radiusY || 0;\n  e.pressure = inTouch.webkitForce || inTouch.force || 0.5;\n  e.isPrimary = this.isPrimaryTouch_(inTouch);\n  e.pointerType = POINTER_TYPE;\n\n  // make sure that the properties that are different for\n  // each `Touch` object are not copied from the BrowserEvent object\n  e.clientX = inTouch.clientX;\n  e.clientY = inTouch.clientY;\n  e.screenX = inTouch.screenX;\n  e.screenY = inTouch.screenY;\n\n  return e;\n};\n\n\n/**\n * @private\n * @param {Event} inEvent Touch event\n * @param {function(Event, Object)} inFunction In function.\n */\nTouchSource.prototype.processTouches_ = function(inEvent, inFunction) {\n  const touches = Array.prototype.slice.call(inEvent.changedTouches);\n  const count = touches.length;\n  function preventDefault() {\n    inEvent.preventDefault();\n  }\n  for (let i = 0; i < count; ++i) {\n    const pointer = this.touchToPointer_(inEvent, touches[i]);\n    // forward touch preventDefaults\n    pointer.preventDefault = preventDefault;\n    inFunction.call(this, inEvent, pointer);\n  }\n};\n\n\n/**\n * @private\n * @param {TouchList} touchList The touch list.\n * @param {number} searchId Search identifier.\n * @return {boolean} True, if the `Touch` with the given id is in the list.\n */\nTouchSource.prototype.findTouch_ = function(touchList, searchId) {\n  const l = touchList.length;\n  for (let i = 0; i < l; i++) {\n    const touch = touchList[i];\n    if (touch.identifier === searchId) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * In some instances, a touchstart can happen without a touchend. This\n * leaves the pointermap in a broken state.\n * Therefore, on every touchstart, we remove the touches that did not fire a\n * touchend event.\n * To keep state globally consistent, we fire a pointercancel for\n * this \"abandoned\" touch\n *\n * @private\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.vacuumTouches_ = function(inEvent) {\n  const touchList = inEvent.touches;\n  // pointerMap.getCount() should be < touchList.length here,\n  // as the touchstart has not been processed yet.\n  const keys = Object.keys(this.pointerMap);\n  const count = keys.length;\n  if (count >= touchList.length) {\n    const d = [];\n    for (let i = 0; i < count; ++i) {\n      const key = keys[i];\n      const value = this.pointerMap[key];\n      // Never remove pointerId == 1, which is mouse.\n      // Touch identifiers are 2 smaller than their pointerId, which is the\n      // index in pointermap.\n      if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n        d.push(value.out);\n      }\n    }\n    for (let i = 0; i < d.length; ++i) {\n      this.cancelOut_(inEvent, d[i]);\n    }\n  }\n};\n\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchstart = function(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer object.\n */\nTouchSource.prototype.overDown_ = function(browserEvent, inPointer) {\n  this.pointerMap[inPointer.pointerId] = {\n    target: inPointer.target,\n    out: inPointer,\n    outTarget: inPointer.target\n  };\n  this.dispatcher.over(inPointer, browserEvent);\n  this.dispatcher.enter(inPointer, browserEvent);\n  this.dispatcher.down(inPointer, browserEvent);\n};\n\n\n/**\n * Handler for `touchmove`.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchmove = function(inEvent) {\n  inEvent.preventDefault();\n  this.processTouches_(inEvent, this.moveOverOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer.\n */\nTouchSource.prototype.moveOverOut_ = function(browserEvent, inPointer) {\n  const event = inPointer;\n  const pointer = this.pointerMap[event.pointerId];\n  // a finger drifted off the screen, ignore it\n  if (!pointer) {\n    return;\n  }\n  const outEvent = pointer.out;\n  const outTarget = pointer.outTarget;\n  this.dispatcher.move(event, browserEvent);\n  if (outEvent && outTarget !== event.target) {\n    outEvent.relatedTarget = event.target;\n    event.relatedTarget = outTarget;\n    // recover from retargeting by shadow\n    outEvent.target = outTarget;\n    if (event.target) {\n      this.dispatcher.leaveOut(outEvent, browserEvent);\n      this.dispatcher.enterOver(event, browserEvent);\n    } else {\n      // clean up case when finger leaves the screen\n      event.target = outTarget;\n      event.relatedTarget = null;\n      this.cancelOut_(browserEvent, event);\n    }\n  }\n  pointer.out = event;\n  pointer.outTarget = event.target;\n};\n\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @param {Event} inEvent The event.\n */\nTouchSource.prototype.touchend = function(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent An event.\n * @param {Object} inPointer The inPointer object.\n */\nTouchSource.prototype.upOut_ = function(browserEvent, inPointer) {\n  this.dispatcher.up(inPointer, browserEvent);\n  this.dispatcher.out(inPointer, browserEvent);\n  this.dispatcher.leave(inPointer, browserEvent);\n  this.cleanUpPointer_(inPointer);\n};\n\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchcancel = function(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer.\n */\nTouchSource.prototype.cancelOut_ = function(browserEvent, inPointer) {\n  this.dispatcher.cancel(inPointer, browserEvent);\n  this.dispatcher.out(inPointer, browserEvent);\n  this.dispatcher.leave(inPointer, browserEvent);\n  this.cleanUpPointer_(inPointer);\n};\n\n\n/**\n * @private\n * @param {Object} inPointer The inPointer object.\n */\nTouchSource.prototype.cleanUpPointer_ = function(inPointer) {\n  delete this.pointerMap[inPointer.pointerId];\n  this.removePrimaryPointer_(inPointer);\n};\n\n\n/**\n * Prevent synth mouse events from creating pointer events.\n *\n * @private\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.dedupSynthMouse_ = function(inEvent) {\n  const lts = this.mouseSource.lastTouches;\n  const t = inEvent.changedTouches[0];\n  // only the primary finger will synth mouse events\n  if (this.isPrimaryTouch_(t)) {\n    // remember x/y of last touch\n    const lt = [t.clientX, t.clientY];\n    lts.push(lt);\n\n    setTimeout(function() {\n      // remove touch after timeout\n      remove(lts, lt);\n    }, this.dedupTimeout_);\n  }\n};\nexport default TouchSource;\n","/**\n * @module ol/pointer/PointerEventHandler\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../index.js';\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport MsSource from '../pointer/MsSource.js';\nimport NativeSource from '../pointer/NativeSource.js';\nimport PointerEvent from '../pointer/PointerEvent.js';\nimport TouchSource from '../pointer/TouchSource.js';\n\n/**\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @param {Element|HTMLDocument} element Viewport element.\n */\nconst PointerEventHandler = function(element) {\n  EventTarget.call(this);\n\n  /**\n   * @const\n   * @private\n   * @type {Element|HTMLDocument}\n   */\n  this.element_ = element;\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = {};\n\n  /**\n   * @type {Object.<string, function(Event)>}\n   * @private\n   */\n  this.eventMap_ = {};\n\n  /**\n   * @type {Array.<module:ol/pointer/EventSource>}\n   * @private\n   */\n  this.eventSourceList_ = [];\n\n  this.registerSources();\n};\n\ninherits(PointerEventHandler, EventTarget);\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array.<Array>}\n */\nconst CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\n/**\n * Set up the event sources (mouse, touch and native pointers)\n * that generate pointer events.\n */\nPointerEventHandler.prototype.registerSources = function() {\n  if (POINTER) {\n    this.registerSource('native', new NativeSource(this));\n  } else if (MSPOINTER) {\n    this.registerSource('ms', new MsSource(this));\n  } else {\n    const mouseSource = new MouseSource(this);\n    this.registerSource('mouse', mouseSource);\n\n    if (TOUCH) {\n      this.registerSource('touch', new TouchSource(this, mouseSource));\n    }\n  }\n\n  // register events on the viewport element\n  this.register_();\n};\n\n\n/**\n * Add a new event source that will generate pointer events.\n *\n * @param {string} name A name for the event source\n * @param {module:ol/pointer/EventSource} source The source event.\n */\nPointerEventHandler.prototype.registerSource = function(name, source) {\n  const s = source;\n  const newEvents = s.getEvents();\n\n  if (newEvents) {\n    newEvents.forEach(function(e) {\n      const handler = s.getHandlerForEvent(e);\n\n      if (handler) {\n        this.eventMap_[e] = handler.bind(s);\n      }\n    }.bind(this));\n    this.eventSourceList_.push(s);\n  }\n};\n\n\n/**\n * Set up the events for all registered event sources.\n * @private\n */\nPointerEventHandler.prototype.register_ = function() {\n  const l = this.eventSourceList_.length;\n  for (let i = 0; i < l; i++) {\n    const eventSource = this.eventSourceList_[i];\n    this.addEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Remove all registered events.\n * @private\n */\nPointerEventHandler.prototype.unregister_ = function() {\n  const l = this.eventSourceList_.length;\n  for (let i = 0; i < l; i++) {\n    const eventSource = this.eventSourceList_[i];\n    this.removeEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Calls the right handler for a new event.\n * @private\n * @param {Event} inEvent Browser event.\n */\nPointerEventHandler.prototype.eventHandler_ = function(inEvent) {\n  const type = inEvent.type;\n  const handler = this.eventMap_[type];\n  if (handler) {\n    handler(inEvent);\n  }\n};\n\n\n/**\n * Setup listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\nPointerEventHandler.prototype.addEvents_ = function(events) {\n  events.forEach(function(eventName) {\n    listen(this.element_, eventName, this.eventHandler_, this);\n  }.bind(this));\n};\n\n\n/**\n * Unregister listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\nPointerEventHandler.prototype.removeEvents_ = function(events) {\n  events.forEach(function(e) {\n    unlisten(this.element_, e, this.eventHandler_, this);\n  }.bind(this));\n};\n\n\n/**\n * Returns a snapshot of inEvent, with writable properties.\n *\n * @param {Event} event Browser event.\n * @param {Event|Touch} inEvent An event that contains\n *    properties to copy.\n * @return {Object} An object containing shallow copies of\n *    `inEvent`'s properties.\n */\nPointerEventHandler.prototype.cloneEvent = function(event, inEvent) {\n  const eventCopy = {};\n  for (let i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n    const p = CLONE_PROPS[i][0];\n    eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n  }\n\n  return eventCopy;\n};\n\n\n// EVENTS\n\n\n/**\n * Triggers a 'pointerdown' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.down = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n};\n\n\n/**\n * Triggers a 'pointermove' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.move = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerup' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.up = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERUP, data, event);\n};\n\n\n/**\n * Triggers a 'pointerenter' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.enter = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(PointerEventType.POINTERENTER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerleave' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.leave = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerover' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.over = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(PointerEventType.POINTEROVER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerout' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.out = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(PointerEventType.POINTEROUT, data, event);\n};\n\n\n/**\n * Triggers a 'pointercancel' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.cancel = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n};\n\n\n/**\n * Triggers a combination of 'pointerout' and 'pointerleave' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.leaveOut = function(data, event) {\n  this.out(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.leave(data, event);\n  }\n};\n\n\n/**\n * Triggers a combination of 'pointerover' and 'pointerevents' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.enterOver = function(data, event) {\n  this.over(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.enter(data, event);\n  }\n};\n\n\n/**\n * @private\n * @param {Element} container The container element.\n * @param {Element} contained The contained element.\n * @return {boolean} Returns true if the container element\n *   contains the other element.\n */\nPointerEventHandler.prototype.contains_ = function(container, contained) {\n  if (!container || !contained) {\n    return false;\n  }\n  return container.contains(contained);\n};\n\n\n// EVENT CREATION AND TRACKING\n/**\n * Creates a new Event of type `inType`, based on the information in\n * `data`.\n *\n * @param {string} inType A string representing the type of event to create.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n * @return {module:ol/pointer/PointerEvent} A PointerEvent of type `inType`.\n */\nPointerEventHandler.prototype.makeEvent = function(inType, data, event) {\n  return new PointerEvent(inType, event, data);\n};\n\n\n/**\n * Make and dispatch an event in one call.\n * @param {string} inType A string representing the type of event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.fireEvent = function(inType, data, event) {\n  const e = this.makeEvent(inType, data, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Creates a pointer event from a native pointer event\n * and dispatches this event.\n * @param {Event} event A platform event with a target.\n */\nPointerEventHandler.prototype.fireNativeEvent = function(event) {\n  const e = this.makeEvent(event.type, event, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Wrap a native mouse event into a pointer event.\n * This proxy method is required for the legacy IE support.\n * @param {string} eventType The pointer event type.\n * @param {Event} event The event.\n * @return {module:ol/pointer/PointerEvent} The wrapped event.\n */\nPointerEventHandler.prototype.wrapMouseEvent = function(eventType, event) {\n  const pointerEvent = this.makeEvent(\n    eventType, MouseSource.prepareEvent(event, this), event);\n  return pointerEvent;\n};\n\n\n/**\n * @inheritDoc\n */\nPointerEventHandler.prototype.disposeInternal = function() {\n  this.unregister_();\n  EventTarget.prototype.disposeInternal.call(this);\n};\n\n\nexport default PointerEventHandler;\n","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {inherits} from './index.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\n/**\n * @param {module:ol/PluggableMap} map The map with the viewport to\n * listen to events on.\n * @param {number=} moveTolerance The minimal distance the pointer must travel\n * to trigger a move.\n * @constructor\n * @extends {module:ol/events/EventTarget}\n */\nconst MapBrowserEventHandler = function(map, moveTolerance) {\n\n  EventTarget.call(this);\n\n  /**\n   * This is the element that we will listen to the real events on.\n   * @type {module:ol/PluggableMap}\n   * @private\n   */\n  this.map_ = map;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.clickTimeoutId_ = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.dragging_ = false;\n\n  /**\n   * @type {!Array.<module:ol/events~EventsKey>}\n   * @private\n   */\n  this.dragListenerKeys_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.moveTolerance_ = moveTolerance ?\n    moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n  /**\n   * The most recent \"down\" type event (or null if none have occurred).\n   * Set on pointerdown.\n   * @type {module:ol/pointer/PointerEvent}\n   * @private\n   */\n  this.down_ = null;\n\n  const element = this.map_.getViewport();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.activePointers_ = 0;\n\n  /**\n   * @type {!Object.<number, boolean>}\n   * @private\n   */\n  this.trackedTouches_ = {};\n\n  /**\n   * Event handler which generates pointer events for\n   * the viewport element.\n   *\n   * @type {module:ol/pointer/PointerEventHandler}\n   * @private\n   */\n  this.pointerEventHandler_ = new PointerEventHandler(element);\n\n  /**\n   * Event handler which generates pointer events for\n   * the document (used when dragging).\n   *\n   * @type {module:ol/pointer/PointerEventHandler}\n   * @private\n   */\n  this.documentPointerEventHandler_ = null;\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n    PointerEventType.POINTERDOWN,\n    this.handlePointerDown_, this);\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n    PointerEventType.POINTERMOVE,\n    this.relayEvent_, this);\n\n};\n\ninherits(MapBrowserEventHandler, EventTarget);\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.emulateClick_ = function(pointerEvent) {\n  let newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.CLICK, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n  if (this.clickTimeoutId_ !== 0) {\n    // double-click\n    clearTimeout(this.clickTimeoutId_);\n    this.clickTimeoutId_ = 0;\n    newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n  } else {\n    // click\n    this.clickTimeoutId_ = setTimeout(function() {\n      this.clickTimeoutId_ = 0;\n      const newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    }.bind(this), 250);\n  }\n};\n\n\n/**\n * Keeps track on how many pointers are currently active.\n *\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.updateActivePointers_ = function(pointerEvent) {\n  const event = pointerEvent;\n\n  if (event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL) {\n    delete this.trackedTouches_[event.pointerId];\n  } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n    this.trackedTouches_[event.pointerId] = true;\n  }\n  this.activePointers_ = Object.keys(this.trackedTouches_).length;\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerUp_ = function(pointerEvent) {\n  this.updateActivePointers_(pointerEvent);\n  const newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n\n  // We emulate click events on left mouse button click, touch contact, and pen\n  // contact. isMouseActionButton returns true in these cases (evt.button is set\n  // to 0).\n  // See http://www.w3.org/TR/pointerevents/#button-states\n  // We only fire click, singleclick, and doubleclick if nobody has called\n  // event.stopPropagation() or event.preventDefault().\n  if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n    this.emulateClick_(this.down_);\n  }\n\n  if (this.activePointers_ === 0) {\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n    this.dragging_ = false;\n    this.down_ = null;\n    this.documentPointerEventHandler_.dispose();\n    this.documentPointerEventHandler_ = null;\n  }\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @return {boolean} If the left mouse button was pressed.\n * @private\n */\nMapBrowserEventHandler.prototype.isMouseActionButton_ = function(pointerEvent) {\n  return pointerEvent.button === 0;\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerDown_ = function(pointerEvent) {\n  this.updateActivePointers_(pointerEvent);\n  const newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n\n  this.down_ = pointerEvent;\n\n  if (this.dragListenerKeys_.length === 0) {\n    /* Set up a pointer event handler on the `document`,\n     * which is required when the pointer is moved outside\n     * the viewport when dragging.\n     */\n    this.documentPointerEventHandler_ =\n        new PointerEventHandler(document);\n\n    this.dragListenerKeys_.push(\n      listen(this.documentPointerEventHandler_,\n        MapBrowserEventType.POINTERMOVE,\n        this.handlePointerMove_, this),\n      listen(this.documentPointerEventHandler_,\n        MapBrowserEventType.POINTERUP,\n        this.handlePointerUp_, this),\n      /* Note that the listener for `pointercancel is set up on\n       * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n       * the `pointerup` and `pointermove` listeners.\n       *\n       * The reason for this is the following: `TouchSource.vacuumTouches_()`\n       * issues `pointercancel` events, when there was no `touchend` for a\n       * `touchstart`. Now, let's say a first `touchstart` is registered on\n       * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n       * But `documentPointerEventHandler_` doesn't know about the first\n       * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n       * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n       * only registered there.\n       */\n      listen(this.pointerEventHandler_,\n        MapBrowserEventType.POINTERCANCEL,\n        this.handlePointerUp_, this)\n    );\n  }\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerMove_ = function(pointerEvent) {\n  // Between pointerdown and pointerup, pointermove events are triggered.\n  // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n  // moved a significant distance.\n  if (this.isMoving_(pointerEvent)) {\n    this.dragging_ = true;\n    const newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n      this.dragging_);\n    this.dispatchEvent(newEvent);\n  }\n\n  // Some native android browser triggers mousemove events during small period\n  // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n  // https://code.google.com/p/android/issues/detail?id=19827\n  // ex: Galaxy Tab P3110 + Android 4.1.1\n  pointerEvent.preventDefault();\n};\n\n\n/**\n * Wrap and relay a pointer event.  Note that this requires that the type\n * string for the MapBrowserPointerEvent matches the PointerEvent type.\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.relayEvent_ = function(pointerEvent) {\n  const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n  this.dispatchEvent(new MapBrowserPointerEvent(\n    pointerEvent.type, this.map_, pointerEvent, dragging));\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @return {boolean} Is moving.\n * @private\n */\nMapBrowserEventHandler.prototype.isMoving_ = function(pointerEvent) {\n  return this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n};\n\n\n/**\n * @inheritDoc\n */\nMapBrowserEventHandler.prototype.disposeInternal = function() {\n  if (this.relayedListenerKey_) {\n    unlistenByKey(this.relayedListenerKey_);\n    this.relayedListenerKey_ = null;\n  }\n  if (this.pointerdownListenerKey_) {\n    unlistenByKey(this.pointerdownListenerKey_);\n    this.pointerdownListenerKey_ = null;\n  }\n\n  this.dragListenerKeys_.forEach(unlistenByKey);\n  this.dragListenerKeys_.length = 0;\n\n  if (this.documentPointerEventHandler_) {\n    this.documentPointerEventHandler_.dispose();\n    this.documentPointerEventHandler_ = null;\n  }\n  if (this.pointerEventHandler_) {\n    this.pointerEventHandler_.dispose();\n    this.pointerEventHandler_ = null;\n  }\n  EventTarget.prototype.disposeInternal.call(this);\n};\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * @see http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * @see http://hg.python.org/cpython/file/2.7/Lib/heapq.py\n *\n * @constructor\n * @param {function(T): number} priorityFunction Priority function.\n * @param {function(T): string} keyFunction Key function.\n * @struct\n * @template T\n */\nconst PriorityQueue = function(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array.<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object.<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function() {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function() {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  const elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function(element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  const priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function() {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function(index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function(index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function(index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function() {\n  let i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function() {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function(key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function(element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function(index) {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const count = elements.length;\n  const element = elements[index];\n  const priority = priorities[index];\n  const startIndex = index;\n\n  while (index < (count >> 1)) {\n    const lIndex = this.getLeftChildIndex_(index);\n    const rIndex = this.getRightChildIndex_(index);\n\n    const smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function(startIndex, index) {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const element = elements[index];\n  const priority = priorities[index];\n\n  while (index > startIndex) {\n    const parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function() {\n  const priorityFunction = this.priorityFunction_;\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  let index = 0;\n  const n = elements.length;\n  let element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport {inherits} from './index.js';\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(module:ol/Tile, string, module:ol/coordinate~Coordinate, number): number} PriorityFunction\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/structs/PriorityQueue.<Array>}\n * @param {module:ol/TileQueue~PriorityFunction} tilePriorityFunction\n *     Tile priority function.\n * @param {function(): ?} tileChangeCallback\n *     Function called on each tile change event.\n * @struct\n */\nconst TileQueue = function(tilePriorityFunction, tileChangeCallback) {\n\n  PriorityQueue.call(\n    this,\n    /**\n     * @param {Array} element Element.\n     * @return {number} Priority.\n     */\n    function(element) {\n      return tilePriorityFunction.apply(null, element);\n    },\n    /**\n     * @param {Array} element Element.\n     * @return {string} Key.\n     */\n    function(element) {\n      return (/** @type {module:ol/Tile} */ (element[0]).getKey());\n    });\n\n  /**\n   * @private\n   * @type {function(): ?}\n   */\n  this.tileChangeCallback_ = tileChangeCallback;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tilesLoading_ = 0;\n\n  /**\n   * @private\n   * @type {!Object.<string,boolean>}\n   */\n  this.tilesLoadingKeys_ = {};\n\n};\n\ninherits(TileQueue, PriorityQueue);\n\n\n/**\n * @inheritDoc\n */\nTileQueue.prototype.enqueue = function(element) {\n  const added = PriorityQueue.prototype.enqueue.call(this, element);\n  if (added) {\n    const tile = element[0];\n    listen(tile, EventType.CHANGE, this.handleTileChange, this);\n  }\n  return added;\n};\n\n\n/**\n * @return {number} Number of tiles loading.\n */\nTileQueue.prototype.getTilesLoading = function() {\n  return this.tilesLoading_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nTileQueue.prototype.handleTileChange = function(event) {\n  const tile = /** @type {module:ol/Tile} */ (event.target);\n  const state = tile.getState();\n  if (state === TileState.LOADED || state === TileState.ERROR ||\n      state === TileState.EMPTY || state === TileState.ABORT) {\n    unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n    const tileKey = tile.getKey();\n    if (tileKey in this.tilesLoadingKeys_) {\n      delete this.tilesLoadingKeys_[tileKey];\n      --this.tilesLoading_;\n    }\n    this.tileChangeCallback_();\n  }\n};\n\n\n/**\n * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n * @param {number} maxNewLoads Maximum number of new tiles to load.\n */\nTileQueue.prototype.loadMoreTiles = function(maxTotalLoading, maxNewLoads) {\n  let newLoads = 0;\n  let abortedTiles = false;\n  let state, tile, tileKey;\n  while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n         this.getCount() > 0) {\n    tile = /** @type {module:ol/Tile} */ (this.dequeue()[0]);\n    tileKey = tile.getKey();\n    state = tile.getState();\n    if (state === TileState.ABORT) {\n      abortedTiles = true;\n    } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n      this.tilesLoadingKeys_[tileKey] = true;\n      ++this.tilesLoading_;\n      ++newLoads;\n      tile.load();\n    }\n  }\n  if (newLoads === 0 && abortedTiles) {\n    // Do not stop the render loop when all wanted tiles were aborted due to\n    // a small, saturated tile cache.\n    this.tileChangeCallback_();\n  }\n};\nexport default TileQueue;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh  = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      const y = Math.exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array.<Array.<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array.<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): (module:ol/coordinate~Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate=} center Center.\n     * @return {module:ol/coordinate~Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate=} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array.<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @return {module:ol/coordinate~Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {module:ol/geom/Circle} circle The circle.\n * @return {module:ol/coordinate~Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + r * dx / d;\n  const y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment The two coordinates\n * of the segment.\n * @return {module:ol/coordinate~Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {module:ol/coordinate~Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {module:ol/coordinate~CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate of the point.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array.<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array.<number>} xs Xs.\n * @param {Array.<number>} ys Ys.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @private\n * @return {module:ol/extent~Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {module:ol/extent~Extent} extent Extent to clone.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @return {module:ol/extent/Relationship} The relationship (bitwise compare with\n *     module:ol/extent/Relationship~Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {module:ol/extent~Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {module:ol/extent~Extent} extent1 The extent to be modified.\n * @param {module:ol/extent~Extent} extent2 The extent that will be included in the first.\n * @return {module:ol/extent~Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this:T, module:ol/coordinate~Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  let val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent/Corner} corner Corner.\n * @return {module:ol/coordinate~Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return (\n    /** @type {!module:ol/coordinate~Coordinate} */ (coordinate)\n  );\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  const dx = resolution * size[0] / 2;\n  const dy = resolution * size[1] / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @param {module:ol/extent~Extent=} opt_extent Optional extent to populate with intersection.\n * @return {module:ol/extent~Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/size~Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} start Segment start coordinate.\n * @param {module:ol/coordinate~Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/proj~TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  const coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  const xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  const ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array.<number>} anchor Rotation anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array.<number>} anchor Scale anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {module:ol/coordinate~Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {module:ol/coordinate~Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  const lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object.<module:ol/proj/Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from '../proj/Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {module:ol/proj/Units|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {module:ol/extent~Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {module:ol/extent~Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, module:ol/coordinate~Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{module:ol/coordinate~Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use proj4js, aliases can be added using `proj4.defs()`; see\n * [documentation](https://github.com/proj4js/proj4js). To set an alternative\n * namespace for proj4, use {@link module:ol/proj~setProj4}.\n *\n * @constructor\n * @param {module:ol/proj/Projection~Options} options Projection options.\n * @struct\n * @api\n */\nconst Projection = function(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {module:ol/proj/Units}\n   */\n  this.units_ = /** @type {module:ol/proj/Units} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, module:ol/coordinate~Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function() {\n  return this.canWrapX_;\n};\n\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function() {\n  return this.code_;\n};\n\n\n/**\n * Get the validity extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * Get the units of this projection.\n * @return {module:ol/proj/Units} Units.\n * @api\n */\nProjection.prototype.getUnits = function() {\n  return this.units_;\n};\n\n\n/**\n * Get the amount of meters per unit of this projection.  If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function() {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n\n/**\n * Get the world extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function() {\n  return this.worldExtent_;\n};\n\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *     or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *     \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function() {\n  return this.axisOrientation_;\n};\n\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function() {\n  return this.global_;\n};\n\n\n/**\n* Set if the projection is a global projection which spans the whole world\n* @param {boolean} global Whether the projection is global.\n* @api\n*/\nProjection.prototype.setGlobal = function(global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n\n/**\n * @return {module:ol/tilegrid/TileGrid} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function() {\n  return this.defaultTileGrid_;\n};\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function(tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n\n/**\n * Set the validity extent for this projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function(extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n\n/**\n * Set the world extent for this projection.\n * @param {module:ol/extent~Extent} worldExtent World extent\n *     [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function(worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, module:ol/coordinate~Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function(func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, module:ol/coordinate~Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function() {\n  return this.getPointResolutionFunc_;\n};\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport {inherits} from '../index.js';\nimport {cosh} from '../math.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n *\n * @constructor\n * @extends {module:ol/proj/Projection}\n * @param {string} code Code.\n */\nfunction EPSG3857Projection(code) {\n  Projection.call(this, {\n    code: code,\n    units: Units.METERS,\n    extent: EXTENT,\n    global: true,\n    worldExtent: WORLD_EXTENT,\n    getPointResolution: function(resolution, point) {\n      return resolution / cosh(point[1] / RADIUS);\n    }\n  });\n}\ninherits(EPSG3857Projection, Projection);\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  const halfSize = HALF_SIZE;\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    let y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport {inherits} from '../index.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n *\n * @constructor\n * @extends {module:ol/proj/Projection}\n * @param {string} code Code.\n * @param {string=} opt_axisOrientation Axis orientation.\n */\nfunction EPSG4326Projection(code, opt_axisOrientation) {\n  Projection.call(this, {\n    code: code,\n    units: Units.DEGREES,\n    extent: EXTENT,\n    axisOrientation: opt_axisOrientation,\n    global: true,\n    metersPerUnit: METERS_PER_UNIT,\n    worldExtent: EXTENT\n  });\n}\ninherits(EPSG4326Projection, Projection);\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object.<string, module:ol/proj/Projection>}\n */\nlet cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {module:ol/proj/Projection} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {module:ol/proj/Projection} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object.<string, Object.<string, module:ol/proj~TransformFunction>>}\n */\nlet transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} source Source.\n * @param {module:ol/proj/Projection} destination Destination.\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {module:ol/proj/Projection} source Source projection.\n * @param {module:ol/proj/Projection} destination Destination projection.\n * @return {module:ol/proj~TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {module:ol/proj~TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the {@link http://proj4js.org/}\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * {@link https://epsg.io/}, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {module:ol/proj/Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array.<number>, Array.<number>=, number=): Array.<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {module:ol/proj/Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {module:ol/proj~ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {module:ol/proj/Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  let projection = null;\n  if (projectionLike instanceof Projection) {\n    projection = projectionLike;\n  } else if (typeof projectionLike === 'string') {\n    const code = projectionLike;\n    projection = projections.get(code);\n  }\n  return projection;\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {module:ol/proj~ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {module:ol/coordinate~Coordinate} point Point to find adjusted resolution at.\n * @param {module:ol/proj/Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    const units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      let vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      const metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array.<module:ol/proj/Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array.<module:ol/proj/Projection>} projections2 Projections with equal\n *     meaning.\n * @param {module:ol/proj~TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {module:ol/proj~TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {module:ol/proj/Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {module:ol/proj/Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {module:ol/proj/Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} coordTransform Coordinate\n *     transform.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array.<number>} input Input.\n     * @param {Array.<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array.<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {module:ol/proj~ProjectionLike} source Source projection.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {module:ol/coordinate~Coordinate} coordinate Projected coordinate.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {module:ol/proj/Projection} projection1 Projection 1.\n * @param {module:ol/proj/Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} sourceProjection Source Projection object.\n * @param {module:ol/proj/Projection} destinationProjection Destination Projection\n *     object.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {module:ol/proj~ProjectionLike} source Source.\n * @param {module:ol/proj~ProjectionLike} destination Destination.\n * @return {module:ol/proj~TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {module:ol/extent~Extent} extent The extent to transform.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/extent~Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/proj/Projection} sourceProjection Source projection.\n * @param {module:ol/proj/Projection} destinationProjection Destination projection.\n * @return {module:ol/coordinate~Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  const transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array.<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {module:ol/transform~Transform}\n */\nconst tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!module:ol/transform~Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!module:ol/transform~Transform} transform1 Transform parameters of matrix 1.\n * @param {!module:ol/transform~Transform} transform2 Transform parameters of matrix 2.\n * @return {!module:ol/transform~Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!module:ol/transform~Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!module:ol/transform~Transform} transform1 Matrix to set transform to.\n * @param {!module:ol/transform~Transform} transform2 Matrix to set transform from.\n * @return {!module:ol/transform~Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {module:ol/transform~Transform} transform The transformation.\n * @param {module:ol/coordinate~Coordinate|module:ol~Pixel} coordinate The coordinate to transform.\n * @return {module:ol/coordinate~Coordinate|module:ol~Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!module:ol/transform~Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!module:ol/transform~Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!module:ol/transform~Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!module:ol/transform~Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!module:ol/transform~Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  const det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = transform[0];\n  const b = transform[1];\n  const c = transform[2];\n  const d = transform[3];\n  const e = transform[4];\n  const f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!module:ol/transform~Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport {inherits} from '../index.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {FALSE} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @api\n */\nconst Geometry = function() {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = createEmpty();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.extentRevision_ = -1;\n\n  /**\n   * @protected\n   * @type {Object.<string, module:ol/geom/Geometry>}\n   */\n  this.simplifiedGeometryCache = {};\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.simplifiedGeometryRevision = 0;\n\n};\n\ninherits(Geometry, BaseObject);\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n\n/**\n * Make a complete copy of the geometry.\n * @abstract\n * @return {!module:ol/geom/Geometry} Clone.\n */\nGeometry.prototype.clone = function() {};\n\n\n/**\n * @abstract\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/coordinate~Coordinate} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @return {number} Minimum squared distance.\n */\nGeometry.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {};\n\n\n/**\n * Return the closest point of the geometry to the passed point as\n * {@link module:ol/coordinate~Coordinate coordinate}.\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/coordinate~Coordinate=} opt_closestPoint Closest point.\n * @return {module:ol/coordinate~Coordinate} Closest point.\n * @api\n */\nGeometry.prototype.getClosestPoint = function(point, opt_closestPoint) {\n  const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n  this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n  return closestPoint;\n};\n\n\n/**\n * Returns true if this geometry includes the specified coordinate. If the\n * coordinate is on the boundary of the geometry, returns false.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} Contains coordinate.\n * @api\n */\nGeometry.prototype.intersectsCoordinate = function(coordinate) {\n  return this.containsXY(coordinate[0], coordinate[1]);\n};\n\n\n/**\n * @abstract\n * @param {module:ol/extent~Extent} extent Extent.\n * @protected\n * @return {module:ol/extent~Extent} extent Extent.\n */\nGeometry.prototype.computeExtent = function(extent) {};\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * Get the extent of the geometry.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} extent Extent.\n * @api\n */\nGeometry.prototype.getExtent = function(opt_extent) {\n  if (this.extentRevision_ != this.getRevision()) {\n    this.extent_ = this.computeExtent(this.extent_);\n    this.extentRevision_ = this.getRevision();\n  }\n  return returnOrUpdate(this.extent_, opt_extent);\n};\n\n\n/**\n * Rotate the geometry around a given coordinate. This modifies the geometry\n * coordinates in place.\n * @abstract\n * @param {number} angle Rotation angle in radians.\n * @param {module:ol/coordinate~Coordinate} anchor The rotation center.\n * @api\n */\nGeometry.prototype.rotate = function(angle, anchor) {};\n\n\n/**\n * Scale the geometry (with an optional origin).  This modifies the geometry\n * coordinates in place.\n * @abstract\n * @param {number} sx The scaling factor in the x-direction.\n * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n *     sx).\n * @param {module:ol/coordinate~Coordinate=} opt_anchor The scale origin (defaults to the center\n *     of the geometry extent).\n * @api\n */\nGeometry.prototype.scale = function(sx, opt_sy, opt_anchor) {};\n\n\n/**\n * Create a simplified version of this geometry.  For linestrings, this uses\n * the the {@link\n * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n * Douglas Peucker} algorithm.  For polygons, a quantization-based\n * simplification is used to preserve topology.\n * @function\n * @param {number} tolerance The tolerance distance for simplification.\n * @return {module:ol/geom/Geometry} A new, simplified version of the original\n *     geometry.\n * @api\n */\nGeometry.prototype.simplify = function(tolerance) {\n  return this.getSimplifiedGeometry(tolerance * tolerance);\n};\n\n\n/**\n * Create a simplified version of this geometry using the Douglas Peucker\n * algorithm.\n * @see https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n * @abstract\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/Geometry} Simplified geometry.\n */\nGeometry.prototype.getSimplifiedGeometry = function(squaredTolerance) {};\n\n\n/**\n * Get the type of this geometry.\n * @abstract\n * @return {module:ol/geom/GeometryType} Geometry type.\n */\nGeometry.prototype.getType = function() {};\n\n\n/**\n * Apply a transform function to each coordinate of the geometry.\n * The geometry is modified in place.\n * If you do not want the geometry modified in place, first `clone()` it and\n * then use this function on the clone.\n * @abstract\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nGeometry.prototype.applyTransform = function(transformFn) {};\n\n\n/**\n * Test if the geometry and the passed extent intersect.\n * @abstract\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} `true` if the geometry and the extent intersect.\n */\nGeometry.prototype.intersectsExtent = function(extent) {};\n\n\n/**\n * Translate the geometry.  This modifies the geometry coordinates in place.  If\n * instead you want a new geometry, first `clone()` this geometry.\n * @abstract\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n */\nGeometry.prototype.translate = function(deltaX, deltaY) {};\n\n\n/**\n * Transform each coordinate of the geometry from one coordinate reference\n * system to another. The geometry is modified in place.\n * For example, a line will be transformed to a line and a circle to a circle.\n * If you do not want the geometry modified in place, first `clone()` it and\n * then use this function on the clone.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Geometry} This geometry.  Note that original geometry is\n *     modified in place.\n * @api\n */\nGeometry.prototype.transform = function(source, destination) {\n  source = getProjection(source);\n  const transformFn = source.getUnits() == Units.TILE_PIXELS ?\n    function(inCoordinates, outCoordinates, stride) {\n      const pixelExtent = source.getExtent();\n      const projectedExtent = source.getWorldExtent();\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(tmpTransform,\n        projectedExtent[0], projectedExtent[3],\n        scale, -scale, 0,\n        0, 0);\n      transform2D(inCoordinates, 0, inCoordinates.length, stride,\n        tmpTransform, outCoordinates);\n      return getTransform(source, destination)(inCoordinates, outCoordinates, stride);\n    } :\n    getTransform(source, destination);\n  this.applyTransform(transformFn);\n  return this;\n};\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {inherits} from '../index.js';\nimport {FALSE} from '../functions.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from '../geom/flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/geom/Geometry}\n * @api\n */\nconst SimpleGeometry = function() {\n\n  Geometry.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/geom/GeometryLayout}\n   */\n  this.layout = GeometryLayout.XY;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.stride = 2;\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.flatCoordinates = null;\n\n};\n\ninherits(SimpleGeometry, Geometry);\n\n\n/**\n * @param {number} stride Stride.\n * @return {module:ol/geom/GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {module:ol/geom/GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.computeExtent = function(extent) {\n  return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n    0, this.flatCoordinates.length, this.stride, extent);\n};\n\n\n/**\n * @abstract\n * @return {Array} Coordinates.\n */\nSimpleGeometry.prototype.getCoordinates = function() {};\n\n\n/**\n * Return the first coordinate of the geometry.\n * @return {module:ol/coordinate~Coordinate} First coordinate.\n * @api\n */\nSimpleGeometry.prototype.getFirstCoordinate = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Flat coordinates.\n */\nSimpleGeometry.prototype.getFlatCoordinates = function() {\n  return this.flatCoordinates;\n};\n\n\n/**\n * Return the last coordinate of the geometry.\n * @return {module:ol/coordinate~Coordinate} Last point.\n * @api\n */\nSimpleGeometry.prototype.getLastCoordinate = function() {\n  return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n};\n\n\n/**\n * Return the {@link module:ol/geom/GeometryLayout~GeometryLayout layout} of the geometry.\n * @return {module:ol/geom/GeometryLayout} Layout.\n * @api\n */\nSimpleGeometry.prototype.getLayout = function() {\n  return this.layout;\n};\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  // If squaredTolerance is negative or if we know that simplification will not\n  // have any effect then just return this.\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometry =\n        this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      this.simplifiedGeometryCache[key] = simplifiedGeometry;\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/SimpleGeometry} Simplified geometry.\n * @protected\n */\nSimpleGeometry.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  return this;\n};\n\n\n/**\n * @return {number} Stride.\n */\nSimpleGeometry.prototype.getStride = function() {\n  return this.stride;\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @protected\n */\nSimpleGeometry.prototype.setFlatCoordinatesInternal = function(layout, flatCoordinates) {\n  this.stride = getStrideForLayout(layout);\n  this.layout = layout;\n  this.flatCoordinates = flatCoordinates;\n};\n\n\n/**\n * @abstract\n * @param {Array} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n */\nSimpleGeometry.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout|undefined} layout Layout.\n * @param {Array} coordinates Coordinates.\n * @param {number} nesting Nesting.\n * @protected\n */\nSimpleGeometry.prototype.setLayout = function(layout, coordinates, nesting) {\n  /** @type {number} */\n  let stride;\n  if (layout) {\n    stride = getStrideForLayout(layout);\n  } else {\n    for (let i = 0; i < nesting; ++i) {\n      if (coordinates.length === 0) {\n        this.layout = GeometryLayout.XY;\n        this.stride = 2;\n        return;\n      } else {\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n    }\n    stride = coordinates.length;\n    layout = getLayoutForStride(stride);\n  }\n  this.layout = layout;\n  this.stride = stride;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.applyTransform = function(transformFn) {\n  if (this.flatCoordinates) {\n    transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.rotate = function(angle, anchor) {\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    rotate(\n      flatCoordinates, 0, flatCoordinates.length,\n      stride, angle, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let sy = opt_sy;\n  if (sy === undefined) {\n    sy = sx;\n  }\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    scale(\n      flatCoordinates, 0, flatCoordinates.length,\n      stride, sx, sy, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.translate = function(deltaX, deltaY) {\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    translate(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      deltaX, deltaY, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} simpleGeometry Simple geometry.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array.<number>=} opt_ends Ends.\n * @return {Array.<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<number>>=} opt_endss Endss.\n * @return {Array.<Array.<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array.<module:ol/coordinate~Coordinate>=} opt_coordinates Coordinates.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  const coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array.<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array.<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  const simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array.<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array.<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {inherits} from '../index.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRing as linearRingArea} from '../geom/flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst LinearRing = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(LinearRing, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/LinearRing} Clone.\n * @override\n * @api\n */\nLinearRing.prototype.clone = function() {\n  const linearRing = new LinearRing(null);\n  linearRing.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return linearRing;\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestPoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Return the area of the linear ring on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nLinearRing.prototype.getArea = function() {\n  return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the coordinates of the linear ring.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nLinearRing.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    squaredTolerance, simplifiedFlatCoordinates, 0);\n  const simplifiedLinearRing = new LinearRing(null);\n  simplifiedLinearRing.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates);\n  return simplifiedLinearRing;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLinearRing.prototype.getType = function() {\n  return GeometryType.LINEAR_RING;\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.intersectsExtent = function(extent) {};\n\n\n/**\n * Set the coordinates of the linear ring.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nLinearRing.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nLinearRing.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Point = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(Point, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Point} Clone.\n * @override\n * @api\n */\nPoint.prototype.clone = function() {\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return point;\n};\n\n\n/**\n * @inheritDoc\n */\nPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n  if (squaredDistance < minSquaredDistance) {\n    const stride = this.stride;\n    for (let i = 0; i < stride; ++i) {\n      closestPoint[i] = flatCoordinates[i];\n    }\n    closestPoint.length = stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * Return the coordinate of the point.\n * @return {module:ol/coordinate~Coordinate} Coordinates.\n * @override\n * @api\n */\nPoint.prototype.getCoordinates = function() {\n  return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n};\n\n\n/**\n * @inheritDoc\n */\nPoint.prototype.computeExtent = function(extent) {\n  return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.getType = function() {\n  return GeometryType.POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.intersectsExtent = function(extent) {\n  return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  const outside = forEachCorner(extent,\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from '../flat/contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array.<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @return {Array.<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from '../flat/contains.js';\nimport {forEach as forEachSegment} from '../flat/segments.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {module:ol/coordinate~Coordinate} point1 Start point.\n     * @param {module:ol/coordinate~Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from '../flat/reverse.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    const reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from '../geom/flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingsContainsXY} from '../geom/flat/contains.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointOfArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from '../geom/flat/orient.js';\nimport {quantizeArray} from '../geom/flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Array of linear\n *     rings that define the polygon. The first linear ring of the array\n *     defines the outer-boundary or surface of the polygon. Each subsequent\n *     linear ring defines a hole in the surface of the polygon. A linear ring\n *     is an array of vertices' coordinates where the first coordinate and the\n *     last are equivalent.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Polygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointRevision_ = -1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.flatInteriorPoint_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(Polygon, SimpleGeometry);\n\n\n/**\n * Append the passed linear ring to this polygon.\n * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n * @api\n */\nPolygon.prototype.appendLinearRing = function(linearRing) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Polygon} Clone.\n * @override\n * @api\n */\nPolygon.prototype.clone = function() {\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return polygon;\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestArrayPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.containsXY = function(x, y) {\n  return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the polygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nPolygon.prototype.getArea = function() {\n  return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n * @override\n * @api\n */\nPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    orientLinearRings(\n      flatCoordinates, 0, this.ends_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return inflateCoordinatesArray(\n    flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nPolygon.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * @return {Array.<number>} Interior point.\n */\nPolygon.prototype.getFlatInteriorPoint = function() {\n  if (this.flatInteriorPointRevision_ != this.getRevision()) {\n    const flatCenter = getCenter(this.getExtent());\n    this.flatInteriorPoint_ = getInteriorPointOfArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n      flatCenter, 0);\n    this.flatInteriorPointRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoint_;\n};\n\n\n/**\n * Return an interior point of the polygon.\n * @return {module:ol/geom/Point} Interior point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n * @api\n */\nPolygon.prototype.getInteriorPoint = function() {\n  return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n};\n\n\n/**\n * Return the number of rings of the polygon,  this includes the exterior\n * ring and any interior rings.\n *\n * @return {number} Number of rings.\n * @api\n */\nPolygon.prototype.getLinearRingCount = function() {\n  return this.ends_.length;\n};\n\n\n/**\n * Return the Nth linear ring of the polygon geometry. Return `null` if the\n * given index is out of range.\n * The exterior linear ring is available at index `0` and the interior rings\n * at index `1` and beyond.\n *\n * @param {number} index Index.\n * @return {module:ol/geom/LinearRing} Linear ring.\n * @api\n */\nPolygon.prototype.getLinearRing = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const linearRing = new LinearRing(null);\n  linearRing.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return linearRing;\n};\n\n\n/**\n * Return the linear rings of the polygon.\n * @return {Array.<module:ol/geom/LinearRing>} Linear rings.\n * @api\n */\nPolygon.prototype.getLinearRings = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const linearRings = [];\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const linearRing = new LinearRing(null);\n    linearRing.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    linearRings.push(linearRing);\n    offset = end;\n  }\n  return linearRings;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (linearRingIsOriented(\n      flatCoordinates, 0, this.ends_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          orientLinearRings(\n            this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = quantizeArray(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedPolygon = new Polygon(null);\n  simplifiedPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedPolygon;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPolygon.prototype.getType = function() {\n  return GeometryType.POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPolygon.prototype.intersectsExtent = function(extent) {\n  return intersectsLinearRingArray(\n    this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the polygon.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {module:ol/coordinate~Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {module:ol/geom/Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(GeometryLayout.XY, flatCoordinates, [flatCoordinates.length]);\n  return polygon;\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/geom/Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    GeometryLayout.XY, flatCoordinates, [flatCoordinates.length]);\n  return polygon;\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {module:ol/geom/Circle} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {module:ol/geom/Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const polygon = new Polygon(null, layout);\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i++) {\n    flatCoordinates[i] = 0;\n  }\n  const ends = [flatCoordinates.length];\n  polygon.setFlatCoordinates(layout, flatCoordinates, ends);\n  makeRegular(polygon, circle.getCenter(), circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {module:ol/coordinate~Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const layout = polygon.getLayout();\n  const stride = polygon.getStride();\n  const ends = polygon.getEnds();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.setFlatCoordinates(layout, flatCoordinates, ends);\n}\n","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {inherits, getUid} from './index.js';\nimport {UNDEFINED} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport SimpleGeometry from './geom/SimpleGeometry.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {module:ol/coordinate~Coordinate} [sourceCenter]\n * @property {module:ol/coordinate~Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [sourceRotation]\n * @property {module:ol/coordinate~Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {module:ol/centerconstraint~Type} center\n * @property {module:ol/resolutionconstraint~Type} resolution\n * @property {module:ol/rotationconstraint~Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {module:ol/size~Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array.<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {module:ol/coordinate~Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {module:ol/extent~Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array.<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {module:ol/coordinate~Coordinate|undefined} center The center of the view at the end of\n * the animation.\n * @property {number|undefined} zoom The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number|undefined} resolution The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number|undefined} rotation The rotation of the view at the end of\n * the animation.\n * @property {module:ol/coordinate~Coordinate|undefined} anchor Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/coordinate~Coordinate} center\n * @property {module:ol/proj/Projection} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/View~ViewOptions=} opt_options View options.\n * @api\n */\nconst View = function(opt_options) {\n  BaseObject.call(this);\n\n  const options = assign({}, opt_options);\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.hints_ = [0, 0];\n\n  /**\n   * @private\n   * @type {Array.<Array.<module:ol/View~Animation>>}\n   */\n  this.animations_ = [];\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.updateAnimationKey_;\n\n  this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n  /**\n   * @private\n   * @const\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n  this.applyOptions_(options);\n};\n\ninherits(View, BaseObject);\n\n\n/**\n * Set up the view with the given options.\n * @param {module:ol/View~ViewOptions} options View options.\n */\nView.prototype.applyOptions_ = function(options) {\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const properties = {};\n  properties[ViewProperty.CENTER] = options.center !== undefined ?\n    options.center : null;\n\n  const resolutionConstraintInfo = createResolutionConstraint(options);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n  /**\n   * @private\n   * @type {Array.<number>|undefined}\n   */\n  this.resolutions_ = options.resolutions;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n  const centerConstraint = createCenterConstraint(options);\n  const resolutionConstraint = resolutionConstraintInfo.constraint;\n  const rotationConstraint = createRotationConstraint(options);\n\n  /**\n   * @private\n   * @type {module:ol/View~Constraints}\n   */\n  this.constraints_ = {\n    center: centerConstraint,\n    resolution: resolutionConstraint,\n    rotation: rotationConstraint\n  };\n\n  if (options.resolution !== undefined) {\n    properties[ViewProperty.RESOLUTION] = options.resolution;\n  } else if (options.zoom !== undefined) {\n    properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n      this.maxResolution_, options.zoom - this.minZoom_);\n\n    if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n      properties[ViewProperty.RESOLUTION] = clamp(\n        Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n        this.minResolution_, this.maxResolution_);\n    }\n  }\n  properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n  this.setProperties(properties);\n\n  /**\n   * @private\n   * @type {module:ol/View~ViewOptions}\n   */\n  this.options_ = options;\n\n};\n\n/**\n * Get an updated version of the view options used to construct the view.  The\n * current resolution (or zoom), center, and rotation are applied to any stored\n * options.  The provided options can be used to apply new min/max zoom or\n * resolution limits.\n * @param {module:ol/View~ViewOptions} newOptions New options to be applied.\n * @return {module:ol/View~ViewOptions} New options updated with the current view state.\n */\nView.prototype.getUpdatedOptions_ = function(newOptions) {\n  const options = assign({}, this.options_);\n\n  // preserve resolution (or zoom)\n  if (options.resolution !== undefined) {\n    options.resolution = this.getResolution();\n  } else {\n    options.zoom = this.getZoom();\n  }\n\n  // preserve center\n  options.center = this.getCenter();\n\n  // preserve rotation\n  options.rotation = this.getRotation();\n\n  return assign({}, options, newOptions);\n};\n\n\n/**\n * Animate the view.  The view's center, zoom (or resolution), and rotation\n * can be animated for smooth transitions between view states.  For example,\n * to animate the view to a new zoom level:\n *\n *     view.animate({zoom: view.getZoom() + 1});\n *\n * By default, the animation lasts one second and uses in-and-out easing.  You\n * can customize this behavior by including `duration` (in milliseconds) and\n * `easing` options (see {@link module:ol/easing}).\n *\n * To chain together multiple animations, call the method with multiple\n * animation objects.  For example, to first zoom and then pan:\n *\n *     view.animate({zoom: 10}, {center: [0, 0]});\n *\n * If you provide a function as the last argument to the animate method, it\n * will get called at the end of an animation series.  The callback will be\n * called with `true` if the animation series completed on its own or `false`\n * if it was cancelled.\n *\n * Animations are cancelled by user interactions (e.g. dragging the map) or by\n * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n * (or another method that calls one of these).\n *\n * @param {...(module:ol/View~AnimationOptions|function(boolean))} var_args Animation\n *     options.  Multiple animations can be run in series by passing multiple\n *     options objects.  To run multiple animations in parallel, call the method\n *     multiple times.  An optional callback can be provided as a final\n *     argument.  The callback will be called with a boolean indicating whether\n *     the animation completed without being cancelled.\n * @api\n */\nView.prototype.animate = function(var_args) {\n  let animationCount = arguments.length;\n  let callback;\n  if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n    callback = arguments[animationCount - 1];\n    --animationCount;\n  }\n  if (!this.isDef()) {\n    // if view properties are not yet set, shortcut to the final state\n    const state = arguments[animationCount - 1];\n    if (state.center) {\n      this.setCenter(state.center);\n    }\n    if (state.zoom !== undefined) {\n      this.setZoom(state.zoom);\n    }\n    if (state.rotation !== undefined) {\n      this.setRotation(state.rotation);\n    }\n    if (callback) {\n      setTimeout(function() {\n        callback(true);\n      }, 0);\n    }\n    return;\n  }\n  let start = Date.now();\n  let center = this.getCenter().slice();\n  let resolution = this.getResolution();\n  let rotation = this.getRotation();\n  const series = [];\n  for (let i = 0; i < animationCount; ++i) {\n    const options = /** @type {module:ol/View~AnimationOptions} */ (arguments[i]);\n\n    const animation = /** @type {module:ol/View~Animation} */ ({\n      start: start,\n      complete: false,\n      anchor: options.anchor,\n      duration: options.duration !== undefined ? options.duration : 1000,\n      easing: options.easing || inAndOut\n    });\n\n    if (options.center) {\n      animation.sourceCenter = center;\n      animation.targetCenter = options.center;\n      center = animation.targetCenter;\n    }\n\n    if (options.zoom !== undefined) {\n      animation.sourceResolution = resolution;\n      animation.targetResolution = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_, 0);\n      resolution = animation.targetResolution;\n    } else if (options.resolution) {\n      animation.sourceResolution = resolution;\n      animation.targetResolution = options.resolution;\n      resolution = animation.targetResolution;\n    }\n\n    if (options.rotation !== undefined) {\n      animation.sourceRotation = rotation;\n      const delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n      animation.targetRotation = rotation + delta;\n      rotation = animation.targetRotation;\n    }\n\n    animation.callback = callback;\n\n    // check if animation is a no-op\n    if (isNoopAnimation(animation)) {\n      animation.complete = true;\n      // we still push it onto the series for callback handling\n    } else {\n      start += animation.duration;\n    }\n    series.push(animation);\n  }\n  this.animations_.push(series);\n  this.setHint(ViewHint.ANIMATING, 1);\n  this.updateAnimations_();\n};\n\n\n/**\n * Determine if the view is being animated.\n * @return {boolean} The view is being animated.\n * @api\n */\nView.prototype.getAnimating = function() {\n  return this.hints_[ViewHint.ANIMATING] > 0;\n};\n\n\n/**\n * Determine if the user is interacting with the view, such as panning or zooming.\n * @return {boolean} The view is being interacted with.\n * @api\n */\nView.prototype.getInteracting = function() {\n  return this.hints_[ViewHint.INTERACTING] > 0;\n};\n\n\n/**\n * Cancel any ongoing animations.\n * @api\n */\nView.prototype.cancelAnimations = function() {\n  this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n  for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n    const series = this.animations_[i];\n    if (series[0].callback) {\n      series[0].callback(false);\n    }\n  }\n  this.animations_.length = 0;\n};\n\n/**\n * Update all animations.\n */\nView.prototype.updateAnimations_ = function() {\n  if (this.updateAnimationKey_ !== undefined) {\n    cancelAnimationFrame(this.updateAnimationKey_);\n    this.updateAnimationKey_ = undefined;\n  }\n  if (!this.getAnimating()) {\n    return;\n  }\n  const now = Date.now();\n  let more = false;\n  for (let i = this.animations_.length - 1; i >= 0; --i) {\n    const series = this.animations_[i];\n    let seriesComplete = true;\n    for (let j = 0, jj = series.length; j < jj; ++j) {\n      const animation = series[j];\n      if (animation.complete) {\n        continue;\n      }\n      const elapsed = now - animation.start;\n      let fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n      if (fraction >= 1) {\n        animation.complete = true;\n        fraction = 1;\n      } else {\n        seriesComplete = false;\n      }\n      const progress = animation.easing(fraction);\n      if (animation.sourceCenter) {\n        const x0 = animation.sourceCenter[0];\n        const y0 = animation.sourceCenter[1];\n        const x1 = animation.targetCenter[0];\n        const y1 = animation.targetCenter[1];\n        const x = x0 + progress * (x1 - x0);\n        const y = y0 + progress * (y1 - y0);\n        this.set(ViewProperty.CENTER, [x, y]);\n      }\n      if (animation.sourceResolution && animation.targetResolution) {\n        const resolution = progress === 1 ?\n          animation.targetResolution :\n          animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n        if (animation.anchor) {\n          this.set(ViewProperty.CENTER,\n            this.calculateCenterZoom(resolution, animation.anchor));\n        }\n        this.set(ViewProperty.RESOLUTION, resolution);\n      }\n      if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n        const rotation = progress === 1 ?\n          modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n          animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n        if (animation.anchor) {\n          this.set(ViewProperty.CENTER,\n            this.calculateCenterRotate(rotation, animation.anchor));\n        }\n        this.set(ViewProperty.ROTATION, rotation);\n      }\n      more = true;\n      if (!animation.complete) {\n        break;\n      }\n    }\n    if (seriesComplete) {\n      this.animations_[i] = null;\n      this.setHint(ViewHint.ANIMATING, -1);\n      const callback = series[0].callback;\n      if (callback) {\n        setTimeout(function() {\n          callback(true);\n        }, 0);\n      }\n    }\n  }\n  // prune completed series\n  this.animations_ = this.animations_.filter(Boolean);\n  if (more && this.updateAnimationKey_ === undefined) {\n    this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n  }\n};\n\n/**\n * @param {number} rotation Target rotation.\n * @param {module:ol/coordinate~Coordinate} anchor Rotation anchor.\n * @return {module:ol/coordinate~Coordinate|undefined} Center for rotation and anchor.\n */\nView.prototype.calculateCenterRotate = function(rotation, anchor) {\n  let center;\n  const currentCenter = this.getCenter();\n  if (currentCenter !== undefined) {\n    center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n    rotateCoordinate(center, rotation - this.getRotation());\n    addCoordinate(center, anchor);\n  }\n  return center;\n};\n\n\n/**\n * @param {number} resolution Target resolution.\n * @param {module:ol/coordinate~Coordinate} anchor Zoom anchor.\n * @return {module:ol/coordinate~Coordinate|undefined} Center for resolution and anchor.\n */\nView.prototype.calculateCenterZoom = function(resolution, anchor) {\n  let center;\n  const currentCenter = this.getCenter();\n  const currentResolution = this.getResolution();\n  if (currentCenter !== undefined && currentResolution !== undefined) {\n    const x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n    const y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n    center = [x, y];\n  }\n  return center;\n};\n\n\n/**\n * @private\n * @return {module:ol/size~Size} Viewport size or `[100, 100]` when no viewport is found.\n */\nView.prototype.getSizeFromViewport_ = function() {\n  const size = [100, 100];\n  const selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n  const element = document.querySelector(selector);\n  if (element) {\n    const metrics = getComputedStyle(element);\n    size[0] = parseInt(metrics.width, 10);\n    size[1] = parseInt(metrics.height, 10);\n  }\n  return size;\n};\n\n\n/**\n * Get the constrained center of this view.\n * @param {module:ol/coordinate~Coordinate|undefined} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Constrained center.\n * @api\n */\nView.prototype.constrainCenter = function(center) {\n  return this.constraints_.center(center);\n};\n\n\n/**\n * Get the constrained resolution of this view.\n * @param {number|undefined} resolution Resolution.\n * @param {number=} opt_delta Delta. Default is `0`.\n * @param {number=} opt_direction Direction. Default is `0`.\n * @return {number|undefined} Constrained resolution.\n * @api\n */\nView.prototype.constrainResolution = function(resolution, opt_delta, opt_direction) {\n  const delta = opt_delta || 0;\n  const direction = opt_direction || 0;\n  return this.constraints_.resolution(resolution, delta, direction);\n};\n\n\n/**\n * Get the constrained rotation of this view.\n * @param {number|undefined} rotation Rotation.\n * @param {number=} opt_delta Delta. Default is `0`.\n * @return {number|undefined} Constrained rotation.\n * @api\n */\nView.prototype.constrainRotation = function(rotation, opt_delta) {\n  const delta = opt_delta || 0;\n  return this.constraints_.rotation(rotation, delta);\n};\n\n\n/**\n * Get the view center.\n * @return {module:ol/coordinate~Coordinate|undefined} The center of the view.\n * @observable\n * @api\n */\nView.prototype.getCenter = function() {\n  return (\n    /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n  );\n};\n\n\n/**\n * @return {module:ol/View~Constraints} Constraints.\n */\nView.prototype.getConstraints = function() {\n  return this.constraints_;\n};\n\n\n/**\n * @param {Array.<number>=} opt_hints Destination array.\n * @return {Array.<number>} Hint.\n */\nView.prototype.getHints = function(opt_hints) {\n  if (opt_hints !== undefined) {\n    opt_hints[0] = this.hints_[0];\n    opt_hints[1] = this.hints_[1];\n    return opt_hints;\n  } else {\n    return this.hints_.slice();\n  }\n};\n\n\n/**\n * Calculate the extent for the current view state and the passed size.\n * The size is the pixel dimensions of the box into which the calculated extent\n * should fit. In most cases you want to get the extent of the entire map,\n * that is `map.getSize()`.\n * @param {module:ol/size~Size=} opt_size Box pixel size. If not provided, the size of the\n * first map that uses this view will be used.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nView.prototype.calculateExtent = function(opt_size) {\n  const size = opt_size || this.getSizeFromViewport_();\n  const center = /** @type {!module:ol/coordinate~Coordinate} */ (this.getCenter());\n  assert(center, 1); // The view center is not defined\n  const resolution = /** @type {!number} */ (this.getResolution());\n  assert(resolution !== undefined, 2); // The view resolution is not defined\n  const rotation = /** @type {!number} */ (this.getRotation());\n  assert(rotation !== undefined, 3); // The view rotation is not defined\n\n  return getForViewAndSize(center, resolution, rotation, size);\n};\n\n\n/**\n * Get the maximum resolution of the view.\n * @return {number} The maximum resolution of the view.\n * @api\n */\nView.prototype.getMaxResolution = function() {\n  return this.maxResolution_;\n};\n\n\n/**\n * Get the minimum resolution of the view.\n * @return {number} The minimum resolution of the view.\n * @api\n */\nView.prototype.getMinResolution = function() {\n  return this.minResolution_;\n};\n\n\n/**\n * Get the maximum zoom level for the view.\n * @return {number} The maximum zoom level.\n * @api\n */\nView.prototype.getMaxZoom = function() {\n  return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n};\n\n\n/**\n * Set a new maximum zoom level for the view.\n * @param {number} zoom The maximum zoom level.\n * @api\n */\nView.prototype.setMaxZoom = function(zoom) {\n  this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n};\n\n\n/**\n * Get the minimum zoom level for the view.\n * @return {number} The minimum zoom level.\n * @api\n */\nView.prototype.getMinZoom = function() {\n  return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n};\n\n\n/**\n * Set a new minimum zoom level for the view.\n * @param {number} zoom The minimum zoom level.\n * @api\n */\nView.prototype.setMinZoom = function(zoom) {\n  this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n};\n\n\n/**\n * Get the view projection.\n * @return {module:ol/proj/Projection} The projection of the view.\n * @api\n */\nView.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * Get the view resolution.\n * @return {number|undefined} The resolution of the view.\n * @observable\n * @api\n */\nView.prototype.getResolution = function() {\n  return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n};\n\n\n/**\n * Get the resolutions for the view. This returns the array of resolutions\n * passed to the constructor of the View, or undefined if none were given.\n * @return {Array.<number>|undefined} The resolutions of the view.\n * @api\n */\nView.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * Get the resolution for a provided extent (in map units) and size (in pixels).\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/size~Size=} opt_size Box pixel size.\n * @return {number} The resolution at which the provided extent will render at\n *     the given size.\n * @api\n */\nView.prototype.getResolutionForExtent = function(extent, opt_size) {\n  const size = opt_size || this.getSizeFromViewport_();\n  const xResolution = getWidth(extent) / size[0];\n  const yResolution = getHeight(extent) / size[1];\n  return Math.max(xResolution, yResolution);\n};\n\n\n/**\n * Return a function that returns a value between 0 and 1 for a\n * resolution. Exponential scaling is assumed.\n * @param {number=} opt_power Power.\n * @return {function(number): number} Resolution for value function.\n */\nView.prototype.getResolutionForValueFunction = function(opt_power) {\n  const power = opt_power || 2;\n  const maxResolution = this.maxResolution_;\n  const minResolution = this.minResolution_;\n  const max = Math.log(maxResolution / minResolution) / Math.log(power);\n  return (\n    /**\n     * @param {number} value Value.\n     * @return {number} Resolution.\n     */\n    function(value) {\n      const resolution = maxResolution / Math.pow(power, value * max);\n      return resolution;\n    });\n};\n\n\n/**\n * Get the view rotation.\n * @return {number} The rotation of the view in radians.\n * @observable\n * @api\n */\nView.prototype.getRotation = function() {\n  return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n};\n\n\n/**\n * Return a function that returns a resolution for a value between\n * 0 and 1. Exponential scaling is assumed.\n * @param {number=} opt_power Power.\n * @return {function(number): number} Value for resolution function.\n */\nView.prototype.getValueForResolutionFunction = function(opt_power) {\n  const power = opt_power || 2;\n  const maxResolution = this.maxResolution_;\n  const minResolution = this.minResolution_;\n  const max = Math.log(maxResolution / minResolution) / Math.log(power);\n  return (\n    /**\n     * @param {number} resolution Resolution.\n     * @return {number} Value.\n     */\n    function(resolution) {\n      const value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n      return value;\n    });\n};\n\n\n/**\n * @return {module:ol/View~State} View state.\n */\nView.prototype.getState = function() {\n  const center = /** @type {module:ol/coordinate~Coordinate} */ (this.getCenter());\n  const projection = this.getProjection();\n  const resolution = /** @type {number} */ (this.getResolution());\n  const rotation = this.getRotation();\n  return (\n    /** @type {module:ol/View~State} */ ({\n      center: center.slice(),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom()\n    })\n  );\n};\n\n\n/**\n * Get the current zoom level.  If you configured your view with a resolutions\n * array (this is rare), this method may return non-integer zoom levels (so\n * the zoom level is not safe to use as an index into a resolutions array).\n * @return {number|undefined} Zoom.\n * @api\n */\nView.prototype.getZoom = function() {\n  let zoom;\n  const resolution = this.getResolution();\n  if (resolution !== undefined) {\n    zoom = this.getZoomForResolution(resolution);\n  }\n  return zoom;\n};\n\n\n/**\n * Get the zoom level for a resolution.\n * @param {number} resolution The resolution.\n * @return {number|undefined} The zoom level for the provided resolution.\n * @api\n */\nView.prototype.getZoomForResolution = function(resolution) {\n  let offset = this.minZoom_ || 0;\n  let max, zoomFactor;\n  if (this.resolutions_) {\n    const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n    offset = nearest;\n    max = this.resolutions_[nearest];\n    if (nearest == this.resolutions_.length - 1) {\n      zoomFactor = 2;\n    } else {\n      zoomFactor = max / this.resolutions_[nearest + 1];\n    }\n  } else {\n    max = this.maxResolution_;\n    zoomFactor = this.zoomFactor_;\n  }\n  return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n};\n\n\n/**\n * Get the resolution for a zoom level.\n * @param {number} zoom Zoom level.\n * @return {number} The view resolution for the provided zoom level.\n * @api\n */\nView.prototype.getResolutionForZoom = function(zoom) {\n  return /** @type {number} */ (this.constrainResolution(\n    this.maxResolution_, zoom - this.minZoom_, 0));\n};\n\n\n/**\n * Fit the given geometry or extent based on the given map size and border.\n * The size is pixel dimensions of the box to fit the extent into.\n * In most cases you will want to use the map size, that is `map.getSize()`.\n * Takes care of the map angle.\n * @param {module:ol/geom/SimpleGeometry|module:ol/extent~Extent} geometryOrExtent The geometry or\n *     extent to fit the view to.\n * @param {module:ol/View~FitOptions=} opt_options Options.\n * @api\n */\nView.prototype.fit = function(geometryOrExtent, opt_options) {\n  const options = opt_options || {};\n  let size = options.size;\n  if (!size) {\n    size = this.getSizeFromViewport_();\n  }\n  /** @type {module:ol/geom/SimpleGeometry} */\n  let geometry;\n  if (!(geometryOrExtent instanceof SimpleGeometry)) {\n    assert(Array.isArray(geometryOrExtent),\n      24); // Invalid extent or geometry provided as `geometry`\n    assert(!isEmpty(geometryOrExtent),\n      25); // Cannot fit empty extent provided as `geometry`\n    geometry = polygonFromExtent(geometryOrExtent);\n  } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n    geometryOrExtent = geometryOrExtent.getExtent();\n    geometry = polygonFromExtent(geometryOrExtent);\n    geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n  } else {\n    geometry = geometryOrExtent;\n  }\n\n  const padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n  const constrainResolution = options.constrainResolution !== undefined ?\n    options.constrainResolution : true;\n  const nearest = options.nearest !== undefined ? options.nearest : false;\n  let minResolution;\n  if (options.minResolution !== undefined) {\n    minResolution = options.minResolution;\n  } else if (options.maxZoom !== undefined) {\n    minResolution = this.constrainResolution(\n      this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n  } else {\n    minResolution = 0;\n  }\n  const coords = geometry.getFlatCoordinates();\n\n  // calculate rotated extent\n  const rotation = this.getRotation();\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let minRotX = +Infinity;\n  let minRotY = +Infinity;\n  let maxRotX = -Infinity;\n  let maxRotY = -Infinity;\n  const stride = geometry.getStride();\n  for (let i = 0, ii = coords.length; i < ii; i += stride) {\n    const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n    const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n    minRotX = Math.min(minRotX, rotX);\n    minRotY = Math.min(minRotY, rotY);\n    maxRotX = Math.max(maxRotX, rotX);\n    maxRotY = Math.max(maxRotY, rotY);\n  }\n\n  // calculate resolution\n  let resolution = this.getResolutionForExtent(\n    [minRotX, minRotY, maxRotX, maxRotY],\n    [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n  resolution = isNaN(resolution) ? minResolution :\n    Math.max(resolution, minResolution);\n  if (constrainResolution) {\n    let constrainedResolution = this.constrainResolution(resolution, 0, 0);\n    if (!nearest && constrainedResolution < resolution) {\n      constrainedResolution = this.constrainResolution(\n        constrainedResolution, -1, 0);\n    }\n    resolution = constrainedResolution;\n  }\n\n  // calculate center\n  sinAngle = -sinAngle; // go back to original rotation\n  let centerRotX = (minRotX + maxRotX) / 2;\n  let centerRotY = (minRotY + maxRotY) / 2;\n  centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n  centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n  const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n  const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n  const center = [centerX, centerY];\n  const callback = options.callback ? options.callback : UNDEFINED;\n\n  if (options.duration !== undefined) {\n    this.animate({\n      resolution: resolution,\n      center: center,\n      duration: options.duration,\n      easing: options.easing\n    }, callback);\n  } else {\n    this.setResolution(resolution);\n    this.setCenter(center);\n    setTimeout(callback.bind(undefined, true), 0);\n  }\n};\n\n\n/**\n * Center on coordinate and view position.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/size~Size} size Box pixel size.\n * @param {module:ol~Pixel} position Position on the view to center on.\n * @api\n */\nView.prototype.centerOn = function(coordinate, size, position) {\n  // calculate rotated position\n  const rotation = this.getRotation();\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  const resolution = this.getResolution();\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  this.setCenter([centerX, centerY]);\n};\n\n\n/**\n * @return {boolean} Is defined.\n */\nView.prototype.isDef = function() {\n  return !!this.getCenter() && this.getResolution() !== undefined;\n};\n\n\n/**\n * Rotate the view around a given coordinate.\n * @param {number} rotation New rotation value for the view.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor The rotation center.\n * @api\n */\nView.prototype.rotate = function(rotation, opt_anchor) {\n  if (opt_anchor !== undefined) {\n    const center = this.calculateCenterRotate(rotation, opt_anchor);\n    this.setCenter(center);\n  }\n  this.setRotation(rotation);\n};\n\n\n/**\n * Set the center of the current view.\n * @param {module:ol/coordinate~Coordinate|undefined} center The center of the view.\n * @observable\n * @api\n */\nView.prototype.setCenter = function(center) {\n  this.set(ViewProperty.CENTER, center);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * @param {module:ol/ViewHint} hint Hint.\n * @param {number} delta Delta.\n * @return {number} New value.\n */\nView.prototype.setHint = function(hint, delta) {\n  this.hints_[hint] += delta;\n  this.changed();\n  return this.hints_[hint];\n};\n\n\n/**\n * Set the resolution for this view.\n * @param {number|undefined} resolution The resolution of the view.\n * @observable\n * @api\n */\nView.prototype.setResolution = function(resolution) {\n  this.set(ViewProperty.RESOLUTION, resolution);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * Set the rotation for this view.\n * @param {number} rotation The rotation of the view in radians.\n * @observable\n * @api\n */\nView.prototype.setRotation = function(rotation) {\n  this.set(ViewProperty.ROTATION, rotation);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * Zoom to a specific zoom level.\n * @param {number} zoom Zoom level.\n * @api\n */\nView.prototype.setZoom = function(zoom) {\n  this.setResolution(this.getResolutionForZoom(zoom));\n};\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {{constraint: module:ol/resolutionconstraint~Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    const projection = createProjection(options.projection, 'EPSG:3857');\n    const extent = projection.getExtent();\n    const size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    const defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {module:ol/View~Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array.<number>} resolutions Resolutions.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        let z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        const index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          const power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        const offset = -direction / 2 + 0.5;\n        const oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        let newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!Element} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!Element} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n","/**\n * @module ol/layer/Base\n */\nimport {inherits} from '../index.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from '../layer/Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @param {module:ol/layer/Base~Options} options Layer options.\n * @api\n */\nconst BaseLayer = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const properties = assign({}, options);\n  properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n  properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n  properties[LayerProperty.Z_INDEX] =\n      options.zIndex !== undefined ? options.zIndex : 0;\n  properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n  properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n\n  this.setProperties(properties);\n\n  /**\n   * @type {module:ol/layer/Layer~State}\n   * @private\n   */\n  this.state_ = /** @type {module:ol/layer/Layer~State} */ ({\n    layer: /** @type {module:ol/layer/Layer} */ (this),\n    managed: true\n  });\n\n  /**\n   * The layer type.\n   * @type {module:ol/LayerType}\n   * @protected;\n   */\n  this.type;\n\n};\n\ninherits(BaseLayer, BaseObject);\n\n\n/**\n * Get the layer type (used when creating a layer renderer).\n * @return {module:ol/LayerType} The layer type.\n */\nBaseLayer.prototype.getType = function() {\n  return this.type;\n};\n\n\n/**\n * @return {module:ol/layer/Layer~State} Layer state.\n */\nBaseLayer.prototype.getLayerState = function() {\n  this.state_.opacity = clamp(this.getOpacity(), 0, 1);\n  this.state_.sourceState = this.getSourceState();\n  this.state_.visible = this.getVisible();\n  this.state_.extent = this.getExtent();\n  this.state_.zIndex = this.getZIndex();\n  this.state_.maxResolution = this.getMaxResolution();\n  this.state_.minResolution = Math.max(this.getMinResolution(), 0);\n\n  return this.state_;\n};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/layer/Layer>=} opt_array Array of layers (to be\n *     modified in place).\n * @return {Array.<module:ol/layer/Layer>} Array of layers.\n */\nBaseLayer.prototype.getLayersArray = function(opt_array) {};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/layer/Layer~State>=} opt_states Optional list of layer\n *     states (to be modified in place).\n * @return {Array.<module:ol/layer/Layer~State>} List of layer states.\n */\nBaseLayer.prototype.getLayerStatesArray = function(opt_states) {};\n\n\n/**\n * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n * will be visible regardless of extent.\n * @return {module:ol/extent~Extent|undefined} The layer extent.\n * @observable\n * @api\n */\nBaseLayer.prototype.getExtent = function() {\n  return (\n    /** @type {module:ol/extent~Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n  );\n};\n\n\n/**\n * Return the maximum resolution of the layer.\n * @return {number} The maximum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getMaxResolution = function() {\n  return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n};\n\n\n/**\n * Return the minimum resolution of the layer.\n * @return {number} The minimum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getMinResolution = function() {\n  return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n};\n\n\n/**\n * Return the opacity of the layer (between 0 and 1).\n * @return {number} The opacity of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getOpacity = function() {\n  return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n};\n\n\n/**\n * @abstract\n * @return {module:ol/source/State} Source state.\n */\nBaseLayer.prototype.getSourceState = function() {};\n\n\n/**\n * Return the visibility of the layer (`true` or `false`).\n * @return {boolean} The visibility of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getVisible = function() {\n  return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n};\n\n\n/**\n * Return the Z-index of the layer, which is used to order layers before\n * rendering. The default Z-index is 0.\n * @return {number} The Z-index of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getZIndex = function() {\n  return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n};\n\n\n/**\n * Set the extent at which the layer is visible.  If `undefined`, the layer\n * will be visible at all extents.\n * @param {module:ol/extent~Extent|undefined} extent The extent of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setExtent = function(extent) {\n  this.set(LayerProperty.EXTENT, extent);\n};\n\n\n/**\n * Set the maximum resolution at which the layer is visible.\n * @param {number} maxResolution The maximum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setMaxResolution = function(maxResolution) {\n  this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n};\n\n\n/**\n * Set the minimum resolution at which the layer is visible.\n * @param {number} minResolution The minimum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setMinResolution = function(minResolution) {\n  this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n};\n\n\n/**\n * Set the opacity of the layer, allowed values range from 0 to 1.\n * @param {number} opacity The opacity of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setOpacity = function(opacity) {\n  this.set(LayerProperty.OPACITY, opacity);\n};\n\n\n/**\n * Set the visibility of the layer (`true` or `false`).\n * @param {boolean} visible The visibility of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setVisible = function(visible) {\n  this.set(LayerProperty.VISIBLE, visible);\n};\n\n\n/**\n * Set Z-index of the layer, which is used to order layers before rendering.\n * The default Z-index is 0.\n * @param {number} zindex The z-index of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setZIndex = function(zindex) {\n  this.set(LayerProperty.Z_INDEX, zindex);\n};\nexport default BaseLayer;\n","/**\n * @module ol/source/State\n */\n\n/**\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n * @enum {string}\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n","/**\n * @module ol/layer/Group\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from '../layer/Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {(Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>)} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @constructor\n * @extends {module:ol/layer/Base}\n * @param {module:ol/layer/Group~Options=} opt_options Layer options.\n * @api\n */\nconst LayerGroup = function(opt_options) {\n\n  const options = opt_options || {};\n  const baseOptions = /** @type {module:ol/layer/Group~Options} */ (assign({}, options));\n  delete baseOptions.layers;\n\n  let layers = options.layers;\n\n  BaseLayer.call(this, baseOptions);\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.layersListenerKeys_ = [];\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n   */\n  this.listenerKeys_ = {};\n\n  listen(this,\n    getChangeEventType(Property.LAYERS),\n    this.handleLayersChanged_, this);\n\n  if (layers) {\n    if (Array.isArray(layers)) {\n      layers = new Collection(layers.slice(), {unique: true});\n    } else {\n      assert(layers instanceof Collection,\n        43); // Expected `layers` to be an array or a `Collection`\n      layers = layers;\n    }\n  } else {\n    layers = new Collection(undefined, {unique: true});\n  }\n\n  this.setLayers(layers);\n\n};\n\ninherits(LayerGroup, BaseLayer);\n\n\n/**\n * @private\n */\nLayerGroup.prototype.handleLayerChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @private\n */\nLayerGroup.prototype.handleLayersChanged_ = function(event) {\n  this.layersListenerKeys_.forEach(unlistenByKey);\n  this.layersListenerKeys_.length = 0;\n\n  const layers = this.getLayers();\n  this.layersListenerKeys_.push(\n    listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n    listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n  );\n\n  for (const id in this.listenerKeys_) {\n    this.listenerKeys_[id].forEach(unlistenByKey);\n  }\n  clear(this.listenerKeys_);\n\n  const layersArray = layers.getArray();\n  for (let i = 0, ii = layersArray.length; i < ii; i++) {\n    const layer = layersArray[i];\n    this.listenerKeys_[getUid(layer).toString()] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n  }\n\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n * @private\n */\nLayerGroup.prototype.handleLayersAdd_ = function(collectionEvent) {\n  const layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n  const key = getUid(layer).toString();\n  this.listenerKeys_[key] = [\n    listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n    listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n  ];\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n * @private\n */\nLayerGroup.prototype.handleLayersRemove_ = function(collectionEvent) {\n  const layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n  const key = getUid(layer).toString();\n  this.listenerKeys_[key].forEach(unlistenByKey);\n  delete this.listenerKeys_[key];\n  this.changed();\n};\n\n\n/**\n * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n * in this group.\n * @return {!module:ol/Collection.<module:ol/layer/Base>} Collection of\n *   {@link module:ol/layer/Base layers} that are part of this group.\n * @observable\n * @api\n */\nLayerGroup.prototype.getLayers = function() {\n  return (\n    /** @type {!module:ol/Collection.<module:ol/layer/Base>} */ (this.get(Property.LAYERS))\n  );\n};\n\n\n/**\n * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n * in this group.\n * @param {!module:ol/Collection.<module:ol/layer/Base>} layers Collection of\n *   {@link module:ol/layer/Base layers} that are part of this group.\n * @observable\n * @api\n */\nLayerGroup.prototype.setLayers = function(layers) {\n  this.set(Property.LAYERS, layers);\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getLayersArray = function(opt_array) {\n  const array = opt_array !== undefined ? opt_array : [];\n  this.getLayers().forEach(function(layer) {\n    layer.getLayersArray(array);\n  });\n  return array;\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getLayerStatesArray = function(opt_states) {\n  const states = opt_states !== undefined ? opt_states : [];\n\n  const pos = states.length;\n\n  this.getLayers().forEach(function(layer) {\n    layer.getLayerStatesArray(states);\n  });\n\n  const ownLayerState = this.getLayerState();\n  for (let i = pos, ii = states.length; i < ii; i++) {\n    const layerState = states[i];\n    layerState.opacity *= ownLayerState.opacity;\n    layerState.visible = layerState.visible && ownLayerState.visible;\n    layerState.maxResolution = Math.min(\n      layerState.maxResolution, ownLayerState.maxResolution);\n    layerState.minResolution = Math.max(\n      layerState.minResolution, ownLayerState.minResolution);\n    if (ownLayerState.extent !== undefined) {\n      if (layerState.extent !== undefined) {\n        layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n      } else {\n        layerState.extent = ownLayerState.extent;\n      }\n    }\n  }\n\n  return states;\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getSourceState = function() {\n  return SourceState.READY;\n};\n\nexport default LayerGroup;\n","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array.<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {module:ol/size~Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {module:ol/size~Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {module:ol/size~Size} size Size.\n * @param {number} ratio Ratio.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `module:ol/size~Size` array for the passed in number (meaning: square) or\n * `module:ol/size~Size` array.\n * (meaning: non-square),\n * @param {number|module:ol/size~Size} size Width and height.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport {getUid, inherits} from './index.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {module:ol/View~State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {module:ol/transform~Transform} coordinateToPixelTransform\n * @property {null|module:ol/extent~Extent} extent\n * @property {module:ol/coordinate~Coordinate} focus\n * @property {number} index\n * @property {Object.<number, module:ol/layer/Layer~State>} layerStates\n * @property {Array.<module:ol/layer/Layer~State>} layerStatesArray\n * @property {module:ol/transform~Transform} pixelToCoordinateTransform\n * @property {Array.<module:ol/PluggableMap~PostRenderFunction>} postRenderFunctions\n * @property {module:ol/size~Size} size\n * @property {!Object.<string, boolean>} skippedFeatureUids\n * @property {module:ol/TileQueue} tileQueue\n * @property {Object.<string, Object.<string, module:ol/TileRange>>} usedTiles\n * @property {Array.<number>} viewHints\n * @property {!Object.<string, Object.<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(module:ol/PluggableMap, ?module:ol/PluggableMap~FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {((function(module:ol/layer/Layer): boolean)|undefined)} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {module:ol/Collection.<module:ol/control/Control>} [controls]\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>} [interactions]\n * @property {Element|Document} keyboardEventTarget\n * @property {module:ol/Collection.<module:ol/Overlay>} overlays\n * @property {Object.<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {module:ol/Collection.<module:ol/control/Control>|Array.<module:ol/control/Control>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/util~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>|Array.<module:ol/interaction/Interaction>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {Element|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {module:ol/Collection.<module:ol/Overlay>|Array.<module:ol/Overlay>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {Element|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {module:ol/View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nconst PluggableMap = function(options) {\n\n  BaseObject.call(this);\n\n  const optionsInternal = createOptionsInternal(options);\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileAnimating_ =\n      options.loadTilesWhileAnimating !== undefined ?\n        options.loadTilesWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileInteracting_ =\n      options.loadTilesWhileInteracting !== undefined ?\n        options.loadTilesWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = options.pixelRatio !== undefined ?\n    options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.animationDelayKey_;\n\n  /**\n   * @private\n   */\n  this.animationDelay_ = function() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_.call(this, Date.now());\n  }.bind(this);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.coordinateToPixelTransform_ = createTransform();\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.pixelToCoordinateTransform_ = createTransform();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.frameIndex_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/PluggableMap~FrameState}\n   */\n  this.frameState_ = null;\n\n  /**\n   * The extent at the previous 'moveend' event.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.previousExtent_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.viewPropertyListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.viewChangeListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.layerGroupPropertyListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.viewport_ = document.createElement('DIV');\n  this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n  this.viewport_.style.position = 'relative';\n  this.viewport_.style.overflow = 'hidden';\n  this.viewport_.style.width = '100%';\n  this.viewport_.style.height = '100%';\n  // prevent page zoom on IE >= 10 browsers\n  this.viewport_.style.msTouchAction = 'none';\n  this.viewport_.style.touchAction = 'none';\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainer_ = document.createElement('DIV');\n  this.overlayContainer_.className = 'ol-overlaycontainer';\n  this.viewport_.appendChild(this.overlayContainer_);\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainerStopEvent_ = document.createElement('DIV');\n  this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n  const overlayEvents = [\n    EventType.CLICK,\n    EventType.DBLCLICK,\n    EventType.MOUSEDOWN,\n    EventType.TOUCHSTART,\n    EventType.MSPOINTERDOWN,\n    MapBrowserEventType.POINTERDOWN,\n    EventType.MOUSEWHEEL,\n    EventType.WHEEL\n  ];\n  for (let i = 0, ii = overlayEvents.length; i < ii; ++i) {\n    listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n  }\n  this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n  /**\n   * @private\n   * @type {module:ol/MapBrowserEventHandler}\n   */\n  this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n  for (const key in MapBrowserEventType) {\n    listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n      this.handleMapBrowserEvent, this);\n  }\n\n  /**\n   * @private\n   * @type {Element|Document}\n   */\n  this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.keyHandlerKeys_ = null;\n\n  listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n  listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n  listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n  /**\n   * @type {module:ol/Collection.<module:ol/control/Control>}\n   * @protected\n   */\n  this.controls = optionsInternal.controls || new Collection();\n\n  /**\n   * @type {module:ol/Collection.<module:ol/interaction/Interaction>}\n   * @protected\n   */\n  this.interactions = optionsInternal.interactions || new Collection();\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Overlay>}\n   * @private\n   */\n  this.overlays_ = optionsInternal.overlays;\n\n  /**\n   * A lookup of overlays by id.\n   * @private\n   * @type {Object.<string, module:ol/Overlay>}\n   */\n  this.overlayIdIndex_ = {};\n\n  /**\n   * @type {module:ol/renderer/Map}\n   * @private\n   */\n  this.renderer_ = this.createRenderer(this.viewport_, this);\n\n  /**\n   * @type {function(Event)|undefined}\n   * @private\n   */\n  this.handleResize_;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.focus_ = null;\n\n  /**\n   * @private\n   * @type {!Array.<module:ol/PluggableMap~PostRenderFunction>}\n   */\n  this.postRenderFunctions_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/TileQueue}\n   */\n  this.tileQueue_ = new TileQueue(\n    this.getTilePriority.bind(this),\n    this.handleTileChange_.bind(this));\n\n  /**\n   * Uids of features to skip at rendering time.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.skippedFeatureUids_ = {};\n\n  listen(\n    this, getChangeEventType(MapProperty.LAYERGROUP),\n    this.handleLayerGroupChanged_, this);\n  listen(this, getChangeEventType(MapProperty.VIEW),\n    this.handleViewChanged_, this);\n  listen(this, getChangeEventType(MapProperty.SIZE),\n    this.handleSizeChanged_, this);\n  listen(this, getChangeEventType(MapProperty.TARGET),\n    this.handleTargetChanged_, this);\n\n  // setProperties will trigger the rendering of the map if the map\n  // is \"defined\" already.\n  this.setProperties(optionsInternal.values);\n\n  this.controls.forEach(\n    /**\n     * @param {module:ol/control/Control} control Control.\n     * @this {module:ol/PluggableMap}\n     */\n    (function(control) {\n      control.setMap(this);\n    }).bind(this));\n\n  listen(this.controls, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(this);\n    }, this);\n\n  listen(this.controls, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(null);\n    }, this);\n\n  this.interactions.forEach(\n    /**\n     * @param {module:ol/interaction/Interaction} interaction Interaction.\n     * @this {module:ol/PluggableMap}\n     */\n    (function(interaction) {\n      interaction.setMap(this);\n    }).bind(this));\n\n  listen(this.interactions, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(this);\n    }, this);\n\n  listen(this.interactions, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(null);\n    }, this);\n\n  this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n  listen(this.overlays_, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      this.addOverlayInternal_(/** @type {module:ol/Overlay} */ (event.element));\n    }, this);\n\n  listen(this.overlays_, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      const overlay = /** @type {module:ol/Overlay} */ (event.element);\n      const id = overlay.getId();\n      if (id !== undefined) {\n        delete this.overlayIdIndex_[id.toString()];\n      }\n      event.element.setMap(null);\n    }, this);\n\n};\n\ninherits(PluggableMap, BaseObject);\n\n\nPluggableMap.prototype.createRenderer = function() {\n  throw new Error('Use a map type that has a createRenderer method');\n};\n\n\n/**\n * Add the given control to the map.\n * @param {module:ol/control/Control} control Control.\n * @api\n */\nPluggableMap.prototype.addControl = function(control) {\n  this.getControls().push(control);\n};\n\n\n/**\n * Add the given interaction to the map.\n * @param {module:ol/interaction/Interaction} interaction Interaction to add.\n * @api\n */\nPluggableMap.prototype.addInteraction = function(interaction) {\n  this.getInteractions().push(interaction);\n};\n\n\n/**\n * Adds the given layer to the top of this map. If you want to add a layer\n * elsewhere in the stack, use `getLayers()` and the methods available on\n * {@link module:ol/Collection~Collection}.\n * @param {module:ol/layer/Base} layer Layer.\n * @api\n */\nPluggableMap.prototype.addLayer = function(layer) {\n  const layers = this.getLayerGroup().getLayers();\n  layers.push(layer);\n};\n\n\n/**\n * Add the given overlay to the map.\n * @param {module:ol/Overlay} overlay Overlay.\n * @api\n */\nPluggableMap.prototype.addOverlay = function(overlay) {\n  this.getOverlays().push(overlay);\n};\n\n\n/**\n * This deals with map's overlay collection changes.\n * @param {module:ol/Overlay} overlay Overlay.\n * @private\n */\nPluggableMap.prototype.addOverlayInternal_ = function(overlay) {\n  const id = overlay.getId();\n  if (id !== undefined) {\n    this.overlayIdIndex_[id.toString()] = overlay;\n  }\n  overlay.setMap(this);\n};\n\n\n/**\n *\n * @inheritDoc\n */\nPluggableMap.prototype.disposeInternal = function() {\n  this.mapBrowserEventHandler_.dispose();\n  unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n  unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n  unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n  if (this.handleResize_ !== undefined) {\n    removeEventListener(EventType.RESIZE, this.handleResize_, false);\n    this.handleResize_ = undefined;\n  }\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n    this.animationDelayKey_ = undefined;\n  }\n  this.setTarget(null);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Detect features that intersect a pixel on the viewport, and execute a\n * callback with each intersecting feature. Layers included in the detection can\n * be configured through the `layerFilter` option in `opt_options`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n *     module:ol/layer/Layer): T} callback Feature callback. The callback will be\n *     called with two arguments. The first argument is one\n *     {@link module:ol/Feature feature} or\n *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n *     unmanaged layers. To stop detection, callback functions can return a\n *     truthy value.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T\n * @api\n */\nPluggableMap.prototype.forEachFeatureAtPixel = function(pixel, callback, opt_options) {\n  if (!this.frameState_) {\n    return;\n  }\n  const coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  const hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  const layerFilter = opt_options.layerFilter !== undefined ?\n    opt_options.layerFilter : TRUE;\n  return this.renderer_.forEachFeatureAtCoordinate(\n    coordinate, this.frameState_, hitTolerance, callback, null,\n    layerFilter, null);\n};\n\n\n/**\n * Get all features that intersect a pixel on the viewport.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {Array.<module:ol/Feature|module:ol/render/Feature>} The detected features or\n * `null` if none were found.\n * @api\n */\nPluggableMap.prototype.getFeaturesAtPixel = function(pixel, opt_options) {\n  let features = null;\n  this.forEachFeatureAtPixel(pixel, function(feature) {\n    if (!features) {\n      features = [];\n    }\n    features.push(feature);\n  }, opt_options);\n  return features;\n};\n\n/**\n * Detect layers that have a color value at a pixel on the viewport, and\n * execute a callback with each matching layer. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback\n *     Layer callback. This callback will receive two arguments: first is the\n *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n *     that do not currently support this argument. To stop detection, callback\n *     functions can return a truthy value.\n * @param {S=} opt_this Value to use as `this` when executing `callback`.\n * @param {(function(this: U, module:ol/layer/Layer): boolean)=} opt_layerFilter Layer\n *     filter function. The filter function will receive one argument, the\n *     {@link module:ol/layer/Layer layer-candidate} and it should return a boolean\n *     value. Only layers which are visible and for which this function returns\n *     `true` will be tested for features. By default, all visible layers will\n *     be tested.\n * @param {U=} opt_this2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T,U\n * @api\n */\nPluggableMap.prototype.forEachLayerAtPixel = function(pixel, callback, opt_this, opt_layerFilter, opt_this2) {\n  if (!this.frameState_) {\n    return;\n  }\n  const thisArg = opt_this !== undefined ? opt_this : null;\n  const layerFilter = opt_layerFilter !== undefined ? opt_layerFilter : TRUE;\n  const thisArg2 = opt_this2 !== undefined ? opt_this2 : null;\n  return this.renderer_.forEachLayerAtPixel(\n    pixel, this.frameState_, callback, thisArg,\n    layerFilter, thisArg2);\n};\n\n\n/**\n * Detect if features intersect a pixel on the viewport. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {boolean} Is there a feature at the given pixel?\n * @template U\n * @api\n */\nPluggableMap.prototype.hasFeatureAtPixel = function(pixel, opt_options) {\n  if (!this.frameState_) {\n    return false;\n  }\n  const coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  const layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n  const hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  return this.renderer_.hasFeatureAtCoordinate(\n    coordinate, this.frameState_, hitTolerance, layerFilter, null);\n};\n\n\n/**\n * Returns the coordinate in view projection for a browser event.\n * @param {Event} event Event.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nPluggableMap.prototype.getEventCoordinate = function(event) {\n  return this.getCoordinateFromPixel(this.getEventPixel(event));\n};\n\n\n/**\n * Returns the map pixel position for a browser event relative to the viewport.\n * @param {Event} event Event.\n * @return {module:ol~Pixel} Pixel.\n * @api\n */\nPluggableMap.prototype.getEventPixel = function(event) {\n  const viewportPosition = this.viewport_.getBoundingClientRect();\n  const eventPosition = event.changedTouches ? event.changedTouches[0] : event;\n  return [\n    eventPosition.clientX - viewportPosition.left,\n    eventPosition.clientY - viewportPosition.top\n  ];\n};\n\n\n/**\n * Get the target in which this map is rendered.\n * Note that this returns what is entered as an option or in setTarget:\n * if that was an element, it returns an element; if a string, it returns that.\n * @return {Element|string|undefined} The Element or id of the Element that the\n *     map is rendered in.\n * @observable\n * @api\n */\nPluggableMap.prototype.getTarget = function() {\n  return /** @type {Element|string|undefined} */ (this.get(MapProperty.TARGET));\n};\n\n\n/**\n * Get the DOM element into which this map is rendered. In contrast to\n * `getTarget` this method always return an `Element`, or `null` if the\n * map has no target.\n * @return {Element} The element that the map is rendered in.\n * @api\n */\nPluggableMap.prototype.getTargetElement = function() {\n  const target = this.getTarget();\n  if (target !== undefined) {\n    return typeof target === 'string' ? document.getElementById(target) : target;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Get the coordinate for a given pixel.  This returns a coordinate in the\n * map view projection.\n * @param {module:ol~Pixel} pixel Pixel position in the map viewport.\n * @return {module:ol/coordinate~Coordinate} The coordinate for the pixel position.\n * @api\n */\nPluggableMap.prototype.getCoordinateFromPixel = function(pixel) {\n  const frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n};\n\n\n/**\n * Get the map controls. Modifying this collection changes the controls\n * associated with the map.\n * @return {module:ol/Collection.<module:ol/control/Control>} Controls.\n * @api\n */\nPluggableMap.prototype.getControls = function() {\n  return this.controls;\n};\n\n\n/**\n * Get the map overlays. Modifying this collection changes the overlays\n * associated with the map.\n * @return {module:ol/Collection.<module:ol/Overlay>} Overlays.\n * @api\n */\nPluggableMap.prototype.getOverlays = function() {\n  return this.overlays_;\n};\n\n\n/**\n * Get an overlay by its identifier (the value returned by overlay.getId()).\n * Note that the index treats string and numeric identifiers as the same. So\n * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n * @param {string|number} id Overlay identifier.\n * @return {module:ol/Overlay} Overlay.\n * @api\n */\nPluggableMap.prototype.getOverlayById = function(id) {\n  const overlay = this.overlayIdIndex_[id.toString()];\n  return overlay !== undefined ? overlay : null;\n};\n\n\n/**\n * Get the map interactions. Modifying this collection changes the interactions\n * associated with the map.\n *\n * Interactions are used for e.g. pan, zoom and rotate.\n * @return {module:ol/Collection.<module:ol/interaction/Interaction>} Interactions.\n * @api\n */\nPluggableMap.prototype.getInteractions = function() {\n  return this.interactions;\n};\n\n\n/**\n * Get the layergroup associated with this map.\n * @return {module:ol/layer/Group} A layer group containing the layers in this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.getLayerGroup = function() {\n  return (\n    /** @type {module:ol/layer/Group} */ (this.get(MapProperty.LAYERGROUP))\n  );\n};\n\n\n/**\n * Get the collection of layers associated with this map.\n * @return {!module:ol/Collection.<module:ol/layer/Base>} Layers.\n * @api\n */\nPluggableMap.prototype.getLayers = function() {\n  const layers = this.getLayerGroup().getLayers();\n  return layers;\n};\n\n\n/**\n * Get the pixel for a coordinate.  This takes a coordinate in the map view\n * projection and returns the corresponding pixel.\n * @param {module:ol/coordinate~Coordinate} coordinate A map coordinate.\n * @return {module:ol~Pixel} A pixel position in the map viewport.\n * @api\n */\nPluggableMap.prototype.getPixelFromCoordinate = function(coordinate) {\n  const frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n  }\n};\n\n\n/**\n * Get the map renderer.\n * @return {module:ol/renderer/Map} Renderer\n */\nPluggableMap.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Get the size of this map.\n * @return {module:ol/size~Size|undefined} The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\nPluggableMap.prototype.getSize = function() {\n  return (\n    /** @type {module:ol/size~Size|undefined} */ (this.get(MapProperty.SIZE))\n  );\n};\n\n\n/**\n * Get the view associated with this map. A view manages properties such as\n * center and resolution.\n * @return {module:ol/View} The view that controls this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.getView = function() {\n  return (\n    /** @type {module:ol/View} */ (this.get(MapProperty.VIEW))\n  );\n};\n\n\n/**\n * Get the element that serves as the map viewport.\n * @return {Element} Viewport.\n * @api\n */\nPluggableMap.prototype.getViewport = function() {\n  return this.viewport_;\n};\n\n\n/**\n * Get the element that serves as the container for overlays.  Elements added to\n * this container will let mousedown and touchstart events through to the map,\n * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n * events.\n * @return {!Element} The map's overlay container.\n */\nPluggableMap.prototype.getOverlayContainer = function() {\n  return this.overlayContainer_;\n};\n\n\n/**\n * Get the element that serves as a container for overlays that don't allow\n * event propagation. Elements added to this container won't let mousedown and\n * touchstart events through to the map, so clicks and gestures on an overlay\n * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n * @return {!Element} The map's overlay container that stops events.\n */\nPluggableMap.prototype.getOverlayContainerStopEvent = function() {\n  return this.overlayContainerStopEvent_;\n};\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {module:ol/coordinate~Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nPluggableMap.prototype.getTilePriority = function(tile, tileSourceKey, tileCenter, tileResolution) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  const frameState = this.frameState_;\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels\n  // between the center of the tile and the focus.  The factor of 65536 means\n  // that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const deltaX = tileCenter[0] - frameState.focus[0];\n  const deltaY = tileCenter[1] - frameState.focus[1];\n  return 65536 * Math.log(tileResolution) +\n      Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n};\n\n\n/**\n * @param {Event} browserEvent Browser event.\n * @param {string=} opt_type Type.\n */\nPluggableMap.prototype.handleBrowserEvent = function(browserEvent, opt_type) {\n  const type = opt_type || browserEvent.type;\n  const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n  this.handleMapBrowserEvent(mapBrowserEvent);\n};\n\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The event to handle.\n */\nPluggableMap.prototype.handleMapBrowserEvent = function(mapBrowserEvent) {\n  if (!this.frameState_) {\n    // With no view defined, we cannot translate pixels into geographical\n    // coordinates so interactions cannot be used.\n    return;\n  }\n  this.focus_ = mapBrowserEvent.coordinate;\n  mapBrowserEvent.frameState = this.frameState_;\n  const interactionsArray = this.getInteractions().getArray();\n  if (this.dispatchEvent(mapBrowserEvent) !== false) {\n    for (let i = interactionsArray.length - 1; i >= 0; i--) {\n      const interaction = interactionsArray[i];\n      if (!interaction.getActive()) {\n        continue;\n      }\n      const cont = interaction.handleEvent(mapBrowserEvent);\n      if (!cont) {\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * @protected\n */\nPluggableMap.prototype.handlePostRender = function() {\n\n  const frameState = this.frameState_;\n\n  // Manage the tile queue\n  // Image loads are expensive and a limited resource, so try to use them\n  // efficiently:\n  // * When the view is static we allow a large number of parallel tile loads\n  //   to complete the frame as quickly as possible.\n  // * When animating or interacting, image loads can cause janks, so we reduce\n  //   the maximum number of loads per frame and limit the number of parallel\n  //   tile loads to remain reactive to view changes and to reduce the chance of\n  //   loading tiles that will quickly disappear from view.\n  const tileQueue = this.tileQueue_;\n  if (!tileQueue.isEmpty()) {\n    let maxTotalLoading = this.maxTilesLoading_;\n    let maxNewLoads = maxTotalLoading;\n    if (frameState) {\n      const hints = frameState.viewHints;\n      if (hints[ViewHint.ANIMATING]) {\n        maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n      if (hints[ViewHint.INTERACTING]) {\n        maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n    }\n    if (tileQueue.getTilesLoading() < maxTotalLoading) {\n      tileQueue.reprioritize(); // FIXME only call if view has changed\n      tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n    }\n  }\n\n  const postRenderFunctions = this.postRenderFunctions_;\n  for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n    postRenderFunctions[i](this, frameState);\n  }\n  postRenderFunctions.length = 0;\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleSizeChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleTargetChanged_ = function() {\n  // target may be undefined, null, a string or an Element.\n  // If it's a string we convert it to an Element before proceeding.\n  // If it's not now an Element we remove the viewport from the DOM.\n  // If it's an Element we append the viewport element to it.\n\n  let targetElement;\n  if (this.getTarget()) {\n    targetElement = this.getTargetElement();\n  }\n\n  if (this.keyHandlerKeys_) {\n    for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.keyHandlerKeys_[i]);\n    }\n    this.keyHandlerKeys_ = null;\n  }\n\n  if (!targetElement) {\n    this.renderer_.removeLayerRenderers();\n    removeNode(this.viewport_);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n  } else {\n    targetElement.appendChild(this.viewport_);\n\n    const keyboardEventTarget = !this.keyboardEventTarget_ ?\n      targetElement : this.keyboardEventTarget_;\n    this.keyHandlerKeys_ = [\n      listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n      listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n    ];\n\n    if (!this.handleResize_) {\n      this.handleResize_ = this.updateSize.bind(this);\n      addEventListener(EventType.RESIZE, this.handleResize_, false);\n    }\n  }\n\n  this.updateSize();\n  // updateSize calls setSize, so no need to call this.render\n  // ourselves here.\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleTileChange_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleViewPropertyChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleViewChanged_ = function() {\n  if (this.viewPropertyListenerKey_) {\n    unlistenByKey(this.viewPropertyListenerKey_);\n    this.viewPropertyListenerKey_ = null;\n  }\n  if (this.viewChangeListenerKey_) {\n    unlistenByKey(this.viewChangeListenerKey_);\n    this.viewChangeListenerKey_ = null;\n  }\n  const view = this.getView();\n  if (view) {\n    this.viewport_.setAttribute('data-view', getUid(view));\n    this.viewPropertyListenerKey_ = listen(\n      view, ObjectEventType.PROPERTYCHANGE,\n      this.handleViewPropertyChanged_, this);\n    this.viewChangeListenerKey_ = listen(\n      view, EventType.CHANGE,\n      this.handleViewPropertyChanged_, this);\n  }\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleLayerGroupChanged_ = function() {\n  if (this.layerGroupPropertyListenerKeys_) {\n    this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n    this.layerGroupPropertyListenerKeys_ = null;\n  }\n  const layerGroup = this.getLayerGroup();\n  if (layerGroup) {\n    this.layerGroupPropertyListenerKeys_ = [\n      listen(\n        layerGroup, ObjectEventType.PROPERTYCHANGE,\n        this.render, this),\n      listen(\n        layerGroup, EventType.CHANGE,\n        this.render, this)\n    ];\n  }\n  this.render();\n};\n\n\n/**\n * @return {boolean} Is rendered.\n */\nPluggableMap.prototype.isRendered = function() {\n  return !!this.frameState_;\n};\n\n\n/**\n * Requests an immediate render in a synchronous manner.\n * @api\n */\nPluggableMap.prototype.renderSync = function() {\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n  }\n  this.animationDelay_();\n};\n\n\n/**\n * Request a map rendering (at the next animation frame).\n * @api\n */\nPluggableMap.prototype.render = function() {\n  if (this.animationDelayKey_ === undefined) {\n    this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n  }\n};\n\n\n/**\n * Remove the given control from the map.\n * @param {module:ol/control/Control} control Control.\n * @return {module:ol/control/Control|undefined} The removed control (or undefined\n *     if the control was not found).\n * @api\n */\nPluggableMap.prototype.removeControl = function(control) {\n  return this.getControls().remove(control);\n};\n\n\n/**\n * Remove the given interaction from the map.\n * @param {module:ol/interaction/Interaction} interaction Interaction to remove.\n * @return {module:ol/interaction/Interaction|undefined} The removed interaction (or\n *     undefined if the interaction was not found).\n * @api\n */\nPluggableMap.prototype.removeInteraction = function(interaction) {\n  return this.getInteractions().remove(interaction);\n};\n\n\n/**\n * Removes the given layer from the map.\n * @param {module:ol/layer/Base} layer Layer.\n * @return {module:ol/layer/Base|undefined} The removed layer (or undefined if the\n *     layer was not found).\n * @api\n */\nPluggableMap.prototype.removeLayer = function(layer) {\n  const layers = this.getLayerGroup().getLayers();\n  return layers.remove(layer);\n};\n\n\n/**\n * Remove the given overlay from the map.\n * @param {module:ol/Overlay} overlay Overlay.\n * @return {module:ol/Overlay|undefined} The removed overlay (or undefined\n *     if the overlay was not found).\n * @api\n */\nPluggableMap.prototype.removeOverlay = function(overlay) {\n  return this.getOverlays().remove(overlay);\n};\n\n\n/**\n * @param {number} time Time.\n * @private\n */\nPluggableMap.prototype.renderFrame_ = function(time) {\n  let viewState;\n\n  const size = this.getSize();\n  const view = this.getView();\n  const extent = createEmpty();\n  const previousFrameState = this.frameState_;\n  /** @type {?module:ol/PluggableMap~FrameState} */\n  let frameState = null;\n  if (size !== undefined && hasArea(size) && view && view.isDef()) {\n    const viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    const layerStates = {};\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n    }\n    viewState = view.getState();\n    let focus = this.focus_;\n    if (!focus) {\n      focus = viewState.center;\n      const pixelResolution = viewState.resolution / this.pixelRatio_;\n      focus[0] = Math.round(focus[0] / pixelResolution) * pixelResolution;\n      focus[1] = Math.round(focus[1] / pixelResolution) * pixelResolution;\n    }\n    frameState = /** @type {module:ol/PluggableMap~FrameState} */ ({\n      animate: false,\n      coordinateToPixelTransform: this.coordinateToPixelTransform_,\n      extent: extent,\n      focus: focus,\n      index: this.frameIndex_++,\n      layerStates: layerStates,\n      layerStatesArray: layerStatesArray,\n      pixelRatio: this.pixelRatio_,\n      pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n      postRenderFunctions: [],\n      size: size,\n      skippedFeatureUids: this.skippedFeatureUids_,\n      tileQueue: this.tileQueue_,\n      time: time,\n      usedTiles: {},\n      viewState: viewState,\n      viewHints: viewHints,\n      wantedTiles: {}\n    });\n  }\n\n  if (frameState) {\n    frameState.extent = getForViewAndSize(viewState.center,\n      viewState.resolution, viewState.rotation, frameState.size, extent);\n  }\n\n  this.frameState_ = frameState;\n  this.renderer_.renderFrame(frameState);\n\n  if (frameState) {\n    if (frameState.animate) {\n      this.render();\n    }\n    Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n    if (previousFrameState) {\n      const moveStart = !this.previousExtent_ ||\n                  (!isEmpty(this.previousExtent_) &&\n                  !equals(frameState.extent, this.previousExtent_));\n      if (moveStart) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n        this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n      }\n    }\n\n    const idle = this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n    if (idle) {\n      this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n      clone(frameState.extent, this.previousExtent_);\n    }\n  }\n\n  this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n  setTimeout(this.handlePostRender.bind(this), 0);\n\n};\n\n\n/**\n * Sets the layergroup of this map.\n * @param {module:ol/layer/Group} layerGroup A layer group containing the layers in this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.setLayerGroup = function(layerGroup) {\n  this.set(MapProperty.LAYERGROUP, layerGroup);\n};\n\n\n/**\n * Set the size of this map.\n * @param {module:ol/size~Size|undefined} size The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\nPluggableMap.prototype.setSize = function(size) {\n  this.set(MapProperty.SIZE, size);\n};\n\n\n/**\n * Set the target element to render this map into.\n * @param {Element|string|undefined} target The Element or id of the Element\n *     that the map is rendered in.\n * @observable\n * @api\n */\nPluggableMap.prototype.setTarget = function(target) {\n  this.set(MapProperty.TARGET, target);\n};\n\n\n/**\n * Set the view for this map.\n * @param {module:ol/View} view The view that controls this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.setView = function(view) {\n  this.set(MapProperty.VIEW, view);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n */\nPluggableMap.prototype.skipFeature = function(feature) {\n  const featureUid = getUid(feature).toString();\n  this.skippedFeatureUids_[featureUid] = true;\n  this.render();\n};\n\n\n/**\n * Force a recalculation of the map viewport size.  This should be called when\n * third-party code changes the size of the map viewport.\n * @api\n */\nPluggableMap.prototype.updateSize = function() {\n  const targetElement = this.getTargetElement();\n\n  if (!targetElement) {\n    this.setSize(undefined);\n  } else {\n    const computedStyle = getComputedStyle(targetElement);\n    this.setSize([\n      targetElement.offsetWidth -\n          parseFloat(computedStyle['borderLeftWidth']) -\n          parseFloat(computedStyle['paddingLeft']) -\n          parseFloat(computedStyle['paddingRight']) -\n          parseFloat(computedStyle['borderRightWidth']),\n      targetElement.offsetHeight -\n          parseFloat(computedStyle['borderTopWidth']) -\n          parseFloat(computedStyle['paddingTop']) -\n          parseFloat(computedStyle['paddingBottom']) -\n          parseFloat(computedStyle['borderBottomWidth'])\n    ]);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n */\nPluggableMap.prototype.unskipFeature = function(feature) {\n  const featureUid = getUid(feature).toString();\n  delete this.skippedFeatureUids_[featureUid];\n  this.render();\n};\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {module:ol/PluggableMap~MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {Element|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const values = {};\n\n  const layerGroup = (options.layers instanceof LayerGroup) ?\n    options.layers : new LayerGroup({layers: options.layers});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(options.controls instanceof Collection,\n        47); // Expected `controls` to be an array or an `module:ol/Collection~Collection`\n      controls = options.controls;\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(options.interactions instanceof Collection,\n        48); // Expected `interactions` to be an array or an `module:ol/Collection~Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(options.overlays instanceof Collection,\n        49); // Expected `overlays` to be an array or an `module:ol/Collection~Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport {inherits} from '../index.js';\nimport {UNDEFINED} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Element} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {Element|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/control/Control~Options} options Control options.\n * @api\n */\nconst Control = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @protected\n   * @type {Element}\n   */\n  this.element = options.element ? options.element : null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.target_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  /**\n   * @protected\n   * @type {!Array.<module:ol/events~EventsKey>}\n   */\n  this.listenerKeys = [];\n\n  /**\n   * @type {function(module:ol/MapEvent)}\n   */\n  this.render = options.render ? options.render : UNDEFINED;\n\n  if (options.target) {\n    this.setTarget(options.target);\n  }\n\n};\n\ninherits(Control, BaseObject);\n\n\n/**\n * @inheritDoc\n */\nControl.prototype.disposeInternal = function() {\n  removeNode(this.element);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the map associated with this control.\n * @return {module:ol/PluggableMap} Map.\n * @api\n */\nControl.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Remove the control from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nControl.prototype.setMap = function(map) {\n  if (this.map_) {\n    removeNode(this.element);\n  }\n  for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n    unlistenByKey(this.listenerKeys[i]);\n  }\n  this.listenerKeys.length = 0;\n  this.map_ = map;\n  if (this.map_) {\n    const target = this.target_ ?\n      this.target_ : map.getOverlayContainerStopEvent();\n    target.appendChild(this.element);\n    if (this.render !== UNDEFINED) {\n      this.listenerKeys.push(listen(map,\n        MapEventType.POSTRENDER, this.render, this));\n    }\n    map.render();\n  }\n};\n\n\n/**\n * This function is used to set a target element for the control. It has no\n * effect if it is called after the control has been added to the map (i.e.\n * after `setMap` is called on the control). If no `target` is set in the\n * options passed to the control constructor and if `setTarget` is not called\n * then the control is added to the map's overlay container.\n * @param {Element|string} target Target.\n * @api\n */\nControl.prototype.setTarget = function(target) {\n  this.target_ = typeof target === 'string' ?\n    document.getElementById(target) :\n    target;\n};\nexport default Control;\n","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object.<string>} The font families (or null if the input spec is invalid).\n */\nexport const getFontFamilies = (function() {\n  let style;\n  const cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      const family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render'\n};\n","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid, inherits} from '../index.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from '../layer/Base.js';\nimport LayerProperty from '../layer/Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/source/Source} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/layer/Layer} layer\n * @property {number} opacity\n * @property {module:ol/source/Source~State} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {module:ol/extent~Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/layer/Base}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Layer~Options} options Layer options.\n * @api\n */\nconst Layer = function(options) {\n\n  const baseOptions = assign({}, options);\n  delete baseOptions.source;\n\n  BaseLayer.call(this, /** @type {module:ol/layer/Base~Options} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapPrecomposeKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapRenderKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.sourceChangeKey_ = null;\n\n  if (options.map) {\n    this.setMap(options.map);\n  }\n\n  listen(this,\n    getChangeEventType(LayerProperty.SOURCE),\n    this.handleSourcePropertyChange_, this);\n\n  const source = options.source ? options.source : null;\n  this.setSource(source);\n};\n\ninherits(Layer, BaseLayer);\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\n/**\n * @inheritDoc\n */\nLayer.prototype.getLayersArray = function(opt_array) {\n  const array = opt_array ? opt_array : [];\n  array.push(this);\n  return array;\n};\n\n\n/**\n * @inheritDoc\n */\nLayer.prototype.getLayerStatesArray = function(opt_states) {\n  const states = opt_states ? opt_states : [];\n  states.push(this.getLayerState());\n  return states;\n};\n\n\n/**\n * Get the layer source.\n * @return {module:ol/source/Source} The layer source (or `null` if not yet set).\n * @observable\n * @api\n */\nLayer.prototype.getSource = function() {\n  const source = this.get(LayerProperty.SOURCE);\n  return (\n    /** @type {module:ol/source/Source} */ (source) || null\n  );\n};\n\n\n/**\n  * @inheritDoc\n  */\nLayer.prototype.getSourceState = function() {\n  const source = this.getSource();\n  return !source ? SourceState.UNDEFINED : source.getState();\n};\n\n\n/**\n * @private\n */\nLayer.prototype.handleSourceChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @private\n */\nLayer.prototype.handleSourcePropertyChange_ = function() {\n  if (this.sourceChangeKey_) {\n    unlistenByKey(this.sourceChangeKey_);\n    this.sourceChangeKey_ = null;\n  }\n  const source = this.getSource();\n  if (source) {\n    this.sourceChangeKey_ = listen(source,\n      EventType.CHANGE, this.handleSourceChange_, this);\n  }\n  this.changed();\n};\n\n\n/**\n * Sets the layer to be rendered on top of other layers on a map. The map will\n * not manage this layer in its layers collection, and the callback in\n * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n * is useful for temporary layers. To remove an unmanaged layer from the map,\n * use `#setMap(null)`.\n *\n * To add the layer to a map and have it managed by the map, use\n * {@link module:ol/Map#addLayer} instead.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nLayer.prototype.setMap = function(map) {\n  if (this.mapPrecomposeKey_) {\n    unlistenByKey(this.mapPrecomposeKey_);\n    this.mapPrecomposeKey_ = null;\n  }\n  if (!map) {\n    this.changed();\n  }\n  if (this.mapRenderKey_) {\n    unlistenByKey(this.mapRenderKey_);\n    this.mapRenderKey_ = null;\n  }\n  if (map) {\n    this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n      const layerState = this.getLayerState();\n      layerState.managed = false;\n      layerState.zIndex = Infinity;\n      evt.frameState.layerStatesArray.push(layerState);\n      evt.frameState.layerStates[getUid(this)] = layerState;\n    }, this);\n    this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n    this.changed();\n  }\n};\n\n\n/**\n * Set the layer source.\n * @param {module:ol/source/Source} source The layer source.\n * @observable\n * @api\n */\nLayer.prototype.setSource = function(source) {\n  this.set(LayerProperty.SOURCE, source);\n};\nexport default Layer;\n","/**\n * @module ol/control/Attribution\n */\nimport {inherits} from '../index.js';\nimport {equals} from '../array.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {Element|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible=true] Specify if attributions can\n * be collapsed. If you use an OSM source, should be set to `false` — see\n * {@link https://www.openstreetmap.org/copyright OSM Copyright} —\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Element} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Attribution~Options=} opt_options Attribution options.\n * @api\n */\nconst Attribution = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.ulElement_ = document.createElement('UL');\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsible_ = options.collapsible !== undefined ?\n    options.collapsible : true;\n\n  if (!this.collapsible_) {\n    this.collapsed_ = false;\n  }\n\n  const className = options.className !== undefined ? options.className : 'ol-attribution';\n\n  const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n  const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n  if (typeof collapseLabel === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.collapseLabel_ = document.createElement('span');\n    this.collapseLabel_.textContent = collapseLabel;\n  } else {\n    this.collapseLabel_ = collapseLabel;\n  }\n\n  const label = options.label !== undefined ? options.label : 'i';\n\n  if (typeof label === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.label_ = document.createElement('span');\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n  }\n\n\n  const activeLabel = (this.collapsible_ && !this.collapsed_) ?\n    this.collapseLabel_ : this.label_;\n  const button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(activeLabel);\n\n  listen(button, EventType.CLICK, this.handleClick_, this);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(this.ulElement_);\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  /**\n   * A list of currently rendered resolutions.\n   * @type {Array.<string>}\n   * @private\n   */\n  this.renderedAttributions_ = [];\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n};\n\ninherits(Attribution, Control);\n\n\n/**\n * Get a list of visible attributions.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {Array.<string>} Attributions.\n * @private\n */\nAttribution.prototype.getSourceAttributions_ = function(frameState) {\n  /**\n   * Used to determine if an attribution already exists.\n   * @type {!Object.<string, boolean>}\n   */\n  const lookup = {};\n\n  /**\n   * A list of visible attributions.\n   * @type {Array.<string>}\n   */\n  const visibleAttributions = [];\n\n  const layerStatesArray = frameState.layerStatesArray;\n  const resolution = frameState.viewState.resolution;\n  for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    const layerState = layerStatesArray[i];\n    if (!visibleAtResolution(layerState, resolution)) {\n      continue;\n    }\n\n    const source = layerState.layer.getSource();\n    if (!source) {\n      continue;\n    }\n\n    const attributionGetter = source.getAttributions();\n    if (!attributionGetter) {\n      continue;\n    }\n\n    const attributions = attributionGetter(frameState);\n    if (!attributions) {\n      continue;\n    }\n\n    if (Array.isArray(attributions)) {\n      for (let j = 0, jj = attributions.length; j < jj; ++j) {\n        if (!(attributions[j] in lookup)) {\n          visibleAttributions.push(attributions[j]);\n          lookup[attributions[j]] = true;\n        }\n      }\n    } else {\n      if (!(attributions in lookup)) {\n        visibleAttributions.push(attributions);\n        lookup[attributions] = true;\n      }\n    }\n  }\n  return visibleAttributions;\n};\n\n\n/**\n * Update the attribution element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\n/**\n * @private\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nAttribution.prototype.updateElement_ = function(frameState) {\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.element.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const attributions = this.getSourceAttributions_(frameState);\n\n  const visible = attributions.length > 0;\n  if (this.renderedVisible_ != visible) {\n    this.element.style.display = visible ? '' : 'none';\n    this.renderedVisible_ = visible;\n  }\n\n  if (equals(attributions, this.renderedAttributions_)) {\n    return;\n  }\n\n  removeChildren(this.ulElement_);\n\n  // append the attributions\n  for (let i = 0, ii = attributions.length; i < ii; ++i) {\n    const element = document.createElement('LI');\n    element.innerHTML = attributions[i];\n    this.ulElement_.appendChild(element);\n  }\n\n  this.renderedAttributions_ = attributions;\n};\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nAttribution.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleToggle_();\n};\n\n\n/**\n * @private\n */\nAttribution.prototype.handleToggle_ = function() {\n  this.element.classList.toggle(CLASS_COLLAPSED);\n  if (this.collapsed_) {\n    replaceNode(this.collapseLabel_, this.label_);\n  } else {\n    replaceNode(this.label_, this.collapseLabel_);\n  }\n  this.collapsed_ = !this.collapsed_;\n};\n\n\n/**\n * Return `true` if the attribution is collapsible, `false` otherwise.\n * @return {boolean} True if the widget is collapsible.\n * @api\n */\nAttribution.prototype.getCollapsible = function() {\n  return this.collapsible_;\n};\n\n\n/**\n * Set whether the attribution should be collapsible.\n * @param {boolean} collapsible True if the widget is collapsible.\n * @api\n */\nAttribution.prototype.setCollapsible = function(collapsible) {\n  if (this.collapsible_ === collapsible) {\n    return;\n  }\n  this.collapsible_ = collapsible;\n  this.element.classList.toggle('ol-uncollapsible');\n  if (!collapsible && this.collapsed_) {\n    this.handleToggle_();\n  }\n};\n\n\n/**\n * Collapse or expand the attribution according to the passed parameter. Will\n * not do anything if the attribution isn't collapsible or if the current\n * collapsed state is already the one requested.\n * @param {boolean} collapsed True if the widget is collapsed.\n * @api\n */\nAttribution.prototype.setCollapsed = function(collapsed) {\n  if (!this.collapsible_ || this.collapsed_ === collapsed) {\n    return;\n  }\n  this.handleToggle_();\n};\n\n\n/**\n * Return `true` when the attribution is currently collapsed or `false`\n * otherwise.\n * @return {boolean} True if the widget is collapsed.\n * @api\n */\nAttribution.prototype.getCollapsed = function() {\n  return this.collapsed_;\n};\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\n\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {inherits} from '../index.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|Element} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {Element|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Rotate~Options=} opt_options Rotate options.\n * @api\n */\nconst Rotate = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-rotate';\n\n  const label = options.label !== undefined ? options.label : '\\u21E7';\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  this.label_ = null;\n\n  if (typeof label === 'string') {\n    this.label_ = document.createElement('span');\n    this.label_.className = 'ol-compass';\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n    this.label_.classList.add('ol-compass');\n  }\n\n  const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n  const button = document.createElement('button');\n  button.className = className + '-reset';\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(this.label_);\n\n  listen(button, EventType.CLICK,\n    Rotate.prototype.handleClick_, this);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(button);\n\n  this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = undefined;\n\n  if (this.autoHide_) {\n    this.element.classList.add(CLASS_HIDDEN);\n  }\n\n};\n\ninherits(Rotate, Control);\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nRotate.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  if (this.callResetNorth_ !== undefined) {\n    this.callResetNorth_();\n  } else {\n    this.resetNorth_();\n  }\n};\n\n\n/**\n * @private\n */\nRotate.prototype.resetNorth_ = function() {\n  const map = this.getMap();\n  const view = map.getView();\n  if (!view) {\n    // the map does not have a view, so we can't act\n    // upon it\n    return;\n  }\n  if (view.getRotation() !== undefined) {\n    if (this.duration_ > 0) {\n      view.animate({\n        rotation: 0,\n        duration: this.duration_,\n        easing: easeOut\n      });\n    } else {\n      view.setRotation(0);\n    }\n  }\n};\n\n\n/**\n * Update the rotate control element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  const rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    const transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      const contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {inherits} from '../index.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|Element} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Element} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {Element|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Zoom~Options=} opt_options Zoom options.\n * @api\n */\nconst Zoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-zoom';\n\n  const delta = options.delta !== undefined ? options.delta : 1;\n\n  const zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n  const zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n  const zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n    options.zoomInTipLabel : 'Zoom in';\n  const zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n    options.zoomOutTipLabel : 'Zoom out';\n\n  const inElement = document.createElement('button');\n  inElement.className = className + '-in';\n  inElement.setAttribute('type', 'button');\n  inElement.title = zoomInTipLabel;\n  inElement.appendChild(\n    typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n  );\n\n  listen(inElement, EventType.CLICK,\n    Zoom.prototype.handleClick_.bind(this, delta));\n\n  const outElement = document.createElement('button');\n  outElement.className = className + '-out';\n  outElement.setAttribute('type', 'button');\n  outElement.title = zoomOutTipLabel;\n  outElement.appendChild(\n    typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n  );\n\n  listen(outElement, EventType.CLICK,\n    Zoom.prototype.handleClick_.bind(this, -delta));\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(inElement);\n  element.appendChild(outElement);\n\n  Control.call(this, {\n    element: element,\n    target: options.target\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(Zoom, Control);\n\n\n/**\n * @param {number} delta Zoom delta.\n * @param {Event} event The event to handle\n * @private\n */\nZoom.prototype.handleClick_ = function(delta, event) {\n  event.preventDefault();\n  this.zoomByDelta_(delta);\n};\n\n\n/**\n * @param {number} delta Zoom delta.\n * @private\n */\nZoom.prototype.zoomByDelta_ = function(delta) {\n  const map = this.getMap();\n  const view = map.getView();\n  if (!view) {\n    // the map does not have a view, so we can't act\n    // upon it\n    return;\n  }\n  const currentResolution = view.getResolution();\n  if (currentResolution) {\n    const newResolution = view.constrainResolution(currentResolution, delta);\n    if (this.duration_ > 0) {\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      view.animate({\n        resolution: newResolution,\n        duration: this.duration_,\n        easing: easeOut\n      });\n    } else {\n      view.setResolution(newResolution);\n    }\n  }\n};\nexport default Zoom;\n","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {module:ol/control/Attribution~Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {module:ol/control/Rotate~Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {module:ol/control/Zoom~Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {module:ol/control/util~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/control/Control>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @constructor\n * @param {number} decay Rate of decay (must be negative).\n * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n * @param {number} delay Delay to consider to calculate the kinetic\n *     initial values (milliseconds).\n * @struct\n * @api\n */\nconst Kinetic = function(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function() {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function(x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function() {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  const delay = Date.now() - this.delay_;\n  const lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  let firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  const dx = this.points_[lastIndex] - this.points_[firstIndex];\n  const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function() {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function() {\n  return this.angle_;\n};\nexport default Kinetic;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport {inherits} from '../index.js';\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(module:ol/MapBrowserEvent):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n *\n * @constructor\n * @param {module:ol/interaction/Interaction~InteractionOptions} options Options.\n * @extends {module:ol/Object}\n * @api\n */\nconst Interaction = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  this.setActive(true);\n\n  /**\n   * @type {function(module:ol/MapBrowserEvent):boolean}\n   */\n  this.handleEvent = options.handleEvent;\n\n};\n\ninherits(Interaction, BaseObject);\n\n\n/**\n * Return whether the interaction is currently active.\n * @return {boolean} `true` if the interaction is active, `false` otherwise.\n * @observable\n * @api\n */\nInteraction.prototype.getActive = function() {\n  return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n};\n\n\n/**\n * Get the map associated with this interaction.\n * @return {module:ol/PluggableMap} Map.\n * @api\n */\nInteraction.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @observable\n * @api\n */\nInteraction.prototype.setActive = function(active) {\n  this.set(InteractionProperty.ACTIVE, active);\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {module:ol/PluggableMap} map Map.\n */\nInteraction.prototype.setMap = function(map) {\n  this.map_ = map;\n};\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenter();\n  if (currentCenter) {\n    const center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    const currentRotation = view.getRotation();\n    const currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentResolution = view.getResolution();\n  let resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    const resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    const currentCenter = view.getCenter();\n    let center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    const currentResolution = view.getResolution();\n    const currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        const center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport {inherits} from '../index.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/DoubleClickZoom~Options=} opt_options Options.\n * @api\n */\nconst DoubleClickZoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = options.delta ? options.delta : 1;\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(DoubleClickZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  const browserEvent = mapBrowserEvent.originalEvent;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    const map = mapBrowserEvent.map;\n    const anchor = mapBrowserEvent.coordinate;\n    const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    const view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, module:ol/MapBrowserEvent): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @function\n * @api\n */\nexport const always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @function\n * @api\n */\nexport const never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function(mapBrowserEvent) {\n  const target = mapBrowserEvent.originalEvent.target;\n  const tagName = target.tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function(mapBrowserEvent) {\n  assert(mapBrowserEvent.pointerEvent, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    /** @type {module:ol/MapBrowserEvent} */ (mapBrowserEvent).pointerEvent.pointerType == 'mouse'\n  );\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * @see http://www.w3.org/TR/pointerevents/#button-states\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function(mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.pointerEvent;\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport {inherits} from '../index.js';\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleDragEvent = UNDEFINED;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleUpEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleDownEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleMoveEvent = UNDEFINED;\n\n\n/**\n * @typedef {Object} Options\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {(function(module:ol/MapBrowserEvent):boolean)} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n *\n * @constructor\n * @param {module:ol/interaction/Pointer~Options=} opt_options Options.\n * @extends {module:ol/interaction/Interaction}\n * @api\n */\nconst PointerInteraction = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  Interaction.call(this, {\n    handleEvent: options.handleEvent || handleEvent\n  });\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n   * @private\n   */\n  this.handleDownEvent_ = options.handleDownEvent ?\n    options.handleDownEvent : handleDownEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent)}\n   * @private\n   */\n  this.handleDragEvent_ = options.handleDragEvent ?\n    options.handleDragEvent : handleDragEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent)}\n   * @private\n   */\n  this.handleMoveEvent_ = options.handleMoveEvent ?\n    options.handleMoveEvent : handleMoveEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n   * @private\n   */\n  this.handleUpEvent_ = options.handleUpEvent ?\n    options.handleUpEvent : handleUpEvent;\n\n  /**\n   * @type {boolean}\n   * @protected\n   */\n  this.handlingDownUpSequence = false;\n\n  /**\n   * @type {!Object.<string, module:ol/pointer/PointerEvent>}\n   * @private\n   */\n  this.trackedPointers_ = {};\n\n  /**\n   * @type {Array.<module:ol/pointer/PointerEvent>}\n   * @protected\n   */\n  this.targetPointers = [];\n\n};\n\ninherits(PointerInteraction, Interaction);\n\n\n/**\n * @param {Array.<module:ol/pointer/PointerEvent>} pointerEvents List of events.\n * @return {module:ol~Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @private\n */\nPointerInteraction.prototype.updateTrackedPointers_ = function(mapBrowserEvent) {\n  if (isPointerDraggingEvent(mapBrowserEvent)) {\n    const event = mapBrowserEvent.pointerEvent;\n\n    const id = event.pointerId.toString();\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      delete this.trackedPointers_[id];\n    } else if (mapBrowserEvent.type ==\n        MapBrowserEventType.POINTERDOWN) {\n      this.trackedPointers_[id] = event;\n    } else if (id in this.trackedPointers_) {\n      // update only when there was a pointerdown event for this pointer\n      this.trackedPointers_[id] = event;\n    }\n    this.targetPointers = getValues(this.trackedPointers_);\n  }\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n * detected.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Pointer}\n * @api\n */\nexport function handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let stopEvent = false;\n  this.updateTrackedPointers_(mapBrowserEvent);\n  if (this.handlingDownUpSequence) {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n      this.handleDragEvent_(mapBrowserEvent);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      const handledUp = this.handleUpEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n    }\n  } else {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n      const handled = this.handleDownEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handled;\n      stopEvent = this.shouldStopEvent(handled);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n      this.handleMoveEvent_(mapBrowserEvent);\n    }\n  }\n  return !stopEvent;\n}\n\n\n/**\n * This method is used to determine if \"down\" events should be propagated to\n * other interactions or should be stopped.\n *\n * The method receives the return code of the \"handleDownEvent\" function.\n *\n * By default this function is the \"identity\" function. It's overridden in\n * child classes.\n *\n * @param {boolean} handled Was the event handled by the interaction?\n * @return {boolean} Should the event be stopped?\n * @protected\n */\nPointerInteraction.prototype.shouldStopEvent = function(handled) {\n  return handled;\n};\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {inherits} from '../index.js';\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {module:ol/Kinetic} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragPan~Options=} opt_options Options.\n * @api\n */\nconst DragPan = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/Kinetic|undefined}\n   */\n  this.kinetic_ = options.kinetic;\n\n  /**\n   * @type {module:ol~Pixel}\n   */\n  this.lastCentroid = null;\n\n  /**\n   * @type {number}\n   */\n  this.lastPointersCount_;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.noKinetic_ = false;\n\n};\n\ninherits(DragPan, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  const targetPointers = this.targetPointers;\n  const centroid = centroidFromPointers(targetPointers);\n  if (targetPointers.length == this.lastPointersCount_) {\n    if (this.kinetic_) {\n      this.kinetic_.update(centroid[0], centroid[1]);\n    }\n    if (this.lastCentroid) {\n      const deltaX = this.lastCentroid[0] - centroid[0];\n      const deltaY = centroid[1] - this.lastCentroid[1];\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      let center = [deltaX, deltaY];\n      scaleCoordinate(center, view.getResolution());\n      rotateCoordinate(center, view.getRotation());\n      addCoordinate(center, view.getCenter());\n      center = view.constrainCenter(center);\n      view.setCenter(center);\n    }\n  } else if (this.kinetic_) {\n    // reset so we don't overestimate the kinetic energy after\n    // after one finger down, tiny drag, second finger down\n    this.kinetic_.begin();\n  }\n  this.lastCentroid = centroid;\n  this.lastPointersCount_ = targetPointers.length;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (this.targetPointers.length === 0) {\n    if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n      const distance = this.kinetic_.getDistance();\n      const angle = this.kinetic_.getAngle();\n      const center = /** @type {!module:ol/coordinate~Coordinate} */ (view.getCenter());\n      const centerpx = map.getPixelFromCoordinate(center);\n      const dest = map.getCoordinateFromPixel([\n        centerpx[0] - distance * Math.cos(angle),\n        centerpx[1] - distance * Math.sin(angle)\n      ]);\n      view.animate({\n        center: view.constrainCenter(dest),\n        duration: 500,\n        easing: easeOut\n      });\n    }\n    view.setHint(ViewHint.INTERACTING, -1);\n    return false;\n  } else {\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    this.lastCentroid = null;\n    if (!this.handlingDownUpSequence) {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    // stop any current animation\n    if (view.getAnimating()) {\n      view.setCenter(mapBrowserEvent.frameState.viewState.center);\n    }\n    if (this.kinetic_) {\n      this.kinetic_.begin();\n    }\n    // No kinetic as soon as more than one pointer on the screen is\n    // detected. This is to prevent nasty pans after pinch.\n    this.noKinetic_ = this.targetPointers.length > 1;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nDragPan.prototype.shouldStopEvent = FALSE;\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {inherits} from '../index.js';\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragRotate~Options=} opt_options Options.\n * @api\n */\nconst DragRotate = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n};\n\ninherits(DragRotate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n  const size = map.getSize();\n  const offset = mapBrowserEvent.pixel;\n  const theta =\n      Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n  if (this.lastAngle_ !== undefined) {\n    const delta = theta - this.lastAngle_;\n    const rotation = view.getRotation();\n    rotateWithoutConstraints(view, rotation - delta);\n  }\n  this.lastAngle_ = theta;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  const rotation = view.getRotation();\n  rotate(view, rotation, undefined, this.duration_);\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n    const map = mapBrowserEvent.map;\n    map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nDragRotate.prototype.shouldStopEvent = FALSE;\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n// FIXME add rotation\n\nimport {inherits} from '../index.js';\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\n/**\n * @constructor\n * @extends {module:ol/Disposable}\n * @param {string} className CSS class name.\n */\nconst RenderBox = function(className) {\n\n  /**\n   * @type {module:ol/geom/Polygon}\n   * @private\n   */\n  this.geometry_ = null;\n\n  /**\n   * @type {HTMLDivElement}\n   * @private\n   */\n  this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n  this.element_.style.position = 'absolute';\n  this.element_.className = 'ol-box ' + className;\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  /**\n   * @private\n   * @type {module:ol~Pixel}\n   */\n  this.startPixel_ = null;\n\n  /**\n   * @private\n   * @type {module:ol~Pixel}\n   */\n  this.endPixel_ = null;\n\n};\n\ninherits(RenderBox, Disposable);\n\n\n/**\n * @inheritDoc\n */\nRenderBox.prototype.disposeInternal = function() {\n  this.setMap(null);\n};\n\n\n/**\n * @private\n */\nRenderBox.prototype.render_ = function() {\n  const startPixel = this.startPixel_;\n  const endPixel = this.endPixel_;\n  const px = 'px';\n  const style = this.element_.style;\n  style.left = Math.min(startPixel[0], endPixel[0]) + px;\n  style.top = Math.min(startPixel[1], endPixel[1]) + px;\n  style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n  style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n};\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n */\nRenderBox.prototype.setMap = function(map) {\n  if (this.map_) {\n    this.map_.getOverlayContainer().removeChild(this.element_);\n    const style = this.element_.style;\n    style.left = style.top = style.width = style.height = 'inherit';\n  }\n  this.map_ = map;\n  if (this.map_) {\n    this.map_.getOverlayContainer().appendChild(this.element_);\n  }\n};\n\n\n/**\n * @param {module:ol~Pixel} startPixel Start pixel.\n * @param {module:ol~Pixel} endPixel End pixel.\n */\nRenderBox.prototype.setPixels = function(startPixel, endPixel) {\n  this.startPixel_ = startPixel;\n  this.endPixel_ = endPixel;\n  this.createOrUpdateGeometry();\n  this.render_();\n};\n\n\n/**\n * Creates or updates the cached geometry.\n */\nRenderBox.prototype.createOrUpdateGeometry = function() {\n  const startPixel = this.startPixel_;\n  const endPixel = this.endPixel_;\n  const pixels = [\n    startPixel,\n    [startPixel[0], endPixel[1]],\n    endPixel,\n    [endPixel[0], startPixel[1]]\n  ];\n  const coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n  // close the polygon\n  coordinates[4] = coordinates[0].slice();\n  if (!this.geometry_) {\n    this.geometry_ = new Polygon([coordinates]);\n  } else {\n    this.geometry_.setCoordinates([coordinates]);\n  }\n};\n\n\n/**\n * @return {module:ol/geom/Polygon} Geometry.\n */\nRenderBox.prototype.getGeometry = function() {\n  return this.geometry_;\n};\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {inherits} from '../index.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {UNDEFINED} from '../functions.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, module:ol/MapBrowserEvent, module:ol~Pixel, module:ol~Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {module:ol/interaction/DragBox~EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n *\n * @param {string} type The event type.\n * @param {module:ol/coordinate~Coordinate} coordinate The event coordinate.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Originating event.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst DragBoxEvent = function(type, coordinate, mapBrowserEvent) {\n  Event.call(this, type);\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n\n  /**\n   * @const\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserEvent;\n\n};\n\ninherits(DragBoxEvent, Event);\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/DragBox~DragBoxEvent\n * @param {module:ol/interaction/DragBox~Options=} opt_options Options.\n * @api\n */\nconst DragBox = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/render/Box}\n   * @private\n   */\n  this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.startPixel_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : always;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/DragBox~EndCondition}\n   */\n  this.boxEndCondition_ = options.boxEndCondition ?\n    options.boxEndCondition : defaultBoxEndCondition;\n};\n\ninherits(DragBox, PointerInteraction);\n\n\n/**\n * The default condition for determining whether the boxend event\n * should fire.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The originating MapBrowserEvent\n *     leading to the box end.\n * @param {module:ol~Pixel} startPixel The starting pixel of the box.\n * @param {module:ol~Pixel} endPixel The end pixel of the box.\n * @return {boolean} Whether or not the boxend condition should be fired.\n * @this {module:ol/interaction/DragBox}\n */\nfunction defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n  const width = endPixel[0] - startPixel[0];\n  const height = endPixel[1] - startPixel[1];\n  return width * width + height * height >= this.minArea_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n  this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n    mapBrowserEvent.coordinate, mapBrowserEvent));\n}\n\n\n/**\n * Returns geometry of last drawn box.\n * @return {module:ol/geom/Polygon} Geometry.\n * @api\n */\nDragBox.prototype.getGeometry = function() {\n  return this.box_.getGeometry();\n};\n\n\n/**\n * To be overridden by child classes.\n * FIXME: use constructor option instead of relying on overriding.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @protected\n */\nDragBox.prototype.onBoxEnd = UNDEFINED;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  this.box_.setMap(null);\n\n  if (this.boxEndCondition_(mapBrowserEvent,\n    this.startPixel_, mapBrowserEvent.pixel)) {\n    this.onBoxEnd(mapBrowserEvent);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)) {\n    this.startPixel_ = mapBrowserEvent.pixel;\n    this.box_.setMap(mapBrowserEvent.map);\n    this.box_.setPixels(this.startPixel_, this.startPixel_);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {inherits} from '../index.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from '../interaction/DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n *\n * @constructor\n * @extends {module:ol/interaction/DragBox}\n * @param {module:ol/interaction/DragZoom~Options=} opt_options Options.\n * @api\n */\nconst DragZoom = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const condition = options.condition ? options.condition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.out_ = options.out !== undefined ? options.out : false;\n\n  DragBox.call(this, {\n    condition: condition,\n    className: options.className || 'ol-dragzoom'\n  });\n\n};\n\ninherits(DragZoom, DragBox);\n\n\n/**\n * @inheritDoc\n */\nDragZoom.prototype.onBoxEnd = function() {\n  const map = this.getMap();\n\n  const view = /** @type {!module:ol/View} */ (map.getView());\n\n  const size = /** @type {!module:ol/size~Size} */ (map.getSize());\n\n  let extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    const mapExtent = view.calculateExtent(size);\n    const boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    const factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  const resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  let center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n\n};\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {inherits} from '../index.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/KeyboardPan~Options=} opt_options Options.\n * @api\n */\nconst KeyboardPan = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultCondition_ = function(mapBrowserEvent) {\n    return noModifierKeys(mapBrowserEvent) &&\n      targetNotEditable(mapBrowserEvent);\n  };\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition !== undefined ?\n    options.condition : this.defaultCondition_;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelDelta_ = options.pixelDelta !== undefined ?\n    options.pixelDelta : 128;\n\n};\n\ninherits(KeyboardPan, Interaction);\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    const keyEvent = mapBrowserEvent.originalEvent;\n    const keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      let deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      const delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link moudle:ol/interaction/KeyboardPan~KeyboardPan}.\n *\n * @constructor\n * @param {module:ol/interaction/KeyboardZoom~Options=} opt_options Options.\n * @extends {module:ol/interaction/Interaction}\n * @api\n */\nconst KeyboardZoom = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = options.delta ? options.delta : 1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n};\n\ninherits(KeyboardZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    const keyEvent = mapBrowserEvent.originalEvent;\n    const charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      const map = mapBrowserEvent.map;\n      const delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport {inherits} from '../index.js';\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nconst MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/MouseWheelZoom~Options=} opt_options Options.\n * @api\n */\nconst MouseWheelZoom = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.constrainResolution_ = options.constrainResolution || false;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : always;\n\n  /**\n   * @private\n   * @type {?module:ol/coordinate~Coordinate}\n   */\n  this.lastAnchor_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.startTime_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.timeoutId_ = undefined;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/MouseWheelZoom~Mode|undefined}\n   */\n  this.mode_ = undefined;\n\n  /**\n   * Trackpad events separated by this delay will be considered separate\n   * interactions.\n   * @type {number}\n   */\n  this.trackpadEventGap_ = 400;\n\n  /**\n   * @type {number|undefined}\n   */\n  this.trackpadTimeoutId_ = undefined;\n\n  /**\n   * The number of delta values per zoom level\n   * @private\n   * @type {number}\n   */\n  this.trackpadDeltaPerZoom_ = 300;\n\n  /**\n   * The zoom factor by which scroll zooming is allowed to exceed the limits.\n   * @private\n   * @type {number}\n   */\n  this.trackpadZoomBuffer_ = 1.5;\n\n};\n\ninherits(MouseWheelZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * mousewheel-event) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} Allow event propagation.\n * @this {module:ol/interaction/MouseWheelZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const type = mapBrowserEvent.type;\n  if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n    return true;\n  }\n\n  mapBrowserEvent.preventDefault();\n\n  const map = mapBrowserEvent.map;\n  const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n  if (this.useAnchor_) {\n    this.lastAnchor_ = mapBrowserEvent.coordinate;\n  }\n\n  // Delta normalisation inspired by\n  // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n  let delta;\n  if (mapBrowserEvent.type == EventType.WHEEL) {\n    delta = wheelEvent.deltaY;\n    if (FIREFOX &&\n        wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      delta /= DEVICE_PIXEL_RATIO;\n    }\n    if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      delta *= 40;\n    }\n  } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n    delta = -wheelEvent.wheelDeltaY;\n    if (SAFARI) {\n      delta /= 3;\n    }\n  }\n\n  if (delta === 0) {\n    return false;\n  }\n\n  const now = Date.now();\n\n  if (this.startTime_ === undefined) {\n    this.startTime_ = now;\n  }\n\n  if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n    this.mode_ = Math.abs(delta) < 4 ?\n      Mode.TRACKPAD :\n      Mode.WHEEL;\n  }\n\n  if (this.mode_ === Mode.TRACKPAD) {\n    const view = map.getView();\n    if (this.trackpadTimeoutId_) {\n      clearTimeout(this.trackpadTimeoutId_);\n    } else {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n    let resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n    const minResolution = view.getMinResolution();\n    const maxResolution = view.getMaxResolution();\n    let rebound = 0;\n    if (resolution < minResolution) {\n      resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n      rebound = 1;\n    } else if (resolution > maxResolution) {\n      resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n      rebound = -1;\n    }\n    if (this.lastAnchor_) {\n      const center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n      view.setCenter(view.constrainCenter(center));\n    }\n    view.setResolution(resolution);\n\n    if (rebound === 0 && this.constrainResolution_) {\n      view.animate({\n        resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: this.duration_\n      });\n    }\n\n    if (rebound > 0) {\n      view.animate({\n        resolution: minResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    } else if (rebound < 0) {\n      view.animate({\n        resolution: maxResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    }\n    this.startTime_ = now;\n    return false;\n  }\n\n  this.delta_ += delta;\n\n  const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n  clearTimeout(this.timeoutId_);\n  this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n  return false;\n}\n\n\n/**\n * @private\n */\nMouseWheelZoom.prototype.decrementInteractingHint_ = function() {\n  this.trackpadTimeoutId_ = undefined;\n  const view = this.getMap().getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n};\n\n\n/**\n * @private\n * @param {module:ol/PluggableMap} map Map.\n */\nMouseWheelZoom.prototype.handleWheelZoom_ = function(map) {\n  const view = map.getView();\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  const maxDelta = MAX_DELTA;\n  const delta = clamp(this.delta_, -maxDelta, maxDelta);\n  zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n  this.mode_ = undefined;\n  this.delta_ = 0;\n  this.lastAnchor_ = null;\n  this.startTime_ = undefined;\n  this.timeoutId_ = undefined;\n};\n\n\n/**\n * Enable or disable using the mouse's location as an anchor when zooming\n * @param {boolean} useAnchor true to zoom to the mouse's location, false\n * to zoom to the center of the map\n * @api\n */\nMouseWheelZoom.prototype.setMouseAnchor = function(useAnchor) {\n  this.useAnchor_ = useAnchor;\n  if (!useAnchor) {\n    this.lastAnchor_ = null;\n  }\n};\n\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {inherits} from '../index.js';\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/PinchRotate~Options=} opt_options Options.\n * @api\n */\nconst PinchRotate = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotating_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotationDelta_ = 0.0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(PinchRotate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  let rotationDelta = 0.0;\n\n  const touch0 = this.targetPointers[0];\n  const touch1 = this.targetPointers[1];\n\n  // angle between touches\n  const angle = Math.atan2(\n    touch1.clientY - touch0.clientY,\n    touch1.clientX - touch0.clientX);\n\n  if (this.lastAngle_ !== undefined) {\n    const delta = angle - this.lastAngle_;\n    this.rotationDelta_ += delta;\n    if (!this.rotating_ &&\n        Math.abs(this.rotationDelta_) > this.threshold_) {\n      this.rotating_ = true;\n    }\n    rotationDelta = delta;\n  }\n  this.lastAngle_ = angle;\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n\n  // rotate anchor point.\n  // FIXME: should be the intersection point between the lines:\n  //     touch0,touch1 and previousTouch0,previousTouch1\n  const viewportPosition = map.getViewport().getBoundingClientRect();\n  const centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // rotate\n  if (this.rotating_) {\n    const rotation = view.getRotation();\n    map.render();\n    rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    if (this.rotating_) {\n      const rotation = view.getRotation();\n      rotate(view, rotation, this.anchor_, this.duration_);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    const map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastAngle_ = undefined;\n    this.rotating_ = false;\n    this.rotationDelta_ = 0.0;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nPinchRotate.prototype.shouldStopEvent = FALSE;\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {inherits} from '../index.js';\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/PinchZoom~Options=} opt_options Options.\n * @api\n */\nconst PinchZoom = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.constrainResolution_ = options.constrainResolution || false;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastDistance_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.lastScaleDelta_ = 1;\n\n};\n\ninherits(PinchZoom, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  let scaleDelta = 1.0;\n\n  const touch0 = this.targetPointers[0];\n  const touch1 = this.targetPointers[1];\n  const dx = touch0.clientX - touch1.clientX;\n  const dy = touch0.clientY - touch1.clientY;\n\n  // distance between touches\n  const distance = Math.sqrt(dx * dx + dy * dy);\n\n  if (this.lastDistance_ !== undefined) {\n    scaleDelta = this.lastDistance_ / distance;\n  }\n  this.lastDistance_ = distance;\n\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  const resolution = view.getResolution();\n  const maxResolution = view.getMaxResolution();\n  const minResolution = view.getMinResolution();\n  let newResolution = resolution * scaleDelta;\n  if (newResolution > maxResolution) {\n    scaleDelta = maxResolution / resolution;\n    newResolution = maxResolution;\n  } else if (newResolution < minResolution) {\n    scaleDelta = minResolution / resolution;\n    newResolution = minResolution;\n  }\n\n  if (scaleDelta != 1.0) {\n    this.lastScaleDelta_ = scaleDelta;\n  }\n\n  // scale anchor point.\n  const viewportPosition = map.getViewport().getBoundingClientRect();\n  const centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // scale, bypass the resolution constraint\n  map.render();\n  zoomWithoutConstraints(view, newResolution, this.anchor_);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    const resolution = view.getResolution();\n    if (this.constrainResolution_ ||\n        resolution < view.getMinResolution() ||\n        resolution > view.getMaxResolution()) {\n      // Zoom to final resolution, with an animation, and provide a\n      // direction not to zoom out/in if user was pinching in/out.\n      // Direction is > 0 if pinching out, and < 0 if pinching in.\n      const direction = this.lastScaleDelta_ - 1;\n      zoom(view, resolution, this.anchor_, this.duration_, direction);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    const map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastDistance_ = undefined;\n    this.lastScaleDelta_ = 1;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nPinchZoom.prototype.shouldStopEvent = FALSE;\nexport default PinchZoom;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {inherits} from '../index.js';\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<function(new: module:ol/format/Feature)>} [formatConstructors] Format constructors.\n * @property {module:ol/source/Vector} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {module:ol/proj~ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {Element} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event module:ol/interaction/DragAndDrop~DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/DragAndDrop~DragAndDropEventType} type Type.\n * @param {File} file File.\n * @param {Array.<module:ol/Feature>=} opt_features Features.\n * @param {module:ol/proj/Projection=} opt_projection Projection.\n */\nconst DragAndDropEvent = function(type, file, opt_features, opt_projection) {\n\n  Event.call(this, type);\n\n  /**\n   * The features parsed from dropped data.\n   * @type {Array.<module:ol/Feature>|undefined}\n   * @api\n   */\n  this.features = opt_features;\n\n  /**\n   * The dropped file.\n   * @type {File}\n   * @api\n   */\n  this.file = file;\n\n  /**\n   * The feature projection.\n   * @type {module:ol/proj/Projection|undefined}\n   * @api\n   */\n  this.projection = opt_projection;\n\n};\ninherits(DragAndDropEvent, Event);\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @fires module:ol/interaction/DragAndDrop~DragAndDropEvent\n * @param {module:ol/interaction/DragAndDrop~Options=} opt_options Options.\n * @api\n */\nconst DragAndDrop = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  Interaction.call(this, {\n    handleEvent: TRUE\n  });\n\n  /**\n   * @private\n   * @type {Array.<function(new: module:ol/format/Feature)>}\n   */\n  this.formatConstructors_ = options.formatConstructors ?\n    options.formatConstructors : [];\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = options.projection ?\n    getProjection(options.projection) : null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.dropListenKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/source/Vector}\n   */\n  this.source_ = options.source || null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.target = options.target ? options.target : null;\n\n};\n\ninherits(DragAndDrop, Interaction);\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {module:ol/interaction/DragAndDrop}\n */\nfunction handleDrop(event) {\n  const files = event.dataTransfer.files;\n  for (let i = 0, ii = files.length; i < ii; ++i) {\n    const file = files.item(i);\n    const reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\n/**\n * @param {File} file File.\n * @param {Event} event Load event.\n * @private\n */\nDragAndDrop.prototype.handleResult_ = function(file, event) {\n  const result = event.target.result;\n  const map = this.getMap();\n  let projection = this.projection_;\n  if (!projection) {\n    const view = map.getView();\n    projection = view.getProjection();\n  }\n\n  const formatConstructors = this.formatConstructors_;\n  let features = [];\n  for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n    /**\n     * Avoid \"cannot instantiate abstract class\" error.\n     * @type {Function}\n     */\n    const formatConstructor = formatConstructors[i];\n    /**\n     * @type {module:ol/format/Feature}\n     */\n    const format = new formatConstructor();\n    features = this.tryReadFeatures_(format, result, {\n      featureProjection: projection\n    });\n    if (features && features.length > 0) {\n      break;\n    }\n  }\n  if (this.source_) {\n    this.source_.clear();\n    this.source_.addFeatures(features);\n  }\n  this.dispatchEvent(\n    new DragAndDropEvent(\n      DragAndDropEventType.ADD_FEATURES, file,\n      features, projection));\n};\n\n\n/**\n * @private\n */\nDragAndDrop.prototype.registerListeners_ = function() {\n  const map = this.getMap();\n  if (map) {\n    const dropArea = this.target ? this.target : map.getViewport();\n    this.dropListenKeys_ = [\n      listen(dropArea, EventType.DROP, handleDrop, this),\n      listen(dropArea, EventType.DRAGENTER, handleStop, this),\n      listen(dropArea, EventType.DRAGOVER, handleStop, this),\n      listen(dropArea, EventType.DROP, handleStop, this)\n    ];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nDragAndDrop.prototype.setActive = function(active) {\n  Interaction.prototype.setActive.call(this, active);\n  if (active) {\n    this.registerListeners_();\n  } else {\n    this.unregisterListeners_();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nDragAndDrop.prototype.setMap = function(map) {\n  this.unregisterListeners_();\n  Interaction.prototype.setMap.call(this, map);\n  if (this.getActive()) {\n    this.registerListeners_();\n  }\n};\n\n\n/**\n * @param {module:ol/format/Feature} format Format.\n * @param {string} text Text.\n * @param {module:ol/format/Feature~ReadOptions} options Read options.\n * @private\n * @return {Array.<module:ol/Feature>} Features.\n */\nDragAndDrop.prototype.tryReadFeatures_ = function(format, text, options) {\n  try {\n    return format.readFeatures(text, options);\n  } catch (e) {\n    return null;\n  }\n};\n\n\n/**\n * @private\n */\nDragAndDrop.prototype.unregisterListeners_ = function() {\n  if (this.dropListenKeys_) {\n    this.dropListenKeys_.forEach(unlistenByKey);\n    this.dropListenKeys_ = null;\n  }\n};\n\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {inherits} from '../index.js';\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport {rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragRotateAndZoom~Options=} opt_options Options.\n * @api\n */\nconst DragRotateAndZoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastMagnitude_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.lastScaleDelta_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n};\n\ninherits(DragRotateAndZoom, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  const map = mapBrowserEvent.map;\n  const size = map.getSize();\n  const offset = mapBrowserEvent.pixel;\n  const deltaX = offset[0] - size[0] / 2;\n  const deltaY = size[1] / 2 - offset[1];\n  const theta = Math.atan2(deltaY, deltaX);\n  const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  const view = map.getView();\n  if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\n    const angleDelta = theta - this.lastAngle_;\n    rotateWithoutConstraints(view, view.getRotation() - angleDelta);\n  }\n  this.lastAngle_ = theta;\n  if (this.lastMagnitude_ !== undefined) {\n    const resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\n    zoomWithoutConstraints(view, resolution);\n  }\n  if (this.lastMagnitude_ !== undefined) {\n    this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n  }\n  this.lastMagnitude_ = magnitude;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  const direction = this.lastScaleDelta_ - 1;\n  rotate(view, view.getRotation());\n  zoom(view, view.getResolution(), undefined, this.duration_, direction);\n  this.lastScaleDelta_ = 0;\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (this.condition_(mapBrowserEvent)) {\n    mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    this.lastMagnitude_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array.<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {module:ol/color~Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {module:ol/color~Color} Color.\n */\nexport const fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    const MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object.<string, module:ol/color~Color>}\n     */\n    const cache = {};\n\n    /**\n     * @type {number}\n     */\n    let cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {module:ol/color~Color} Color.\n       */\n      function(s) {\n        let color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            let i = 0;\n            for (const key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {module:ol/color~Color|string} color Color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(/** @type {string} */ (color));\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {module:ol/color~Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return (\n    /** @type {module:ol/color~Color} */ (color)\n  );\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/color~Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {module:ol/color~Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @return {module:ol/colorlike~ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (isColorLike(color)) {\n    return /** @type {string|CanvasPattern|CanvasGradient} */ (color);\n  } else {\n    return toString(/** @type {module:ol/color~Color} */ (color));\n  }\n}\n\n\n/**\n * @param {?} color The value that is potentially an {@link ol/colorlike~ColorLike}.\n * @return {boolean} The color is an {@link ol/colorlike~ColorLike}.\n */\nexport function isColorLike(color) {\n  return (\n    typeof color === 'string' ||\n    color instanceof CanvasPattern ||\n    color instanceof CanvasGradient\n  );\n}\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n","/**\n * @module ol/structs/LRUCache\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @fires module:ol/events/Event~Event\n * @struct\n * @template T\n * @param {number=} opt_highWaterMark High water mark.\n */\nconst LRUCache = function(opt_highWaterMark) {\n\n  EventTarget.call(this);\n\n  /**\n   * @type {number}\n   */\n  this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.count_ = 0;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/structs/LRUCache~Entry>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {?module:ol/structs/LRUCache~Entry}\n   */\n  this.oldest_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/structs/LRUCache~Entry}\n   */\n  this.newest_ = null;\n\n};\n\ninherits(LRUCache, EventTarget);\n\n\n/**\n * @return {boolean} Can expire cache.\n */\nLRUCache.prototype.canExpireCache = function() {\n  return this.getCount() > this.highWaterMark;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nLRUCache.prototype.clear = function() {\n  this.count_ = 0;\n  this.entries_ = {};\n  this.oldest_ = null;\n  this.newest_ = null;\n  this.dispatchEvent(EventType.CLEAR);\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Contains key.\n */\nLRUCache.prototype.containsKey = function(key) {\n  return this.entries_.hasOwnProperty(key);\n};\n\n\n/**\n * @param {function(this: S, T, string, module:ol/structs/LRUCache): ?} f The function\n *     to call for every entry from the oldest to the newer. This function takes\n *     3 arguments (the entry value, the entry key and the LRUCache object).\n *     The return value is ignored.\n * @param {S=} opt_this The object to use as `this` in `f`.\n * @template S\n */\nLRUCache.prototype.forEach = function(f, opt_this) {\n  let entry = this.oldest_;\n  while (entry) {\n    f.call(opt_this, entry.value_, entry.key_, this);\n    entry = entry.newer;\n  }\n};\n\n\n/**\n * @param {string} key Key.\n * @return {T} Value.\n */\nLRUCache.prototype.get = function(key) {\n  const entry = this.entries_[key];\n  assert(entry !== undefined,\n    15); // Tried to get a value for a key that does not exist in the cache\n  if (entry === this.newest_) {\n    return entry.value_;\n  } else if (entry === this.oldest_) {\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (this.oldest_.newer);\n    this.oldest_.older = null;\n  } else {\n    entry.newer.older = entry.older;\n    entry.older.newer = entry.newer;\n  }\n  entry.newer = null;\n  entry.older = this.newest_;\n  this.newest_.newer = entry;\n  this.newest_ = entry;\n  return entry.value_;\n};\n\n\n/**\n * Remove an entry from the cache.\n * @param {string} key The entry key.\n * @return {T} The removed entry.\n */\nLRUCache.prototype.remove = function(key) {\n  const entry = this.entries_[key];\n  assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n  if (entry === this.newest_) {\n    this.newest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.older);\n    if (this.newest_) {\n      this.newest_.newer = null;\n    }\n  } else if (entry === this.oldest_) {\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n    if (this.oldest_) {\n      this.oldest_.older = null;\n    }\n  } else {\n    entry.newer.older = entry.older;\n    entry.older.newer = entry.newer;\n  }\n  delete this.entries_[key];\n  --this.count_;\n  return entry.value_;\n};\n\n\n/**\n * @return {number} Count.\n */\nLRUCache.prototype.getCount = function() {\n  return this.count_;\n};\n\n\n/**\n * @return {Array.<string>} Keys.\n */\nLRUCache.prototype.getKeys = function() {\n  const keys = new Array(this.count_);\n  let i = 0;\n  let entry;\n  for (entry = this.newest_; entry; entry = entry.older) {\n    keys[i++] = entry.key_;\n  }\n  return keys;\n};\n\n\n/**\n * @return {Array.<T>} Values.\n */\nLRUCache.prototype.getValues = function() {\n  const values = new Array(this.count_);\n  let i = 0;\n  let entry;\n  for (entry = this.newest_; entry; entry = entry.older) {\n    values[i++] = entry.value_;\n  }\n  return values;\n};\n\n\n/**\n * @return {T} Last value.\n */\nLRUCache.prototype.peekLast = function() {\n  return this.oldest_.value_;\n};\n\n\n/**\n * @return {string} Last key.\n */\nLRUCache.prototype.peekLastKey = function() {\n  return this.oldest_.key_;\n};\n\n\n/**\n * Get the key of the newest item in the cache.  Throws if the cache is empty.\n * @return {string} The newest key.\n */\nLRUCache.prototype.peekFirstKey = function() {\n  return this.newest_.key_;\n};\n\n\n/**\n * @return {T} value Value.\n */\nLRUCache.prototype.pop = function() {\n  const entry = this.oldest_;\n  delete this.entries_[entry.key_];\n  if (entry.newer) {\n    entry.newer.older = null;\n  }\n  this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n  if (!this.oldest_) {\n    this.newest_ = null;\n  }\n  --this.count_;\n  return entry.value_;\n};\n\n\n/**\n * @param {string} key Key.\n * @param {T} value Value.\n */\nLRUCache.prototype.replace = function(key, value) {\n  this.get(key);  // update `newest_`\n  this.entries_[key].value_ = value;\n};\n\n\n/**\n * @param {string} key Key.\n * @param {T} value Value.\n */\nLRUCache.prototype.set = function(key, value) {\n  assert(!(key in this.entries_),\n    16); // Tried to set a value for a key that is used already\n  const entry = /** @type {module:ol/structs/LRUCache~Entry} */ ({\n    key_: key,\n    newer: null,\n    older: this.newest_,\n    value_: value\n  });\n  if (!this.newest_) {\n    this.oldest_ = entry;\n  } else {\n    this.newest_.newer = entry;\n  }\n  this.newest_ = entry;\n  this.entries_[key] = entry;\n  ++this.count_;\n};\n\n\n/**\n * Set a maximum number of entries for the cache.\n * @param {number} size Cache size.\n * @api\n */\nLRUCache.prototype.setSize = function(size) {\n  this.highWaterMark = size;\n};\n\n\n/**\n * Prune the cache.\n */\nLRUCache.prototype.prune = function() {\n  while (this.canExpireCache()) {\n    this.pop();\n  }\n};\nexport default LRUCache;\n","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {module:ol/colorlike~ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {module:ol/colorlike~ColorLike} [currentFillStyle]\n * @property {module:ol/colorlike~ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array.<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {module:ol/colorlike~ColorLike} [fillStyle]\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array.<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {module:ol/colorlike~ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array.<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {module:ol/structs/LRUCache.<HTMLCanvasElement>}\n * @api\n */\nexport const labelCache = new LRUCache();\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport const checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport const textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const checkFont = (function() {\n  const retries = 60;\n  const checked = checkedFonts;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  function isAvailable(font) {\n    const context = getMeasureContext();\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      context.font = size + referenceFont;\n      referenceWidth = context.measureText(text).width;\n      if (font != referenceFont) {\n        context.font = size + font + ',' + referenceFont;\n        const width = context.measureText(text).width;\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    return available;\n  }\n\n  function check() {\n    let done = true;\n    for (const font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    const fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (let i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      const fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {module:ol/size~Size} Measurement.\n */\nexport const measureTextHeight = (function() {\n  let span;\n  const heights = textHeights;\n  return function(font) {\n    let height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  const measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport const resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  let alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n","/**\n * @module ol/style/Image\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n * @property {boolean} snapToPixel\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n *\n * @constructor\n * @abstract\n * @param {module:ol/style/Image~Options} options Options.\n * @api\n */\nconst ImageStyle = function(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.snapToPixel_ = options.snapToPixel;\n\n};\n\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function() {\n  return this.opacity_;\n};\n\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Determine whether the symbolizer should be snapped to a pixel.\n * @return {boolean} The symbolizer should snap to a pixel.\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function() {\n  return this.snapToPixel_;\n};\n\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array.<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function() {};\n\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\nImageStyle.prototype.getImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @return {module:ol/ImageState} Image state.\n */\nImageStyle.prototype.getImageState = function() {};\n\n\n/**\n * @abstract\n * @return {module:ol/size~Size} Image size.\n */\nImageStyle.prototype.getImageSize = function() {};\n\n\n/**\n * @abstract\n * @return {module:ol/size~Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function() {};\n\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array.<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function() {};\n\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {module:ol/size~Size} Size.\n */\nImageStyle.prototype.getSize = function() {};\n\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function(opacity) {\n  this.opacity_ = opacity;\n};\n\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function(rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set whether to snap the image to the closest pixel.\n *\n * @param {boolean} snapToPixel Snap to pixel?\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function(snapToPixel) {\n  this.snapToPixel_ = snapToPixel;\n};\n\n\n/**\n * @abstract\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {module:ol/events~EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function() {};\n\n\n/**\n * @abstract\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function(listener, thisArg) {};\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\nimport {inherits} from '../index.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the shape in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the shape's position is animated. Without it, the shape may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n *\n * @constructor\n * @param {module:ol/style/RegularShape~Options} options Options.\n * @extends {module:ol/style/Image}\n * @api\n */\nconst RegularShape = function(options) {\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.checksums_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.hitDetectionCanvas_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.origin_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.points_ = options.points;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n    options.radius : options.radius1);\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.radius2_ = options.radius2;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.size_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.imageSize_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.hitDetectionImageSize_ = null;\n\n  /**\n   * @protected\n   * @type {module:ol/style/AtlasManager|undefined}\n   */\n  this.atlasManager_ = options.atlasManager;\n\n  this.render_(this.atlasManager_);\n\n  /**\n   * @type {boolean}\n   */\n  const snapToPixel = options.snapToPixel !== undefined ?\n    options.snapToPixel : true;\n\n  /**\n   * @type {boolean}\n   */\n  const rotateWithView = options.rotateWithView !== undefined ?\n    options.rotateWithView : false;\n\n  ImageStyle.call(this, {\n    opacity: 1,\n    rotateWithView: rotateWithView,\n    rotation: options.rotation !== undefined ? options.rotation : 0,\n    scale: 1,\n    snapToPixel: snapToPixel\n  });\n};\n\ninherits(RegularShape, ImageStyle);\n\n\n/**\n * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {module:ol/style/RegularShape} The cloned style.\n * @api\n */\nRegularShape.prototype.clone = function() {\n  const style = new RegularShape({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    points: this.getPoints(),\n    radius: this.getRadius(),\n    radius2: this.getRadius2(),\n    angle: this.getAngle(),\n    snapToPixel: this.getSnapToPixel(),\n    stroke: this.getStroke() ?  this.getStroke().clone() : undefined,\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getAnchor = function() {\n  return this.anchor_;\n};\n\n\n/**\n * Get the angle used in generating the shape.\n * @return {number} Shape's rotation in radians.\n * @api\n */\nRegularShape.prototype.getAngle = function() {\n  return this.angle_;\n};\n\n\n/**\n * Get the fill style for the shape.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nRegularShape.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getHitDetectionImage = function(pixelRatio) {\n  return this.hitDetectionCanvas_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getImage = function(pixelRatio) {\n  return this.canvas_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getImageSize = function() {\n  return this.imageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getHitDetectionImageSize = function() {\n  return this.hitDetectionImageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getImageState = function() {\n  return ImageState.LOADED;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getOrigin = function() {\n  return this.origin_;\n};\n\n\n/**\n * Get the number of points for generating the shape.\n * @return {number} Number of points for stars and regular polygons.\n * @api\n */\nRegularShape.prototype.getPoints = function() {\n  return this.points_;\n};\n\n\n/**\n * Get the (primary) radius for the shape.\n * @return {number} Radius.\n * @api\n */\nRegularShape.prototype.getRadius = function() {\n  return this.radius_;\n};\n\n\n/**\n * Get the secondary radius for the shape.\n * @return {number|undefined} Radius2.\n * @api\n */\nRegularShape.prototype.getRadius2 = function() {\n  return this.radius2_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getSize = function() {\n  return this.size_;\n};\n\n\n/**\n * Get the stroke style for the shape.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nRegularShape.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.load = function() {};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.unlistenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @protected\n * @param {module:ol/style/AtlasManager|undefined} atlasManager An atlas manager.\n */\nRegularShape.prototype.render_ = function(atlasManager) {\n  let imageSize;\n  let lineCap = '';\n  let lineJoin = '';\n  let miterLimit = 0;\n  let lineDash = null;\n  let lineDashOffset = 0;\n  let strokeStyle;\n  let strokeWidth = 0;\n\n  if (this.stroke_) {\n    strokeStyle = this.stroke_.getColor();\n    if (strokeStyle === null) {\n      strokeStyle = defaultStrokeStyle;\n    }\n    strokeStyle = asColorLike(strokeStyle);\n    strokeWidth = this.stroke_.getWidth();\n    if (strokeWidth === undefined) {\n      strokeWidth = defaultLineWidth;\n    }\n    lineDash = this.stroke_.getLineDash();\n    lineDashOffset = this.stroke_.getLineDashOffset();\n    if (!CANVAS_LINE_DASH) {\n      lineDash = null;\n      lineDashOffset = 0;\n    }\n    lineJoin = this.stroke_.getLineJoin();\n    if (lineJoin === undefined) {\n      lineJoin = defaultLineJoin;\n    }\n    lineCap = this.stroke_.getLineCap();\n    if (lineCap === undefined) {\n      lineCap = defaultLineCap;\n    }\n    miterLimit = this.stroke_.getMiterLimit();\n    if (miterLimit === undefined) {\n      miterLimit = defaultMiterLimit;\n    }\n  }\n\n  let size = 2 * (this.radius_ + strokeWidth) + 1;\n\n  /** @type {module:ol/style/RegularShape~RenderOptions} */\n  const renderOptions = {\n    strokeStyle: strokeStyle,\n    strokeWidth: strokeWidth,\n    size: size,\n    lineCap: lineCap,\n    lineDash: lineDash,\n    lineDashOffset: lineDashOffset,\n    lineJoin: lineJoin,\n    miterLimit: miterLimit\n  };\n\n  if (atlasManager === undefined) {\n    // no atlas manager is used, create a new canvas\n    const context = createCanvasContext2D(size, size);\n    this.canvas_ = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    size = this.canvas_.width;\n    imageSize = size;\n\n    this.draw_(renderOptions, context, 0, 0);\n\n    this.createHitDetectionCanvas_(renderOptions);\n  } else {\n    // an atlas manager is used, add the symbol to an atlas\n    size = Math.round(size);\n\n    const hasCustomHitDetectionImage = !this.fill_;\n    let renderHitDetectionCallback;\n    if (hasCustomHitDetectionImage) {\n      // render the hit-detection image into a separate atlas image\n      renderHitDetectionCallback =\n          this.drawHitDetectionCanvas_.bind(this, renderOptions);\n    }\n\n    const id = this.getChecksum();\n    const info = atlasManager.add(\n      id, size, size, this.draw_.bind(this, renderOptions),\n      renderHitDetectionCallback);\n\n    this.canvas_ = info.image;\n    this.origin_ = [info.offsetX, info.offsetY];\n    imageSize = info.image.width;\n\n    if (hasCustomHitDetectionImage) {\n      this.hitDetectionCanvas_ = info.hitImage;\n      this.hitDetectionImageSize_ =\n          [info.hitImage.width, info.hitImage.height];\n    } else {\n      this.hitDetectionCanvas_ = this.canvas_;\n      this.hitDetectionImageSize_ = [imageSize, imageSize];\n    }\n  }\n\n  this.anchor_ = [size / 2, size / 2];\n  this.size_ = [size, size];\n  this.imageSize_ = [imageSize, imageSize];\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The rendering context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\nRegularShape.prototype.draw_ = function(renderOptions, context, x, y) {\n  let i, angle0, radiusC;\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  let points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n      renderOptions.size / 2, renderOptions.size / 2,\n      this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n        renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n\n  if (this.fill_) {\n    let color = this.fill_.getColor();\n    if (color === null) {\n      color = defaultFillStyle;\n    }\n    context.fillStyle = asColorLike(color);\n    context.fill();\n  }\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.lineCap = renderOptions.lineCap;\n    context.lineJoin = renderOptions.lineJoin;\n    context.miterLimit = renderOptions.miterLimit;\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n */\nRegularShape.prototype.createHitDetectionCanvas_ = function(renderOptions) {\n  this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n  if (this.fill_) {\n    this.hitDetectionCanvas_ = this.canvas_;\n    return;\n  }\n\n  // if no fill style is set, create an extra hit-detection image with a\n  // default fill style\n  const context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n  this.hitDetectionCanvas_ = context.canvas;\n\n  this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\nRegularShape.prototype.drawHitDetectionCanvas_ = function(renderOptions, context, x, y) {\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  let points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n      renderOptions.size / 2, renderOptions.size / 2,\n      this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    let i, radiusC, angle0;\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n        renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n  context.fillStyle = defaultFillStyle;\n  context.fill();\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @return {string} The checksum.\n */\nRegularShape.prototype.getChecksum = function() {\n  const strokeChecksum = this.stroke_ ?\n    this.stroke_.getChecksum() : '-';\n  const fillChecksum = this.fill_ ?\n    this.fill_.getChecksum() : '-';\n\n  const recalculate = !this.checksums_ ||\n      (strokeChecksum != this.checksums_[1] ||\n      fillChecksum != this.checksums_[2] ||\n      this.radius_ != this.checksums_[3] ||\n      this.radius2_ != this.checksums_[4] ||\n      this.angle_ != this.checksums_[5] ||\n      this.points_ != this.checksums_[6]);\n\n  if (recalculate) {\n    const checksum = 'r' + strokeChecksum + fillChecksum +\n        (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n        (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n        (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n        (this.points_ !== undefined ? this.points_.toString() : '-');\n    this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n      this.radius_, this.radius2_, this.angle_, this.points_];\n  }\n\n  return this.checksums_[0];\n};\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\nimport {inherits} from '../index.js';\nimport RegularShape from '../style/RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the circle in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the circle's position is animated. Without it, the circle may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Circle~Options=} opt_options Options.\n * @extends {module:ol/style/RegularShape}\n * @api\n */\nconst CircleStyle = function(opt_options) {\n\n  const options = opt_options || {};\n\n  RegularShape.call(this, {\n    points: Infinity,\n    fill: options.fill,\n    radius: options.radius,\n    snapToPixel: options.snapToPixel,\n    stroke: options.stroke,\n    atlasManager: options.atlasManager\n  });\n\n};\n\ninherits(CircleStyle, RegularShape);\n\n\n/**\n * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {module:ol/style/Circle} The cloned style.\n * @override\n * @api\n */\nCircleStyle.prototype.clone = function() {\n  const style = new CircleStyle({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    radius: this.getRadius(),\n    snapToPixel: this.getSnapToPixel(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * Set the circle radius.\n *\n * @param {number} radius Circle radius.\n * @api\n */\nCircleStyle.prototype.setRadius = function(radius) {\n  this.radius_ = radius;\n  this.render_(this.atlasManager_);\n};\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../index.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Fill~Options=} opt_options Options.\n * @api\n */\nconst Fill = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {module:ol/style/Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function() {\n  const color = this.getColor();\n  return new Fill({\n    color: (color && color.slice) ? color.slice() : color || undefined\n  });\n};\n\n\n/**\n * Get the fill color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    if (\n      this.color_ instanceof CanvasPattern ||\n        this.color_ instanceof CanvasGradient\n    ) {\n      this.checksum_ = getUid(this.color_).toString();\n    } else {\n      this.checksum_ = 'f' + (this.color_ ? asString(this.color_) : '-');\n    }\n  }\n\n  return this.checksum_;\n};\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../index.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array.<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n *\n * @constructor\n * @param {module:ol/style/Stroke~Options=} opt_options Options.\n * @api\n */\nconst Stroke = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function() {\n  const color = this.getColor();\n  return new Stroke({\n    color: (color && color.slice) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n\n/**\n * Get the stroke color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function() {\n  return this.lineCap_;\n};\n\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array.<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function() {\n  return this.lineDash_;\n};\n\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function() {\n  return this.lineDashOffset_;\n};\n\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function() {\n  return this.lineJoin_;\n};\n\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function() {\n  return this.miterLimit_;\n};\n\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function() {\n  return this.width_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function(lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array.<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function(lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function(lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function(lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function(miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function(width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_).toString();\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Cirle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Cirle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from '../style/Circle.js';\nimport Fill from '../style/Fill.js';\nimport Stroke from '../style/Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), number):\n *     (module:ol/style/Style|Array.<module:ol/style/Style>)} StyleFunction\n */\n\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature)):\n *     (module:ol/geom/Geometry|module:ol/render/Feature|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>),module:ol/render~State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {module:ol/style/Image} [image] Image style.\n * @property {module:ol/style/Style~RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Text} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * @constructor\n * @struct\n * @param {module:ol/style/Style~Options=} opt_options Style options.\n * @api\n */\nconst Style = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!module:ol/style/Style~GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {module:ol/style/Image}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Text}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function() {\n  let geometry = this.getGeometry();\n  if (geometry && geometry.clone) {\n    geometry = geometry.clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {module:ol/style/Style~RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {module:ol/style/Style~RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function(renderer) {\n  this.renderer_ = renderer;\n};\n\n\n/**\n * Get the geometry to be rendered.\n * @return {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function() {\n  return this.geometry_;\n};\n\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!module:ol/style/Style~GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function() {\n  return this.geometryFunction_;\n};\n\n\n/**\n * Get the fill style.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nStyle.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Set the fill style.\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Get the image style.\n * @return {module:ol/style/Image} Image style.\n * @api\n */\nStyle.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Set the image style.\n * @param {module:ol/style/Image} image Image style.\n * @api\n */\nStyle.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Get the stroke style.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Set the stroke style.\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Get the text style.\n * @return {module:ol/style/Text} Text style.\n * @api\n */\nStyle.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Set the text style.\n * @param {module:ol/style/Text} text Text style.\n * @api\n */\nStyle.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function() {\n  return this.zIndex_;\n};\n\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} geometry\n *     Feature property or geometry or function returning a geometry to render\n *     for this style.\n * @api\n */\nStyle.prototype.setGeometry = function(geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function(zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of module:ol/style/Style or single style objects wrapped in a\n * new style function.\n * @param {module:ol/style/Style~StyleFunction|Array.<module:ol/style/Style>|module:ol/style/Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array.<module:ol/style/Style>}\n */\nlet defaultStyles = null;\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (module:ol/style/Circle~CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature to get the geometry for.\n * @return {module:ol/geom/Geometry|module:ol/render/Feature|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {inherits} from './index.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Geometry from './geom/Geometry.js';\nimport Style from './style/Style.js';\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/geom/Geometry|Object.<string, *>=} opt_geometryOrProperties\n * You may pass a Geometry object directly, or an object literal containing\n * properties. If you pass an object literal, you may include a Geometry\n * associated with a `geometry` key.\n * @api\n */\nconst Feature = function(opt_geometryOrProperties) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {number|string|undefined}\n   */\n  this.id_ = undefined;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.geometryName_ = 'geometry';\n\n  /**\n   * User provided style.\n   * @private\n   * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n   */\n  this.style_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~StyleFunction|undefined}\n   */\n  this.styleFunction_ = undefined;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.geometryChangeKey_ = null;\n\n  listen(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n\n  if (opt_geometryOrProperties !== undefined) {\n    if (opt_geometryOrProperties instanceof Geometry ||\n        !opt_geometryOrProperties) {\n      const geometry = opt_geometryOrProperties;\n      this.setGeometry(geometry);\n    } else {\n      /** @type {Object.<string, *>} */\n      const properties = opt_geometryOrProperties;\n      this.setProperties(properties);\n    }\n  }\n};\n\ninherits(Feature, BaseObject);\n\n\n/**\n * Clone this feature. If the original feature has a geometry it\n * is also cloned. The feature id is not set in the clone.\n * @return {module:ol/Feature} The clone.\n * @api\n */\nFeature.prototype.clone = function() {\n  const clone = new Feature(this.getProperties());\n  clone.setGeometryName(this.getGeometryName());\n  const geometry = this.getGeometry();\n  if (geometry) {\n    clone.setGeometry(geometry.clone());\n  }\n  const style = this.getStyle();\n  if (style) {\n    clone.setStyle(style);\n  }\n  return clone;\n};\n\n\n/**\n * Get the feature's default geometry.  A feature may have any number of named\n * geometries.  The \"default\" geometry (the one that is rendered by default) is\n * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n * @return {module:ol/geom/Geometry|undefined} The default geometry for the feature.\n * @api\n * @observable\n */\nFeature.prototype.getGeometry = function() {\n  return (\n    /** @type {module:ol/geom/Geometry|undefined} */ (this.get(this.geometryName_))\n  );\n};\n\n\n/**\n * Get the feature identifier.  This is a stable identifier for the feature and\n * is either set when reading data from a remote source or set explicitly by\n * calling {@link module:ol/Feature~Feature#setId}.\n * @return {number|string|undefined} Id.\n * @api\n */\nFeature.prototype.getId = function() {\n  return this.id_;\n};\n\n\n/**\n * Get the name of the feature's default geometry.  By default, the default\n * geometry is named `geometry`.\n * @return {string} Get the property name associated with the default geometry\n *     for this feature.\n * @api\n */\nFeature.prototype.getGeometryName = function() {\n  return this.geometryName_;\n};\n\n\n/**\n * Get the feature's style. Will return what was provided to the\n * {@link module:ol/Feature~Feature#setStyle} method.\n * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} The feature style.\n * @api\n */\nFeature.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Get the feature's style function.\n * @return {module:ol/style/Style~StyleFunction|undefined} Return a function\n * representing the current style of this feature.\n * @api\n */\nFeature.prototype.getStyleFunction = function() {\n  return this.styleFunction_;\n};\n\n\n/**\n * @private\n */\nFeature.prototype.handleGeometryChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @private\n */\nFeature.prototype.handleGeometryChanged_ = function() {\n  if (this.geometryChangeKey_) {\n    unlistenByKey(this.geometryChangeKey_);\n    this.geometryChangeKey_ = null;\n  }\n  const geometry = this.getGeometry();\n  if (geometry) {\n    this.geometryChangeKey_ = listen(geometry,\n      EventType.CHANGE, this.handleGeometryChange_, this);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the default geometry for the feature.  This will update the property\n * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n * @param {module:ol/geom/Geometry|undefined} geometry The new geometry.\n * @api\n * @observable\n */\nFeature.prototype.setGeometry = function(geometry) {\n  this.set(this.geometryName_, geometry);\n};\n\n\n/**\n * Set the style for the feature.  This can be a single style object, an array\n * of styles, or a function that takes a resolution and returns an array of\n * styles. If it is `null` the feature has no style (a `null` style).\n * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} style Style for this feature.\n * @api\n * @fires module:ol/events/Event~Event#event:change\n */\nFeature.prototype.setStyle = function(style) {\n  this.style_ = style;\n  this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n  this.changed();\n};\n\n\n/**\n * Set the feature id.  The feature id is considered stable and may be used when\n * requesting features or comparing identifiers returned from a remote source.\n * The feature id can be used with the\n * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n * @param {number|string|undefined} id The feature id.\n * @api\n * @fires module:ol/events/Event~Event#event:change\n */\nFeature.prototype.setId = function(id) {\n  this.id_ = id;\n  this.changed();\n};\n\n\n/**\n * Set the property name to be used when getting the feature's default geometry.\n * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n * this name will be returned.\n * @param {string} name The property name of the default geometry.\n * @api\n */\nFeature.prototype.setGeometryName = function(name) {\n  unlisten(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n  this.geometryName_ = name;\n  listen(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n  this.handleGeometryChanged_();\n};\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of module:ol/style/Style or single style objects wrapped\n * in a new feature style function.\n * @param {module:ol/style/Style~StyleFunction|!Array.<module:ol/style/Style>|!module:ol/style/Style} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  let pointX = NaN;\n  let pointY = NaN;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      const t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      const o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineString} from '../geom/flat/intersectsextent.js';\nimport {lineStringLength} from '../geom/flat/length.js';\nimport {forEach as forEachSegment} from '../geom/flat/segments.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst LineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.flatMidpoint_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatMidpointRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(LineString, SimpleGeometry);\n\n\n/**\n * Append the passed coordinate to the coordinates of the linestring.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @api\n */\nLineString.prototype.appendCoordinate = function(coordinate) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = coordinate.slice();\n  } else {\n    extend(this.flatCoordinates, coordinate);\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/LineString} Clone.\n * @override\n * @api\n */\nLineString.prototype.clone = function() {\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return lineString;\n};\n\n\n/**\n * @inheritDoc\n */\nLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestPoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Iterate over each segment, calling the provided callback.\n * If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n *\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T,S\n * @api\n */\nLineString.prototype.forEachSegment = function(callback) {\n  return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate) {\n  if (this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  return lineStringCoordinateAtM(this.flatCoordinates, 0,\n    this.flatCoordinates.length, this.stride, m, extrapolate);\n};\n\n\n/**\n * Return the coordinates of the linestring.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nLineString.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the coordinate at the provided fraction along the linestring.\n * The `fraction` is a number between 0 and 1, where 0 is the start of the\n * linestring and 1 is the end.\n * @param {number} fraction Fraction.\n * @param {module:ol/coordinate~Coordinate=} opt_dest Optional coordinate whose values will\n *     be modified. If not provided, a new coordinate will be returned.\n * @return {module:ol/coordinate~Coordinate} Coordinate of the interpolated point.\n * @api\n */\nLineString.prototype.getCoordinateAt = function(fraction, opt_dest) {\n  return interpolatePoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    fraction, opt_dest);\n};\n\n\n/**\n * Return the length of the linestring on projected plane.\n * @return {number} Length (on projected plane).\n * @api\n */\nLineString.prototype.getLength = function() {\n  return lineStringLength(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoint.\n */\nLineString.prototype.getFlatMidpoint = function() {\n  if (this.flatMidpointRevision_ != this.getRevision()) {\n    this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n    this.flatMidpointRevision_ = this.getRevision();\n  }\n  return this.flatMidpoint_;\n};\n\n\n/**\n * @inheritDoc\n */\nLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    squaredTolerance, simplifiedFlatCoordinates, 0);\n  const simplifiedLineString = new LineString(null);\n  simplifiedLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates);\n  return simplifiedLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLineString.prototype.getType = function() {\n  return GeometryType.LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLineString.prototype.intersectsExtent = function(extent) {\n  return intersectsLineString(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    extent);\n};\n\n\n/**\n * Set the coordinates of the linestring.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineStringArray} from '../geom/flat/intersectsextent.js';\nimport {douglasPeuckerArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {module:ol/geom/LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestArrayPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return inflateCoordinatesArray(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<module:ol/geom/LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<module:ol/geom/LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = interpolatePoint(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = douglasPeuckerArray(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return intersectsLineStringArray(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<module:ol/geom/LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {module:ol/geom/Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (let j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<module:ol/geom/Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<module:ol/geom/Point>} */\n  const points = [];\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const x = flatCoordinates[i];\n    const y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from '../geom/flat/area.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingssContainsXY} from '../geom/flat/contains.js';\nimport {deflateMultiCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from '../geom/flat/orient.js';\nimport {quantizeMultiArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {module:ol/geom/Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestMultiArrayPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    orientLinearRingsArray(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return inflateMultiCoordinatesArray(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = linearRingssCenter(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n * @return {module:ol/geom/MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (linearRingsAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          orientLinearRingsArray(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = quantizeMultiArray(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<module:ol/geom/Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return intersectsLinearRingMultiArray(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<module:ol/geom/Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array.<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n","/**\n * @module ol/layer/Vector\n */\nimport {inherits} from '../index.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport VectorRenderType from '../layer/VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load simultaneously.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport const RenderType = {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Vector~Options=} opt_options Options.\n * @api\n */\nconst VectorLayer = function(opt_options) {\n  const options = opt_options ?\n    opt_options : /** @type {module:ol/layer/Vector~Options} */ ({});\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.style;\n  delete baseOptions.renderBuffer;\n  delete baseOptions.updateWhileAnimating;\n  delete baseOptions.updateWhileInteracting;\n  Layer.call(this, /** @type {module:ol/layer/Layer~Options} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.renderBuffer_ = options.renderBuffer !== undefined ?\n    options.renderBuffer : 100;\n\n  /**\n   * User provided style.\n   * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n   * @private\n   */\n  this.style_ = null;\n\n  /**\n   * Style function for use within the library.\n   * @type {module:ol/style/Style~StyleFunction|undefined}\n   * @private\n   */\n  this.styleFunction_ = undefined;\n\n  this.setStyle(options.style);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n    options.updateWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n    options.updateWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {module:ol/layer/VectorTileRenderType|string}\n   */\n  this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.VECTOR;\n\n};\n\ninherits(VectorLayer, Layer);\n\n\n/**\n * @return {boolean} Declutter.\n */\nVectorLayer.prototype.getDeclutter = function() {\n  return this.declutter_;\n};\n\n\n/**\n * @param {boolean} declutter Declutter.\n */\nVectorLayer.prototype.setDeclutter = function(declutter) {\n  this.declutter_ = declutter;\n};\n\n\n/**\n * @return {number|undefined} Render buffer.\n */\nVectorLayer.prototype.getRenderBuffer = function() {\n  return this.renderBuffer_;\n};\n\n\n/**\n * @return {function(module:ol/Feature, module:ol/Feature): number|null|undefined} Render\n *     order.\n */\nVectorLayer.prototype.getRenderOrder = function() {\n  return (\n    /** @type {module:ol/render~OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n  );\n};\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {module:ol/source/Vector} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\n/**\n * Get the style for features.  This returns whatever was passed to the `style`\n * option at construction or to the `setStyle` method.\n * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n *     Layer style.\n * @api\n */\nVectorLayer.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Get the style function.\n * @return {module:ol/style/Style~StyleFunction|undefined} Layer style function.\n * @api\n */\nVectorLayer.prototype.getStyleFunction = function() {\n  return this.styleFunction_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     animating.\n */\nVectorLayer.prototype.getUpdateWhileAnimating = function() {\n  return this.updateWhileAnimating_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     interacting.\n */\nVectorLayer.prototype.getUpdateWhileInteracting = function() {\n  return this.updateWhileInteracting_;\n};\n\n\n/**\n * @param {module:ol/render~OrderFunction|null|undefined} renderOrder\n *     Render order.\n */\nVectorLayer.prototype.setRenderOrder = function(renderOrder) {\n  this.set(Property.RENDER_ORDER, renderOrder);\n};\n\n\n/**\n * Set the style for features.  This can be a single style object, an array\n * of styles, or a function that takes a feature and resolution and returns\n * an array of styles. If it is `undefined` the default style is used. If\n * it is `null` the layer has no style (a `null` style), so only features\n * that have their own styles will be rendered in the layer. See\n * {@link module:ol/style} for information on the default style.\n * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction|null|undefined}\n *     style Layer style.\n * @api\n */\nVectorLayer.prototype.setStyle = function(style) {\n  this.style_ = style !== undefined ? style : createDefaultStyle;\n  this.styleFunction_ = style === null ?\n    undefined : toStyleFunction(this.style_);\n  this.changed();\n};\n\n\n/**\n * @return {module:ol/layer/VectorRenderType|string} The render mode.\n */\nVectorLayer.prototype.getRenderMode = function() {\n  return this.renderMode_;\n};\n\n\nexport default VectorLayer;\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n","/**\n * @module ol/featureloader\n */\nimport {UNDEFINED} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:module:ol/source/Vector, module:ol/extent~Extent, number,\n *                    module:ol/proj/Projection)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(module:ol/extent~Extent, number, module:ol/proj/Projection): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {function(this:module:ol/VectorTile, Array.<module:ol/Feature>, module:ol/proj/Projection, module:ol/extent~Extent)|function(this:module:ol/source/Vector, Array.<module:ol/Feature>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:module:ol/VectorTile)|function(this:module:ol/source/Vector)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @this {module:ol/source/Vector|module:ol/VectorTile}\n     */\n    function(extent, resolution, projection) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          const type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          let source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array.<module:ol/Feature>} features The loaded features.\n     * @param {module:ol/proj/Projection} dataProjection Data\n     * projection.\n     * @this {module:ol/source/Vector}\n     */\n    function(features, dataProjection) {\n      this.addFeatures(features);\n    }, /* FIXME handle error */ UNDEFINED);\n}\n","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array.<module:ol/extent~Extent>} Extents.\n     */\n    function(extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array.<module:ol/extent~Extent>} */\n      const extents = [];\n      /** @type {module:ol/tilecoord~TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/source/Source\n */\nimport {inherits} from '../index.js';\nimport {UNDEFINED} from '../functions.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(module:ol/PluggableMap~FrameState): (string|Array.<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array.<string>|module:ol/source/Source~Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {module:ol/source/State} [state]\n * @property {boolean} [wrapX]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @param {module:ol/source/Source~Options} options Source options.\n * @api\n */\nconst Source = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = getProjection(options.projection);\n\n  /**\n   * @private\n   * @type {?module:ol/source/Source~Attribution}\n   */\n  this.attributions_ = this.adaptAttributions_(options.attributions);\n\n  /**\n   * @private\n   * @type {module:ol/source/State}\n   */\n  this.state_ = options.state !== undefined ?\n    options.state : SourceState.READY;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n};\n\ninherits(Source, BaseObject);\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {module:ol/source/Source~AttributionLike|undefined} attributionLike The attribution option.\n * @return {?module:ol/source/Source~Attribution} An attribution function (or null).\n */\nSource.prototype.adaptAttributions_ = function(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n};\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeatureUids Skipped feature uids.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\nSource.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\n/**\n * Get the attribution function for the source.\n * @return {?module:ol/source/Source~Attribution} Attribution function.\n */\nSource.prototype.getAttributions = function() {\n  return this.attributions_;\n};\n\n\n/**\n * Get the projection of the source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nSource.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * @abstract\n * @return {Array.<number>|undefined} Resolutions.\n */\nSource.prototype.getResolutions = function() {};\n\n\n/**\n * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n * @return {module:ol/source/State} State.\n * @api\n */\nSource.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * @return {boolean|undefined} Wrap X.\n */\nSource.prototype.getWrapX = function() {\n  return this.wrapX_;\n};\n\n\n/**\n * Refreshes the source and finally dispatches a 'change' event.\n * @api\n */\nSource.prototype.refresh = function() {\n  this.changed();\n};\n\n\n/**\n * Set the attributions of the source.\n * @param {module:ol/source/Source~AttributionLike|undefined} attributions Attributions.\n *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n *     or `undefined`.\n * @api\n */\nSource.prototype.setAttributions = function(attributions) {\n  this.attributions_ = this.adaptAttributions_(attributions);\n  this.changed();\n};\n\n\n/**\n * Set the state of the source.\n * @param {module:ol/source/State} state State.\n * @protected\n */\nSource.prototype.setState = function(state) {\n  this.state_ = state;\n  this.changed();\n};\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector~VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector~VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector~VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector~VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../index.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * Wrapper around the RBush by Vladimir Agafonkin.\n *\n * @constructor\n * @param {number=} opt_maxEntries Max entries.\n * @see https://github.com/mourner/rbush\n * @struct\n * @template T\n */\nconst RBush = function(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object.<number, module:ol/structs/RBush~Entry>}\n   */\n  this.items_ = {};\n\n};\n\n\n/**\n * Insert a value into the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function(extent, value) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  const item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array.<module:ol/extent~Extent>} extents Extents.\n * @param {Array.<T>} values Values.\n */\nRBush.prototype.load = function(extents, values) {\n  const items = new Array(values.length);\n  for (let i = 0, l = values.length; i < l; i++) {\n    const extent = extents[i];\n    const value = values[i];\n\n    /** @type {module:ol/structs/RBush~Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function(value) {\n  const uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  const item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function(extent, value) {\n  const item = this.items_[getUid(value)];\n  const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array.<T>} All.\n */\nRBush.prototype.getAll = function() {\n  const items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<T>} All in extent.\n */\nRBush.prototype.getInExtent = function(extent) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  const bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  const items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function(callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function(extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array.<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function(values, callback, opt_this) {\n  let result;\n  for (let i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function() {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function() {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nRBush.prototype.getExtent = function(opt_extent) {\n  // FIXME add getExtent() to rbush\n  const data = this.rbush_.data;\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {module:ol/structs/RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function(rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (const i in rbush.items_) {\n    this.items_[i | 0] = rbush.items_[i | 0];\n  }\n};\nexport default RBush;\n","/**\n * @module ol/source/Vector\n */\n\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from '../source/Source.js';\nimport SourceState from '../source/State.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/Feature=} opt_feature Feature.\n */\nexport const VectorSourceEvent = function(type, opt_feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being added or removed.\n   * @type {module:ol/Feature|undefined}\n   * @api\n   */\n  this.feature = opt_feature;\n\n};\ninherits(VectorSourceEvent, Event);\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {Array.<module:ol/Feature>|module:ol/Collection.<module:ol/Feature>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {module:ol/format/Feature} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {module:ol/featureloader~FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {module:ol/source/Vector~LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|module:ol/featureloader~FeatureUrlfunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlfunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * defaultDataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @constructor\n * @extends {module:ol/source/Source}\n * @fires ol/source/Vector~VectorSourceEvent\n * @param {module:ol/source/Vector~Options=} opt_options Vector source options.\n * @api\n */\nconst VectorSource = function(opt_options) {\n\n  const options = opt_options || {};\n\n  Source.call(this, {\n    attributions: options.attributions,\n    projection: undefined,\n    state: SourceState.READY,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true\n  });\n\n  /**\n   * @private\n   * @type {module:ol/featureloader~FeatureLoader}\n   */\n  this.loader_ = UNDEFINED;\n\n  /**\n   * @private\n   * @type {module:ol/format/Feature|undefined}\n   */\n  this.format_ = options.format;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n  /**\n   * @private\n   * @type {string|module:ol/featureloader~FeatureUrlFunction|undefined}\n   */\n  this.url_ = options.url;\n\n  if (options.loader !== undefined) {\n    this.loader_ = options.loader;\n  } else if (this.url_ !== undefined) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    // create a XHR feature loader for \"url\" and \"format\"\n    this.loader_ = xhr(this.url_, /** @type {module:ol/format/Feature} */ (this.format_));\n  }\n\n  /**\n   * @private\n   * @type {module:ol/source/Vector~LoadingStrategy}\n   */\n  this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n  const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n  /**\n   * @private\n   * @type {module:ol/structs/RBush.<module:ol/Feature>}\n   */\n  this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n  /**\n   * @private\n   * @type {module:ol/structs/RBush.<{extent: module:ol/extent~Extent}>}\n   */\n  this.loadedExtentsRtree_ = new RBush();\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.nullGeometryFeatures_ = {};\n\n  /**\n   * A lookup of features by id (the return from feature.getId()).\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.idIndex_ = {};\n\n  /**\n   * A lookup of features without id (keyed by getUid(feature)).\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.undefIdIndex_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n   */\n  this.featureChangeKeys_ = {};\n\n  /**\n   * @private\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   */\n  this.featuresCollection_ = null;\n\n  let collection, features;\n  if (options.features instanceof Collection) {\n    collection = options.features;\n    features = collection.getArray();\n  } else if (Array.isArray(options.features)) {\n    features = options.features;\n  }\n  if (!useSpatialIndex && collection === undefined) {\n    collection = new Collection(features);\n  }\n  if (features !== undefined) {\n    this.addFeaturesInternal(features);\n  }\n  if (collection !== undefined) {\n    this.bindFeaturesCollection_(collection);\n  }\n\n};\n\ninherits(VectorSource, Source);\n\n\n/**\n * Add a single feature to the source.  If you want to add a batch of features\n * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n * instead. A feature will not be added to the source if feature with\n * the same id is already there. The reason for this behavior is to avoid\n * feature duplication when using bbox or tile loading strategies.\n * @param {module:ol/Feature} feature Feature to add.\n * @api\n */\nVectorSource.prototype.addFeature = function(feature) {\n  this.addFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Add a feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.addFeatureInternal = function(feature) {\n  const featureKey = getUid(feature).toString();\n\n  if (!this.addToIndex_(featureKey, feature)) {\n    return;\n  }\n\n  this.setupChangeEvents_(featureKey, feature);\n\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const extent = geometry.getExtent();\n    if (this.featuresRtree_) {\n      this.featuresRtree_.insert(extent, feature);\n    }\n  } else {\n    this.nullGeometryFeatures_[featureKey] = feature;\n  }\n\n  this.dispatchEvent(\n    new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @private\n */\nVectorSource.prototype.setupChangeEvents_ = function(featureKey, feature) {\n  this.featureChangeKeys_[featureKey] = [\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this),\n    listen(feature, ObjectEventType.PROPERTYCHANGE,\n      this.handleFeatureChange_, this)\n  ];\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} The feature is \"valid\", in the sense that it is also a\n *     candidate for insertion into the Rtree.\n * @private\n */\nVectorSource.prototype.addToIndex_ = function(featureKey, feature) {\n  let valid = true;\n  const id = feature.getId();\n  if (id !== undefined) {\n    if (!(id.toString() in this.idIndex_)) {\n      this.idIndex_[id.toString()] = feature;\n    } else {\n      valid = false;\n    }\n  } else {\n    assert(!(featureKey in this.undefIdIndex_),\n      30); // The passed `feature` was already added to the source\n    this.undefIdIndex_[featureKey] = feature;\n  }\n  return valid;\n};\n\n\n/**\n * Add a batch of features to the source.\n * @param {Array.<module:ol/Feature>} features Features to add.\n * @api\n */\nVectorSource.prototype.addFeatures = function(features) {\n  this.addFeaturesInternal(features);\n  this.changed();\n};\n\n\n/**\n * Add features without firing a `change` event.\n * @param {Array.<module:ol/Feature>} features Features.\n * @protected\n */\nVectorSource.prototype.addFeaturesInternal = function(features) {\n  const extents = [];\n  const newFeatures = [];\n  const geometryFeatures = [];\n\n  for (let i = 0, length = features.length; i < length; i++) {\n    const feature = features[i];\n    const featureKey = getUid(feature).toString();\n    if (this.addToIndex_(featureKey, feature)) {\n      newFeatures.push(feature);\n    }\n  }\n\n  for (let i = 0, length = newFeatures.length; i < length; i++) {\n    const feature = newFeatures[i];\n    const featureKey = getUid(feature).toString();\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      extents.push(extent);\n      geometryFeatures.push(feature);\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  }\n  if (this.featuresRtree_) {\n    this.featuresRtree_.load(extents, geometryFeatures);\n  }\n\n  for (let i = 0, length = newFeatures.length; i < length; i++) {\n    this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n  }\n};\n\n\n/**\n * @param {!module:ol/Collection.<module:ol/Feature>} collection Collection.\n * @private\n */\nVectorSource.prototype.bindFeaturesCollection_ = function(collection) {\n  let modifyingCollection = false;\n  listen(this, VectorEventType.ADDFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.push(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(this, VectorEventType.REMOVEFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.remove(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(collection, CollectionEventType.ADD,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.addFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  listen(collection, CollectionEventType.REMOVE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.removeFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  this.featuresCollection_ = collection;\n};\n\n\n/**\n * Remove all features from the source.\n * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector~VectorSourceEvent#removefeature} events.\n * @api\n */\nVectorSource.prototype.clear = function(opt_fast) {\n  if (opt_fast) {\n    for (const featureId in this.featureChangeKeys_) {\n      const keys = this.featureChangeKeys_[featureId];\n      keys.forEach(unlistenByKey);\n    }\n    if (!this.featuresCollection_) {\n      this.featureChangeKeys_ = {};\n      this.idIndex_ = {};\n      this.undefIdIndex_ = {};\n    }\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n      for (const id in this.nullGeometryFeatures_) {\n        this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n      }\n    }\n  }\n  if (this.featuresCollection_) {\n    this.featuresCollection_.clear();\n  }\n\n  if (this.featuresRtree_) {\n    this.featuresRtree_.clear();\n  }\n  this.loadedExtentsRtree_.clear();\n  this.nullGeometryFeatures_ = {};\n\n  const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n  this.dispatchEvent(clearEvent);\n  this.changed();\n};\n\n\n/**\n * Iterate through all features on the source, calling the provided callback\n * with each one.  If the callback returns any \"truthy\" value, iteration will\n * stop and the function will return the same value.\n * Note: this function only iterate through the feature that have a defined geometry.\n *\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     on the source.  Return a truthy value to stop iteration.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeature = function(callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEach(callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometries contain the provided\n * coordinate, calling the callback with each feature.  If the callback returns\n * a \"truthy\" value, iteration will stop and the function will return the same\n * value.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose goemetry contains the provided coordinate.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n */\nVectorSource.prototype.forEachFeatureAtCoordinateDirect = function(coordinate, callback) {\n  const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n  return this.forEachFeatureInExtent(extent, function(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry.intersectsCoordinate(coordinate)) {\n      return callback(feature);\n    } else {\n      return undefined;\n    }\n  });\n};\n\n\n/**\n * Iterate through all features whose bounding box intersects the provided\n * extent (note that the feature's geometry may not intersect the extent),\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you are interested in features whose geometry intersects an extent, call\n * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n *\n * When `useSpatialIndex` is set to false, this method will loop through all\n * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose bounding box intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureInExtent = function(extent, callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEachInExtent(extent, callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometry intersects the provided extent,\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you only want to test for bounding box intersection, call the\n * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose geometry intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureIntersectingExtent = function(extent, callback) {\n  return this.forEachFeatureInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    function(feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsExtent(extent)) {\n        const result = callback(feature);\n        if (result) {\n          return result;\n        }\n      }\n    });\n};\n\n\n/**\n * Get the features collection associated with this source. Will be `null`\n * unless the source was configured with `useSpatialIndex` set to `false`, or\n * with an {@link module:ol/Collection} as `features`.\n * @return {module:ol/Collection.<module:ol/Feature>} The collection of features.\n * @api\n */\nVectorSource.prototype.getFeaturesCollection = function() {\n  return this.featuresCollection_;\n};\n\n\n/**\n * Get all features on the source in random order.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeatures = function() {\n  let features;\n  if (this.featuresCollection_) {\n    features = this.featuresCollection_.getArray();\n  } else if (this.featuresRtree_) {\n    features = this.featuresRtree_.getAll();\n    if (!isEmpty(this.nullGeometryFeatures_)) {\n      extend(features, getValues(this.nullGeometryFeatures_));\n    }\n  }\n  return (\n    /** @type {Array.<module:ol/Feature>} */ (features)\n  );\n};\n\n\n/**\n * Get all features whose geometry intersects the provided coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesAtCoordinate = function(coordinate) {\n  const features = [];\n  this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n    features.push(feature);\n  });\n  return features;\n};\n\n\n/**\n * Get all features in the provided extent.  Note that this returns an array of\n * all features intersecting the given extent in random order (so it may include\n * features whose geometries do not intersect the extent).\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesInExtent = function(extent) {\n  return this.featuresRtree_.getInExtent(extent);\n};\n\n\n/**\n * Get the closest feature to the provided coordinate.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature):boolean=} opt_filter Feature filter function.\n *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n *     and it should return a boolean value. By default, no filtering is made.\n * @return {module:ol/Feature} Closest feature.\n * @api\n */\nVectorSource.prototype.getClosestFeatureToCoordinate = function(coordinate, opt_filter) {\n  // Find the closest feature using branch and bound.  We start searching an\n  // infinite extent, and find the distance from the first feature found.  This\n  // becomes the closest feature.  We then compute a smaller extent which any\n  // closer feature must intersect.  We continue searching with this smaller\n  // extent, trying to find a closer feature.  Every time we find a closer\n  // feature, we update the extent being searched so that any even closer\n  // feature must intersect it.  We continue until we run out of features.\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let closestFeature = null;\n  const closestPoint = [NaN, NaN];\n  let minSquaredDistance = Infinity;\n  const extent = [-Infinity, -Infinity, Infinity, Infinity];\n  const filter = opt_filter ? opt_filter : TRUE;\n  this.featuresRtree_.forEachInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     */\n    function(feature) {\n      if (filter(feature)) {\n        const geometry = feature.getGeometry();\n        const previousMinSquaredDistance = minSquaredDistance;\n        minSquaredDistance = geometry.closestPointXY(\n          x, y, closestPoint, minSquaredDistance);\n        if (minSquaredDistance < previousMinSquaredDistance) {\n          closestFeature = feature;\n          // This is sneaky.  Reduce the extent that it is currently being\n          // searched while the R-Tree traversal using this same extent object\n          // is still in progress.  This is safe because the new extent is\n          // strictly contained by the old extent.\n          const minDistance = Math.sqrt(minSquaredDistance);\n          extent[0] = x - minDistance;\n          extent[1] = y - minDistance;\n          extent[2] = x + minDistance;\n          extent[3] = y + minDistance;\n        }\n      }\n    });\n  return closestFeature;\n};\n\n\n/**\n * Get the extent of the features currently in the source.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent. If provided, no new extent\n *     will be created. Instead, that extent's coordinates will be overwritten.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nVectorSource.prototype.getExtent = function(opt_extent) {\n  return this.featuresRtree_.getExtent(opt_extent);\n};\n\n\n/**\n * Get a feature by its identifier (the value returned by feature.getId()).\n * Note that the index treats string and numeric identifiers as the same.  So\n * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n *\n * @param {string|number} id Feature identifier.\n * @return {module:ol/Feature} The feature (or `null` if not found).\n * @api\n */\nVectorSource.prototype.getFeatureById = function(id) {\n  const feature = this.idIndex_[id.toString()];\n  return feature !== undefined ? feature : null;\n};\n\n\n/**\n * Get the format associated with this source.\n *\n * @return {module:ol/format/Feature|undefined} The feature format.\n * @api\n */\nVectorSource.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * @return {boolean} The source can have overlapping geometries.\n */\nVectorSource.prototype.getOverlaps = function() {\n  return this.overlaps_;\n};\n\n\n/**\n * @override\n */\nVectorSource.prototype.getResolutions = function() {};\n\n\n/**\n * Get the url associated with this source.\n *\n * @return {string|module:ol/featureloader~FeatureUrlFunction|undefined} The url.\n * @api\n */\nVectorSource.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @private\n */\nVectorSource.prototype.handleFeatureChange_ = function(event) {\n  const feature = /** @type {module:ol/Feature} */ (event.target);\n  const featureKey = getUid(feature).toString();\n  const geometry = feature.getGeometry();\n  if (!geometry) {\n    if (!(featureKey in this.nullGeometryFeatures_)) {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  } else {\n    const extent = geometry.getExtent();\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.update(extent, feature);\n      }\n    }\n  }\n  const id = feature.getId();\n  if (id !== undefined) {\n    const sid = id.toString();\n    if (featureKey in this.undefIdIndex_) {\n      delete this.undefIdIndex_[featureKey];\n      this.idIndex_[sid] = feature;\n    } else {\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    }\n  } else {\n    if (!(featureKey in this.undefIdIndex_)) {\n      this.removeFromIdIndex_(feature);\n      this.undefIdIndex_[featureKey] = feature;\n    }\n  }\n  this.changed();\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.CHANGEFEATURE, feature));\n};\n\n/**\n * Returns true if the feature is contained within the source.\n * @param {module:ol/Feature} feature Feature.\n * @return {boolean} Has feature.\n * @api\n */\nVectorSource.prototype.hasFeature = function(feature) {\n  const id = feature.getId();\n  if (id !== undefined) {\n    return id in this.idIndex_;\n  } else {\n    const featureKey = getUid(feature).toString();\n    return featureKey in this.undefIdIndex_;\n  }\n};\n\n/**\n * @return {boolean} Is empty.\n */\nVectorSource.prototype.isEmpty = function() {\n  return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nVectorSource.prototype.loadFeatures = function(extent, resolution, projection) {\n  const loadedExtentsRtree = this.loadedExtentsRtree_;\n  const extentsToLoad = this.strategy_(extent, resolution);\n  for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n    const extentToLoad = extentsToLoad[i];\n    const alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n      /**\n       * @param {{extent: module:ol/extent~Extent}} object Object.\n       * @return {boolean} Contains.\n       */\n      function(object) {\n        return containsExtent(object.extent, extentToLoad);\n      });\n    if (!alreadyLoaded) {\n      this.loader_.call(this, extentToLoad, resolution, projection);\n      loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n    }\n  }\n};\n\n\n/**\n * Remove an extent from the list of loaded extents.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nVectorSource.prototype.removeLoadedExtent = function(extent) {\n  const loadedExtentsRtree = this.loadedExtentsRtree_;\n  let obj;\n  loadedExtentsRtree.forEachInExtent(extent, function(object) {\n    if (equals(object.extent, extent)) {\n      obj = object;\n      return true;\n    }\n  });\n  if (obj) {\n    loadedExtentsRtree.remove(obj);\n  }\n};\n\n\n/**\n * Remove a single feature from the source.  If you want to remove all features\n * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n * instead.\n * @param {module:ol/Feature} feature Feature to remove.\n * @api\n */\nVectorSource.prototype.removeFeature = function(feature) {\n  const featureKey = getUid(feature).toString();\n  if (featureKey in this.nullGeometryFeatures_) {\n    delete this.nullGeometryFeatures_[featureKey];\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.remove(feature);\n    }\n  }\n  this.removeFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Remove feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.removeFeatureInternal = function(feature) {\n  const featureKey = getUid(feature).toString();\n  this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n  delete this.featureChangeKeys_[featureKey];\n  const id = feature.getId();\n  if (id !== undefined) {\n    delete this.idIndex_[id.toString()];\n  } else {\n    delete this.undefIdIndex_[featureKey];\n  }\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.REMOVEFEATURE, feature));\n};\n\n\n/**\n * Remove a feature from the id index.  Called internally when the feature id\n * may have changed.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} Removed the feature from the index.\n * @private\n */\nVectorSource.prototype.removeFromIdIndex_ = function(feature) {\n  let removed = false;\n  for (const id in this.idIndex_) {\n    if (this.idIndex_[id] === feature) {\n      delete this.idIndex_[id];\n      removed = true;\n      break;\n    }\n  }\n  return removed;\n};\n\n\n/**\n * Set the new loader of the source. The next loadFeatures call will use the\n * new loader.\n * @param {module:ol/featureloader~FeatureLoader} loader The loader to set.\n * @api\n */\nVectorSource.prototype.setLoader = function(loader) {\n  this.loader_ = loader;\n};\n\nexport default VectorSource;\n","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/geom/GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Destination collection for the drawn features.\n * @property {module:ol/source/Vector} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {module:ol/events/condition~Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for sketch features.\n * @property {module:ol/interaction/Draw~GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {module:ol/events/condition~Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!Array.<module:ol/coordinate~Coordinate>, module:ol/geom/SimpleGeometry=):\n *     module:ol/geom/SimpleGeometry} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event module:ol/interaction/Draw~DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event module:ol/interaction/Draw~DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/Draw~DrawEventType} type Type.\n * @param {module:ol/Feature} feature The feature drawn.\n */\nconst DrawEvent = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {module:ol/Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\n\ninherits(DrawEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Draw~DrawEvent\n * @param {module:ol/interaction/Draw~Options} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {module:ol/geom/GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {module:ol/geom/GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {module:ol/interaction/Draw~Mode}\n   * @private\n   */\n  this.mode_ = getMode(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n       *     The coordinates.\n       * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {module:ol/geom/SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {module:ol/geom/Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = squaredCoordinateDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Mode.POINT) {\n        Constructor = Point;\n      } else if (mode === Mode.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Mode.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n       *     The coordinates.\n       * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {module:ol/geom/SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Mode.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {module:ol/interaction/Draw~GeometryFunction}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<module:ol/coordinate~Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : shiftKeyOnly;\n  }\n\n  listen(this,\n    getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Draw}\n * @api\n */\nexport function handleEvent(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return handlePointerEvent.call(this, event) && pass;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleDownEvent(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleUpEvent(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Mode.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Mode.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n}\n\n\n/**\n * Handle move events.\n * @param {module:ol/MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Mode.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Mode.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Mode.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Mode.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<module:ol/coordinate~Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Mode.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Mode.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Mode.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n * dispatched before inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  if (!sketchFeature) {\n    return;\n  }\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Mode.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Mode.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {module:ol/Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!module:ol/Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {module:ol/geom/LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `module:ol/geom/Circle~Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    const center = coordinates[0];\n    const end = coordinates[1];\n    const radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry ? /** @type {module:ol/geom/Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    const angle = opt_angle ? opt_angle :\n      Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @return {module:ol/interaction/Draw~Mode} Drawing mode.\n */\nfunction getMode(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!module:ol/interaction/Draw~Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event module:ol/interaction/Extent~ExtentEventType#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n *\n * @constructor\n * @param {module:ol/extent~Extent} extent the new extent\n * @extends {module:ol/events/Event}\n */\nconst ExtentInteractionEvent = function(extent) {\n  Event.call(this, ExtentEventType.EXTENTCHANGED);\n\n  /**\n   * The current extent.\n   * @type {module:ol/extent~Extent}\n   * @api\n   */\n  this.extent = extent;\n\n};\ninherits(ExtentInteractionEvent, Event);\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Extent~Event\n * @param {module:ol/interaction/Extent~Options=} opt_options Options.\n * @api\n */\nconst ExtentInteraction = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * Extent of the drawn box\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.extent_ = null;\n\n  /**\n   * Handler for pointer move events\n   * @type {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null}\n   * @private\n   */\n  this.pointerHandler_ = null;\n\n  /**\n   * Pixel threshold to snap to extent\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * Is the pointer snapped to an extent vertex\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Feature for displaying the visible extent\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.extentFeature_ = null;\n\n  /**\n   * Feature for displaying the visible pointer\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  if (!opt_options) {\n    opt_options = {};\n  }\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * Layer for the extentFeature\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.extentOverlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!opt_options.wrapX\n    }),\n    style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Layer for the vertexFeature\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.vertexOverlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!opt_options.wrapX\n    }),\n    style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  if (opt_options.extent) {\n    this.setExtent(opt_options.extent);\n  }\n};\n\ninherits(ExtentInteraction, PointerInteraction);\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Event.\n * @return {boolean} Propagate event?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  //display pointer (if not dragging)\n  if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  //call pointer to determine up/down/drag\n  handlePointerEvent.call(this, mapBrowserEvent);\n  //return false to stop propagation\n  return false;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  const pixel = mapBrowserEvent.pixel;\n  const map = mapBrowserEvent.map;\n\n  const extent = this.getExtent();\n  let vertex = this.snapToVertex_(pixel, map);\n\n  //find the extent corner opposite the passed corner\n  const getOpposingPoint = function(point) {\n    let x_ = null;\n    let y_ = null;\n    if (point[0] == extent[0]) {\n      x_ = extent[2];\n    } else if (point[0] == extent[2]) {\n      x_ = extent[0];\n    }\n    if (point[1] == extent[1]) {\n      y_ = extent[3];\n    } else if (point[1] == extent[3]) {\n      y_ = extent[1];\n    }\n    if (x_ !== null && y_ !== null) {\n      return [x_, y_];\n    }\n    return null;\n  };\n  if (vertex && extent) {\n    const x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n    const y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n\n    //snap to point\n    if (x !== null && y !== null) {\n      this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n    //snap to edge\n    } else if (x !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([x, extent[1]]),\n        getOpposingPoint([x, extent[3]])\n      );\n    } else if (y !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([extent[0], y]),\n        getOpposingPoint([extent[2], y])\n      );\n    }\n  //no snap - new bbox\n  } else {\n    vertex = map.getCoordinateFromPixel(pixel);\n    this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n    this.pointerHandler_ = getPointHandler(vertex);\n  }\n  return true; //event handled; start downup sequence\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (this.pointerHandler_) {\n    const pixelCoordinate = mapBrowserEvent.coordinate;\n    this.setExtent(this.pointerHandler_(pixelCoordinate));\n    this.createOrUpdatePointerFeature_(pixelCoordinate);\n  }\n  return true;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  this.pointerHandler_ = null;\n  //If bbox is zero area, set to null;\n  const extent = this.getExtent();\n  if (!extent || getArea(extent) === 0) {\n    this.setExtent(null);\n  }\n  return false; //Stop handling downup sequence\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {module:ol/style/Style~StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {module:ol/style/Style~StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function(point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {module:ol/coordinate~Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {module:ol/extent~Extent} extent extent\n * @returns {Array<Array<module:ol/coordinate~Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\n  ];\n}\n\n/**\n * @param {module:ol~Pixel} pixel cursor location\n * @param {module:ol/PluggableMap} map map\n * @returns {module:ol/coordinate~Coordinate|null} snapped vertex on extent\n * @private\n */\nExtentInteraction.prototype.snapToVertex_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b);\n  };\n  const extent = this.getExtent();\n  if (extent) {\n    //convert extents to line segments and find the segment closest to pixelCoordinate\n    const segments = getSegments(extent);\n    segments.sort(sortByDistance);\n    const closestSegment = segments[0];\n\n    let vertex = (closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n\n    //if the distance is within tolerance, snap to the segment\n    if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n      //test if we should further snap to a vertex\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n      const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n      }\n      return vertex;\n    }\n  }\n  return null;\n};\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent pointer move event\n * @private\n */\nExtentInteraction.prototype.handlePointerMove_ = function(mapBrowserEvent) {\n  const pixel = mapBrowserEvent.pixel;\n  const map = mapBrowserEvent.map;\n\n  let vertex = this.snapToVertex_(pixel, map);\n  if (!vertex) {\n    vertex = map.getCoordinateFromPixel(pixel);\n  }\n  this.createOrUpdatePointerFeature_(vertex);\n};\n\n/**\n * @param {module:ol/extent~Extent} extent extent\n * @returns {module:ol/Feature} extent as featrue\n * @private\n */\nExtentInteraction.prototype.createOrUpdateExtentFeature_ = function(extent) {\n  let extentFeature = this.extentFeature_;\n\n  if (!extentFeature) {\n    if (!extent) {\n      extentFeature = new Feature({});\n    } else {\n      extentFeature = new Feature(polygonFromExtent(extent));\n    }\n    this.extentFeature_ = extentFeature;\n    this.extentOverlay_.getSource().addFeature(extentFeature);\n  } else {\n    if (!extent) {\n      extentFeature.setGeometry(undefined);\n    } else {\n      extentFeature.setGeometry(polygonFromExtent(extent));\n    }\n  }\n  return extentFeature;\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} vertex location of feature\n * @returns {module:ol/Feature} vertex as feature\n * @private\n */\nExtentInteraction.prototype.createOrUpdatePointerFeature_ = function(vertex) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(vertex));\n    this.vertexFeature_ = vertexFeature;\n    this.vertexOverlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(vertex);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nExtentInteraction.prototype.setMap = function(map) {\n  this.extentOverlay_.setMap(map);\n  this.vertexOverlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n/**\n * Returns the current drawn extent in the view projection\n *\n * @return {module:ol/extent~Extent} Drawn extent in the view projection.\n * @api\n */\nExtentInteraction.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n/**\n * Manually sets the drawn extent, using the view projection.\n *\n * @param {module:ol/extent~Extent} extent Extent\n * @api\n */\nExtentInteraction.prototype.setExtent = function(extent) {\n  //Null extent means no bbox\n  this.extent_ = extent ? extent : null;\n  this.createOrUpdateExtentFeature_(extent);\n  this.dispatchEvent(new ExtentInteractionEvent(this.extent_));\n};\n\n\nexport default ExtentInteraction;\n","/**\n * @module ol/interaction/Modify\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array.<number>} [depth]\n * @property {module:ol/Feature} feature\n * @property {module:ol/geom/SimpleGeometry} geometry\n * @property {number} index\n * @property {Array.<module:ol/extent~Extent>} segment\n * @property {Array.<module:ol/interaction/Modify~SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {module:ol/events/condition~Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {module:ol/events/condition~Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex can be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {module:ol/source/Vector} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {ModifyEventType} type Type.\n * @param {module:ol/Collection.<module:ol/Feature>} features\n * The features modified.\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserPointerEvent\n * Associated {@link module:ol/MapBrowserPointerEvent}.\n */\nexport const ModifyEvent = function(type, features, mapBrowserPointerEvent) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being modified.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * Associated {@link module:ol/MapBrowserEvent}.\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserPointerEvent;\n};\n\ninherits(ModifyEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/Modify~Options} options Options.\n * @fires module:ol/interaction/Modify~ModifyEvent\n * @api\n */\nconst Modify = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : primaryAction;\n\n\n  /**\n   * @private\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n    return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n  };\n\n  /**\n   * @type {module:ol/events/condition~Condition}\n   * @private\n   */\n  this.deleteCondition_ = options.deleteCondition ?\n    options.deleteCondition : this.defaultDeleteCondition_;\n\n  /**\n   * @type {module:ol/events/condition~Condition}\n   * @private\n   */\n  this.insertVertexCondition_ = options.insertVertexCondition ?\n    options.insertVertexCondition : always;\n\n  /**\n   * Editing vertex.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * Segments intersecting {@link this.vertexFeature_} by segment uid.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.vertexSegments_ = null;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * Tracks if the next `singleclick` event should be ignored to prevent\n   * accidental deletion right after vertex creation.\n   * @type {boolean}\n   * @private\n   */\n  this.ignoreNextSingleClick_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {module:ol/structs/RBush.<module:ol/interaction/Modify~SegmentData>}\n   * @private\n   */\n  this.rBush_ = new RBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = [];\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @const\n   * @private\n   * @type {!Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n   */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'Circle': this.writeCircleGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_\n  };\n\n\n  /**\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = null;\n\n  let features;\n  if (options.source) {\n    this.source_ = options.source;\n    features = new Collection(this.source_.getFeatures());\n    listen(this.source_, VectorEventType.ADDFEATURE,\n      this.handleSourceAdd_, this);\n    listen(this.source_, VectorEventType.REMOVEFEATURE,\n      this.handleSourceRemove_, this);\n  } else {\n    features = options.features;\n  }\n  if (!features) {\n    throw new Error('The modify interaction requires features or a source');\n  }\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = features;\n\n  this.features_.forEach(this.addFeature_.bind(this));\n  listen(this.features_, CollectionEventType.ADD,\n    this.handleFeatureAdd_, this);\n  listen(this.features_, CollectionEventType.REMOVE,\n    this.handleFeatureRemove_, this);\n\n  /**\n   * @type {module:ol/MapBrowserPointerEvent}\n   * @private\n   */\n  this.lastPointerEvent_ = null;\n\n};\n\ninherits(Modify, PointerInteraction);\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n    this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n  }\n  const map = this.getMap();\n  if (map && map.isRendered() && this.getActive()) {\n    this.handlePointerAtPixel_(this.lastPixel_, map);\n  }\n  listen(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nModify.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new ModifyEvent(\n      ModifyEventType.MODIFYSTART, this.features_, evt));\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  unlisten(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<module:ol/interaction/Modify~SegmentData>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n     * @param {module:ol/interaction/Modify~SegmentData} node RTree node.\n     */\n    function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setActive = function(active) {\n  if (this.vertexFeature_ && !active) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  PointerInteraction.prototype.setActive.call(this, active);\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n * @private\n */\nModify.prototype.handleSourceAdd_ = function(event) {\n  if (event.feature) {\n    this.features_.push(event.feature);\n  }\n};\n\n\n/**\n * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n * @private\n */\nModify.prototype.handleSourceRemove_ = function(event) {\n  if (event.feature) {\n    this.features_.remove(event.feature);\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nModify.prototype.handleFeatureAdd_ = function(evt) {\n  this.addFeature_(/** @type {module:ol/Feature} */ (evt.element));\n};\n\n\n/**\n * @param {module:ol/events/Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureChange_ = function(evt) {\n  if (!this.changingFeature_) {\n    const feature = /** @type {module:ol/Feature} */ (evt.target);\n    this.removeFeature_(feature);\n    this.addFeature_(feature);\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nModify.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {module:ol/Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Point} geometry Geometry.\n * @private\n */\nModify.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      depth: [i],\n      index: i,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: i,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @private\n */\nModify.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j, k],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * We convert a circle into two segments.  The segment at index\n * {@link CIRCLE_CENTER_INDEX} is the\n * circle's center (a point).  The segment at index\n * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n * the circumference, and is not a line segment.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @private\n */\nModify.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCenter();\n  const centerSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: CIRCLE_CENTER_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const circumferenceSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: CIRCLE_CIRCUMFERENCE_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const featureSegments = [centerSegmentData, circumferenceSegmentData];\n  centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n  this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n  this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @private\n */\nModify.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n * @return {module:ol/Feature} Vertex feature.\n * @private\n */\nModify.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Modify~SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDownEvent(evt) {\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const insertVertices = [];\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(compareIndexes);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        const closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n        if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (let j = insertVertices.length - 1; j >= 0; --j) {\n      this.insertVertex_.apply(this, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDragEvent(evt) {\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  const vertex = evt.coordinate;\n  for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    const dragSegment = this.dragSegments_[i];\n    const segmentData = dragSegment[0];\n    const depth = segmentData.depth;\n    const geometry = segmentData.geometry;\n    let coordinates;\n    const segment = segmentData.segment;\n    const index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === CIRCLE_CENTER_INDEX) {\n          this.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this.changingFeature_ = true;\n          geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n          this.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleUpEvent(evt) {\n  for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n    const segmentData = this.dragSegments_[i][0];\n    const geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      const coordinates = geometry.getCenter();\n      const centerSegmentData = segmentData.featureSegments[0];\n      const circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return handlePointerEvent.call(this, mapBrowserEvent) && !handled;\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} evt Event.\n * @private\n */\nModify.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {module:ol~Pixel} pixel Pixel\n * @param {module:ol/PluggableMap} map Map.\n * @private\n */\nModify.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n        pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n  };\n\n  const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n    map.getView().getResolution() * this.pixelTolerance_);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = closestOnSegmentData(pixelCoordinate, node);\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    let dist = coordinateDistance(pixel, vertexPixel);\n    if (dist <= this.pixelTolerance_) {\n      const vertexSegments = {};\n\n      if (node.geometry.getType() === GeometryType.CIRCLE &&\n      node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        this.snappedToVertex_ = true;\n        this.createOrUpdateVertexFeature_(vertex);\n      } else {\n        const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          const segment = nodes[i].segment;\n          if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n              coordinatesEqual(closestSegment[1], segment[1]) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n              coordinatesEqual(closestSegment[1], segment[0])))) {\n            vertexSegments[getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n      }\n\n      vertexSegments[getUid(closestSegment)] = true;\n      this.vertexSegments_ = vertexSegments;\n      return;\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {module:ol/geom/Circle} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {module:ol/coordinate~Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} segmentData Segment data.\n * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n * @private\n */\nModify.prototype.insertVertex_ = function(segmentData, vertex) {\n  const segment = segmentData.segment;\n  const feature = segmentData.feature;\n  const geometry = segmentData.geometry;\n  const depth = segmentData.depth;\n  const index = /** @type {number} */ (segmentData.index);\n  let coordinates;\n\n  while (vertex.length < geometry.getStride()) {\n    vertex.push(0);\n  }\n\n  switch (geometry.getType()) {\n    case GeometryType.MULTI_LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates.splice(index + 1, 0, vertex);\n      break;\n    default:\n      return;\n  }\n\n  this.setGeometryCoordinates_(geometry, coordinates);\n  const rTree = this.rBush_;\n  rTree.remove(segmentData);\n  this.updateSegmentIndices_(geometry, index, depth, 1);\n  const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    segment: [segment[0], vertex],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index\n  });\n  rTree.insert(boundingExtent(newSegmentData.segment),\n    newSegmentData);\n  this.dragSegments_.push([newSegmentData, 1]);\n\n  const newSegmentData2 = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    segment: [vertex, segment[1]],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index + 1\n  });\n  rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n  this.dragSegments_.push([newSegmentData2, 0]);\n  this.ignoreNextSingleClick_ = true;\n};\n\n/**\n * Removes the vertex currently being pointed.\n * @return {boolean} True when a vertex was removed.\n * @api\n */\nModify.prototype.removePoint = function() {\n  if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n    const evt = this.lastPointerEvent_;\n    this.willModifyFeatures_(evt);\n    this.removeVertex_();\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes a vertex from all matching features.\n * @return {boolean} True when a vertex was removed.\n * @private\n */\nModify.prototype.removeVertex_ = function() {\n  const dragSegments = this.dragSegments_;\n  const segmentsByFeature = {};\n  let deleted = false;\n  let component, coordinates, dragSegment, geometry, i, index, left;\n  let newIndex, right, segmentData, uid;\n  for (i = dragSegments.length - 1; i >= 0; --i) {\n    dragSegment = dragSegments[i];\n    segmentData = dragSegment[0];\n    uid = getUid(segmentData.feature);\n    if (segmentData.depth) {\n      // separate feature components\n      uid += '-' + segmentData.depth.join('-');\n    }\n    if (!(uid in segmentsByFeature)) {\n      segmentsByFeature[uid] = {};\n    }\n    if (dragSegment[1] === 0) {\n      segmentsByFeature[uid].right = segmentData;\n      segmentsByFeature[uid].index = segmentData.index;\n    } else if (dragSegment[1] == 1) {\n      segmentsByFeature[uid].left = segmentData;\n      segmentsByFeature[uid].index = segmentData.index + 1;\n    }\n\n  }\n  for (uid in segmentsByFeature) {\n    right = segmentsByFeature[uid].right;\n    left = segmentsByFeature[uid].left;\n    index = segmentsByFeature[uid].index;\n    newIndex = index - 1;\n    if (left !== undefined) {\n      segmentData = left;\n    } else {\n      segmentData = right;\n    }\n    if (newIndex < 0) {\n      newIndex = 0;\n    }\n    geometry = segmentData.geometry;\n    coordinates = geometry.getCoordinates();\n    component = coordinates;\n    deleted = false;\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        if (coordinates[segmentData.depth[0]].length > 2) {\n          coordinates[segmentData.depth[0]].splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.LINE_STRING:\n        if (coordinates.length > 2) {\n          coordinates.splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.MULTI_POLYGON:\n        component = component[segmentData.depth[1]];\n        /* falls through */\n      case GeometryType.POLYGON:\n        component = component[segmentData.depth[0]];\n        if (component.length > 4) {\n          if (index == component.length - 1) {\n            index = 0;\n          }\n          component.splice(index, 1);\n          deleted = true;\n          if (index === 0) {\n            // close the ring again\n            component.pop();\n            component.push(component[0]);\n            newIndex = component.length - 1;\n          }\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (deleted) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n      const segments = [];\n      if (left !== undefined) {\n        this.rBush_.remove(left);\n        segments.push(left.segment[0]);\n      }\n      if (right !== undefined) {\n        this.rBush_.remove(right);\n        segments.push(right.segment[1]);\n      }\n      if (left !== undefined && right !== undefined) {\n        const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          depth: segmentData.depth,\n          feature: segmentData.feature,\n          geometry: segmentData.geometry,\n          index: newIndex,\n          segment: segments\n        });\n        this.rBush_.insert(boundingExtent(newSegmentData.segment),\n          newSegmentData);\n      }\n      this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n      if (this.vertexFeature_) {\n        this.overlay_.getSource().removeFeature(this.vertexFeature_);\n        this.vertexFeature_ = null;\n      }\n      dragSegments.length = 0;\n    }\n\n  }\n  return deleted;\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nModify.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {number} index Index.\n * @param {Array.<number>|undefined} depth Depth.\n * @param {number} delta Delta (1 or -1).\n * @private\n */\nModify.prototype.updateSegmentIndices_ = function(\n  geometry, index, depth, delta) {\n  this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n    if (segmentDataMatch.geometry === geometry &&\n        (depth === undefined || segmentDataMatch.depth === undefined ||\n        equals(segmentDataMatch.depth, depth)) &&\n        segmentDataMatch.index > index) {\n      segmentDataMatch.index += delta;\n    }\n  });\n};\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport {getUid, inherits} from '../index.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer):\n *     boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {module:ol/events/condition~Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {module:ol/interaction/Select~FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n *\n * @param {SelectEventType} type The event type.\n * @param {Array.<module:ol/Feature>} selected Selected features.\n * @param {Array.<module:ol/Feature>} deselected Deselected features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Associated\n *     {@link module:ol/MapBrowserEvent}.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst SelectEvent = function(type, selected, deselected, mapBrowserEvent) {\n  Event.call(this, type);\n\n  /**\n   * Selected features array.\n   * @type {Array.<module:ol/Feature>}\n   * @api\n   */\n  this.selected = selected;\n\n  /**\n   * Deselected features array.\n   * @type {Array.<module:ol/Feature>}\n   * @api\n   */\n  this.deselected = deselected;\n\n  /**\n   * Associated {@link module:ol/MapBrowserEvent}.\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserEvent;\n};\n\ninherits(SelectEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/Select~Options=} opt_options Options.\n * @fires SelectEvent\n * @api\n */\nconst Select = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : singleClick;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multi_ = options.multi ? options.multi : false;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/Select~FilterFunction}\n   */\n  this.filter_ = options.filter ? options.filter : TRUE;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  const featureOverlay = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      features: options.features,\n      wrapX: options.wrapX\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @private\n   * @type {module:ol/layer/Vector}\n   */\n  this.featureOverlay_ = featureOverlay;\n\n  /** @type {function(module:ol/layer/Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(module:ol/layer/Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * An association between selected feature (key)\n   * and layer (value)\n   * @private\n   * @type {Object.<number, module:ol/layer/Layer>}\n   */\n  this.featureLayerAssociation_ = {};\n\n  const features = this.featureOverlay_.getSource().getFeaturesCollection();\n  listen(features, CollectionEventType.ADD,\n    this.addFeature_, this);\n  listen(features, CollectionEventType.REMOVE,\n    this.removeFeature_, this);\n\n};\n\ninherits(Select, Interaction);\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/layer/Layer} layer Layer.\n * @private\n */\nSelect.prototype.addFeatureLayerAssociation_ = function(feature, layer) {\n  const key = getUid(feature);\n  this.featureLayerAssociation_[key] = layer;\n};\n\n\n/**\n * Get the selected features.\n * @return {module:ol/Collection.<module:ol/Feature>} Features collection.\n * @api\n */\nSelect.prototype.getFeatures = function() {\n  return this.featureOverlay_.getSource().getFeaturesCollection();\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nSelect.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n * the (last) selected feature. Note that this will not work with any\n * programmatic method like pushing features to\n * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature\n * @return {module:ol/layer/Vector} Layer.\n * @api\n */\nSelect.prototype.getLayer = function(feature) {\n  const key = getUid(feature);\n  return (\n    /** @type {module:ol/layer/Vector} */ (this.featureLayerAssociation_[key])\n  );\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const add = this.addCondition_(mapBrowserEvent);\n  const remove = this.removeCondition_(mapBrowserEvent);\n  const toggle = this.toggleCondition_(mapBrowserEvent);\n  const set = !add && !remove && !toggle;\n  const map = mapBrowserEvent.map;\n  const features = this.featureOverlay_.getSource().getFeaturesCollection();\n  const deselected = [];\n  const selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let i = features.getLength() - 1; i >= 0; --i) {\n      const feature = features.item(i);\n      const index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nSelect.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * Remove the interaction from its current map, if any,  and attach it to a new\n * map, if any. Pass `null` to just remove the interaction from the current map.\n * @param {module:ol/PluggableMap} map Map.\n * @override\n * @api\n */\nSelect.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const selectedFeatures =\n      this.featureOverlay_.getSource().getFeaturesCollection();\n  if (currentMap) {\n    selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n  }\n  Interaction.prototype.setMap.call(this, map);\n  this.featureOverlay_.setMap(map);\n  if (map) {\n    selectedFeatures.forEach(map.skipFeature.bind(map));\n  }\n};\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSelect.prototype.addFeature_ = function(evt) {\n  const map = this.getMap();\n  if (map) {\n    map.skipFeature(/** @type {module:ol/Feature} */ (evt.element));\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSelect.prototype.removeFeature_ = function(evt) {\n  const map = this.getMap();\n  if (map) {\n    map.unskipFeature(/** @type {module:ol/Feature} */ (evt.element));\n  }\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @private\n */\nSelect.prototype.removeFeatureLayerAssociation_ = function(feature) {\n  const key = getUid(feature);\n  delete this.featureLayerAssociation_[key];\n};\n\n\nexport default Select;\n","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport {CollectionEvent} from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport {VectorSourceEvent} from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {module:ol/coordinate~Coordinate|null} vertex\n * @property {module:ol~Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {module:ol/Feature} feature\n * @property {Array.<module:ol/coordinate~Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {module:ol/source/Vector} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/Snap~Options=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: handleEvent,\n    handleDownEvent: TRUE,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<module:ol/events~EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, module:ol/events~EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, module:ol/extent~Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {!Object.<number, module:ol/Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(module:ol/interaction/Snap~SegmentData, module:ol/interaction/Snap~SegmentData): number}\n   * @private\n   */\n  this.sortByDistance_ = sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {module:ol/structs/RBush.<module:ol/interaction/Snap~SegmentData>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {module:ol/Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const register = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (register) {\n    this.featureChangeListenerKeys_[feature_uid] = listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {module:ol/Collection.<module:ol/Feature>|Array.<module:ol/Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return (\n    /** @type {!Array.<module:ol/Feature>|!module:ol/Collection.<module:ol/Feature>} */ (features)\n  );\n};\n\n\n/**\n * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSourceEvent) {\n    feature = evt.feature;\n  } else if (evt instanceof CollectionEvent) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {module:ol/Feature} */ (feature));\n};\n\n\n/**\n * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSourceEvent) {\n    feature = evt.feature;\n  } else if (evt instanceof CollectionEvent) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {module:ol/Feature} */ (feature));\n};\n\n\n/**\n * @param {module:ol/events/Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {module:ol/Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {module:ol/Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unregister) {\n    unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {module:ol~Pixel} pixel Pixel\n * @param {module:ol/coordinate~Coordinate} pixelCoordinate Coordinate\n * @param {module:ol/PluggableMap} map Map.\n * @return {module:ol/interaction/Snap~Result} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n      squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = closestOnCircle(pixelCoordinate,\n          /** @type {module:ol/geom/Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return (\n    /** @type {module:ol/interaction/Snap~Result} */ ({\n      snapped: snapped,\n      vertex: vertex,\n      vertexPixel: vertexPixel\n    })\n  );\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {module:ol/MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {module:ol/interaction/Snap}\n */\nexport function handleEvent(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return handlePointerEvent.call(this, evt);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Snap}\n */\nfunction handleUpEvent(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n}\n\n\n/**\n * Sort segments by distance, helper function\n * @param {module:ol/interaction/Snap~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Snap~SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {module:ol/interaction/Snap}\n */\nfunction sortByDistance(a, b) {\n  const deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  const deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport {inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\n\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/Translate~TranslateEventType} type Type.\n * @param {module:ol/Collection.<module:ol/Feature>} features The features translated.\n * @param {module:ol/coordinate~Coordinate} coordinate The event coordinate.\n */\nexport const TranslateEvent = function(type, features, coordinate) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being translated.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n};\n\ninherits(TranslateEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Translate~TranslateEvent\n * @param {module:ol/interaction/Translate~Options=} opt_options Options.\n * @api\n */\nconst Translate = function(opt_options) {\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleMoveEvent: handleMoveEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * The last position we translated to.\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.lastCoordinate_ = null;\n\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features !== undefined ? options.features : null;\n\n  /** @type {function(module:ol/layer/Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(module:ol/layer/Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  /**\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.lastFeature_ = null;\n\n  listen(this,\n    getChangeEventType(InteractionProperty.ACTIVE),\n    this.handleActiveChanged_, this);\n\n};\n\ninherits(Translate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDownEvent(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    handleMoveEvent.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleUpEvent(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    handleMoveEvent.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDragEvent(event) {\n  if (this.lastCoordinate_) {\n    const newCoordinate = event.coordinate;\n    const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      const geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleMoveEvent(event) {\n  const elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n}\n\n\n/**\n * Tests to see if the given coordinates intersects any of our selected\n * features.\n * @param {module:ol~Pixel} pixel Pixel coordinate to test for intersection.\n * @param {module:ol/PluggableMap} map Map to test the intersection on.\n * @return {module:ol/Feature} Returns the feature found at the specified pixel\n * coordinates.\n * @private\n */\nTranslate.prototype.featuresAtPixel_ = function(pixel, map) {\n  return map.forEachFeatureAtPixel(pixel,\n    function(feature) {\n      if (!this.features_ || includes(this.features_.getArray(), feature)) {\n        return feature;\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * @inheritDoc\n */\nTranslate.prototype.setMap = function(map) {\n  const oldMap = this.getMap();\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_(oldMap);\n};\n\n\n/**\n * @private\n */\nTranslate.prototype.handleActiveChanged_ = function() {\n  this.updateState_(null);\n};\n\n\n/**\n * @param {module:ol/PluggableMap} oldMap Old map.\n * @private\n */\nTranslate.prototype.updateState_ = function(oldMap) {\n  let map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    map = map || oldMap;\n    if (map) {\n      const elem = map.getViewport();\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n};\n\n\nexport default Translate;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {module:ol/interaction/Interaction~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/interaction/Interaction>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      kinetic: kinetic\n    }));\n  }\n\n  const pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n","/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/ImageBase\n */\nimport {inherits} from './index.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/events/EventTarget}\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/ImageState} state State.\n */\nconst ImageBase = function(extent, resolution, pixelRatio, state) {\n\n  EventTarget.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.resolution = resolution;\n\n  /**\n   * @protected\n   * @type {module:ol/ImageState}\n   */\n  this.state = state;\n\n};\n\ninherits(ImageBase, EventTarget);\n\n\n/**\n * @protected\n */\nImageBase.prototype.changed = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @return {module:ol/extent~Extent} Extent.\n */\nImageBase.prototype.getExtent = function() {\n  return this.extent;\n};\n\n\n/**\n * @abstract\n * @return {HTMLCanvasElement|Image|HTMLVideoElement} Image.\n */\nImageBase.prototype.getImage = function() {};\n\n\n/**\n * @return {number} PixelRatio.\n */\nImageBase.prototype.getPixelRatio = function() {\n  return this.pixelRatio_;\n};\n\n\n/**\n * @return {number} Resolution.\n */\nImageBase.prototype.getResolution = function() {\n  return /** @type {number} */ (this.resolution);\n};\n\n\n/**\n * @return {module:ol/ImageState} State.\n */\nImageBase.prototype.getState = function() {\n  return this.state;\n};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageBase.prototype.load = function() {};\n\nexport default ImageBase;\n","/**\n * @module ol/ImageCanvas\n */\nimport {inherits} from './index.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error))} Loader\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/ImageBase}\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {module:ol/ImageCanvas~Loader=} opt_loader Optional loader function to\n *     support asynchronous canvas drawing.\n */\nconst ImageCanvas = function(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n  /**\n   * Optional canvas loader function.\n   * @type {?module:ol/ImageCanvas~Loader}\n   * @private\n   */\n  this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n  const state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n  ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = canvas;\n\n  /**\n   * @private\n   * @type {Error}\n   */\n  this.error_ = null;\n\n};\n\ninherits(ImageCanvas, ImageBase);\n\n\n/**\n * Get any error associated with asynchronous rendering.\n * @return {Error} Any error that occurred during rendering.\n */\nImageCanvas.prototype.getError = function() {\n  return this.error_;\n};\n\n\n/**\n * Handle async drawing complete.\n * @param {Error} err Any error during drawing.\n * @private\n */\nImageCanvas.prototype.handleLoad_ = function(err) {\n  if (err) {\n    this.error_ = err;\n    this.state = ImageState.ERROR;\n  } else {\n    this.state = ImageState.LOADED;\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nImageCanvas.prototype.load = function() {\n  if (this.state == ImageState.IDLE) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.loader_(this.handleLoad_.bind(this));\n  }\n};\n\n\n/**\n * @return {HTMLCanvasElement} Canvas element.\n */\nImageCanvas.prototype.getImage = function() {\n  return this.canvas_;\n};\nexport default ImageCanvas;\n","/**\n * @module ol/render/Event\n */\nimport {inherits} from '../index.js';\nimport Event from '../events/Event.js';\n\n/**\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/render/EventType} type Type.\n * @param {module:ol/render/VectorContext=} opt_vectorContext Vector context.\n * @param {module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n * @param {?CanvasRenderingContext2D=} opt_context Context.\n * @param {?module:ol/webgl/Context=} opt_glContext WebGL Context.\n */\nconst RenderEvent = function(\n  type, opt_vectorContext, opt_frameState, opt_context,\n  opt_glContext) {\n\n  Event.call(this, type);\n\n  /**\n   * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n   * @type {module:ol/render/VectorContext|undefined}\n   * @api\n   */\n  this.vectorContext = opt_vectorContext;\n\n  /**\n   * An object representing the current render frame state.\n   * @type {module:ol/PluggableMap~FrameState|undefined}\n   * @api\n   */\n  this.frameState = opt_frameState;\n\n  /**\n   * Canvas context. Only available when a Canvas renderer is used, null\n   * otherwise.\n   * @type {CanvasRenderingContext2D|null|undefined}\n   * @api\n   */\n  this.context = opt_context;\n\n  /**\n   * WebGL context. Only available when a WebGL renderer is used, null\n   * otherwise.\n   * @type {module:ol/webgl/Context|null|undefined}\n   * @api\n   */\n  this.glContext = opt_glContext;\n\n};\n\ninherits(RenderEvent, Event);\nexport default RenderEvent;\n","/**\n * @module ol/render/VectorContext\n */\n/**\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @constructor\n * @abstract\n * @struct\n * @api\n */\nconst VectorContext = function() {\n};\n\n\n/**\n * Render a geometry with a custom renderer.\n *\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {Function} renderer Renderer.\n */\nVectorContext.prototype.drawCustom = function(geometry, feature, renderer) {};\n\n\n/**\n * Render a geometry.\n *\n * @param {module:ol/geom/Geometry} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function(geometry) {};\n\n\n/**\n * Set the rendering style.\n *\n * @param {module:ol/style/Style} style The rendering style.\n */\nVectorContext.prototype.setStyle = function(style) {};\n\n\n/**\n * @param {module:ol/geom/Circle} circleGeometry Circle geometry.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawCircle = function(circleGeometry, feature) {};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n */\nVectorContext.prototype.drawFeature = function(feature, style) {};\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometryCollectionGeometry Geometry\n *     collection.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function(geometryCollectionGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/LineString|module:ol/render/Feature} lineStringGeometry Line string geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawLineString = function(lineStringGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} multiLineStringGeometry MultiLineString geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} multiPointGeometry MultiPoint geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function(multiPointGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} multiPolygonGeometry MultiPolygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Point|module:ol/render/Feature} pointGeometry Point geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPoint = function(pointGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} polygonGeometry Polygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function(polygonGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawText = function(geometry, feature) {};\n\n\n/**\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {};\n\n\n/**\n * @param {module:ol/style/Image} imageStyle Image style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function(imageStyle, opt_declutterGroup) {};\n\n\n/**\n * @param {module:ol/style/Text} textStyle Text style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function(textStyle, opt_declutterGroup) {};\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {inherits} from '../../index.js';\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n *\n * @constructor\n * @extends {module:ol/render/VectorContext}\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @struct\n */\nconst CanvasImmediateRenderer = function(context, pixelRatio, extent, transform, viewRotation) {\n  VectorContext.call(this);\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = context;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = transform;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.viewRotation_ = viewRotation;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.contextFillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.contextStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~TextState}\n   */\n  this.contextTextState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.fillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.strokeState_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorY_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageHeight_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOpacity_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageScale_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageSnapToPixel_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageWidth_ = 0;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.textRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textScale_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.textFillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.textStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~TextState}\n   */\n  this.textState_ = null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.pixelCoordinates_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.tmpLocalTransform_ = createTransform();\n\n};\n\ninherits(CanvasImmediateRenderer, VectorContext);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\nCanvasImmediateRenderer.prototype.drawImages_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.image_) {\n    return;\n  }\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, 2, this.transform_,\n    this.pixelCoordinates_);\n  const context = this.context_;\n  const localTransform = this.tmpLocalTransform_;\n  const alpha = context.globalAlpha;\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha * this.imageOpacity_;\n  }\n  let rotation = this.imageRotation_;\n  if (this.imageRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n    let x = pixelCoordinates[i] - this.imageAnchorX_;\n    let y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n    if (this.imageSnapToPixel_) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      const centerX = x + this.imageAnchorX_;\n      const centerY = y + this.imageAnchorY_;\n      composeTransform(localTransform,\n        centerX, centerY,\n        this.imageScale_, this.imageScale_,\n        rotation,\n        -centerX, -centerY);\n      context.setTransform.apply(context, localTransform);\n    }\n    context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n      this.imageWidth_, this.imageHeight_, x, y,\n      this.imageWidth_, this.imageHeight_);\n  }\n  if (rotation !== 0 || this.imageScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha;\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\nCanvasImmediateRenderer.prototype.drawText_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.textState_ || this.text_ === '') {\n    return;\n  }\n  if (this.textFillState_) {\n    this.setContextFillState_(this.textFillState_);\n  }\n  if (this.textStrokeState_) {\n    this.setContextStrokeState_(this.textStrokeState_);\n  }\n  this.setContextTextState_(this.textState_);\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, stride, this.transform_,\n    this.pixelCoordinates_);\n  const context = this.context_;\n  let rotation = this.textRotation_;\n  if (this.textRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  for (; offset < end; offset += stride) {\n    const x = pixelCoordinates[offset] + this.textOffsetX_;\n    const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n    if (rotation !== 0 || this.textScale_ != 1) {\n      const localTransform = composeTransform(this.tmpLocalTransform_,\n        x, y,\n        this.textScale_, this.textScale_,\n        rotation,\n        -x, -y);\n      context.setTransform.apply(context, localTransform);\n    }\n    if (this.textStrokeState_) {\n      context.strokeText(this.text_, x, y);\n    }\n    if (this.textFillState_) {\n      context.fillText(this.text_, x, y);\n    }\n  }\n  if (rotation !== 0 || this.textScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} close Close.\n * @private\n * @return {number} end End.\n */\nCanvasImmediateRenderer.prototype.moveToLineTo_ = function(flatCoordinates, offset, end, stride, close) {\n  const context = this.context_;\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, stride, this.transform_,\n    this.pixelCoordinates_);\n  context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n  let length = pixelCoordinates.length;\n  if (close) {\n    length -= 2;\n  }\n  for (let i = 2; i < length; i += 2) {\n    context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n  }\n  if (close) {\n    context.closePath();\n  }\n  return end;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\nCanvasImmediateRenderer.prototype.drawRings_ = function(flatCoordinates, offset, ends, stride) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n  }\n  return offset;\n};\n\n\n/**\n * Render a circle geometry into the canvas.  Rendering is immediate and uses\n * the current fill and stroke styles.\n *\n * @param {module:ol/geom/Circle} geometry Circle geometry.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawCircle = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.fillState_ || this.strokeState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const pixelCoordinates = transformGeom2D(\n      geometry, this.transform_, this.pixelCoordinates_);\n    const dx = pixelCoordinates[2] - pixelCoordinates[0];\n    const dy = pixelCoordinates[3] - pixelCoordinates[1];\n    const radius = Math.sqrt(dx * dx + dy * dy);\n    const context = this.context_;\n    context.beginPath();\n    context.arc(\n      pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    this.drawText_(geometry.getCenter(), 0, 2, 2);\n  }\n};\n\n\n/**\n * Set the rendering style.  Note that since this is an immediate rendering API,\n * any `zIndex` on the provided style will be ignored.\n *\n * @param {module:ol/style/Style} style The rendering style.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.setStyle = function(style) {\n  this.setFillStrokeStyle(style.getFill(), style.getStroke());\n  this.setImageStyle(style.getImage());\n  this.setTextStyle(style.getText());\n};\n\n\n/**\n * Render a geometry into the canvas.  Call\n * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n *\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawGeometry = function(geometry) {\n  const type = geometry.getType();\n  switch (type) {\n    case GeometryType.POINT:\n      this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry));\n      break;\n    case GeometryType.LINE_STRING:\n      this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry));\n      break;\n    case GeometryType.POLYGON:\n      this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry));\n      break;\n    case GeometryType.MULTI_POINT:\n      this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry));\n      break;\n    case GeometryType.MULTI_LINE_STRING:\n      this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry));\n      break;\n    case GeometryType.MULTI_POLYGON:\n      this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry));\n      break;\n    case GeometryType.GEOMETRY_COLLECTION:\n      this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry));\n      break;\n    case GeometryType.CIRCLE:\n      this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry));\n      break;\n    default:\n  }\n};\n\n\n/**\n * Render a feature into the canvas.  Note that any `zIndex` on the provided\n * style will be ignored - features are rendered immediately in the order that\n * this method is called.  If you need `zIndex` support, you should be using an\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawFeature = function(feature, style) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  this.setStyle(style);\n  this.drawGeometry(geometry);\n};\n\n\n/**\n * Render a GeometryCollection to the canvas.  Rendering is immediate and\n * uses the current styles appropriate for each geometry in the collection.\n *\n * @param {module:ol/geom/GeometryCollection} geometry Geometry collection.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawGeometryCollection = function(geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    this.drawGeometry(geometries[i]);\n  }\n};\n\n\n/**\n * Render a Point geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Point geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawPoint = function(geometry) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n * uses the current style.\n *\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry MultiPoint geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiPoint = function(geometry) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a LineString into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry LineString geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawLineString = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    const context = this.context_;\n    const flatCoordinates = geometry.getFlatCoordinates();\n    context.beginPath();\n    this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n      geometry.getStride(), false);\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    const flatMidpoint = geometry.getFlatMidpoint();\n    this.drawText_(flatMidpoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n * and uses the current style.\n *\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry MultiLineString geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiLineString = function(geometry) {\n  const geometryExtent = geometry.getExtent();\n  if (!intersects(this.extent_, geometryExtent)) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    const context = this.context_;\n    const flatCoordinates = geometry.getFlatCoordinates();\n    let offset = 0;\n    const ends = geometry.getEnds();\n    const stride = geometry.getStride();\n    context.beginPath();\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n    }\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    const flatMidpoints = geometry.getFlatMidpoints();\n    this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n  }\n};\n\n\n/**\n * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Polygon geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawPolygon = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const context = this.context_;\n    context.beginPath();\n    this.drawRings_(geometry.getOrientedFlatCoordinates(),\n      0, geometry.getEnds(), geometry.getStride());\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    const flatInteriorPoint = geometry.getFlatInteriorPoint();\n    this.drawText_(flatInteriorPoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n * uses the current style.\n * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiPolygon = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const context = this.context_;\n    const flatCoordinates = geometry.getOrientedFlatCoordinates();\n    let offset = 0;\n    const endss = geometry.getEndss();\n    const stride = geometry.getStride();\n    context.beginPath();\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i];\n      offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n    }\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    const flatInteriorPoints = geometry.getFlatInteriorPoints();\n    this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillState} fillState Fill state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextFillState_ = function(fillState) {\n  const context = this.context_;\n  const contextFillState = this.contextFillState_;\n  if (!contextFillState) {\n    context.fillStyle = fillState.fillStyle;\n    this.contextFillState_ = {\n      fillStyle: fillState.fillStyle\n    };\n  } else {\n    if (contextFillState.fillStyle != fillState.fillStyle) {\n      contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~StrokeState} strokeState Stroke state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextStrokeState_ = function(strokeState) {\n  const context = this.context_;\n  const contextStrokeState = this.contextStrokeState_;\n  if (!contextStrokeState) {\n    context.lineCap = strokeState.lineCap;\n    if (CANVAS_LINE_DASH) {\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n    }\n    context.lineJoin = strokeState.lineJoin;\n    context.lineWidth = strokeState.lineWidth;\n    context.miterLimit = strokeState.miterLimit;\n    context.strokeStyle = strokeState.strokeStyle;\n    this.contextStrokeState_ = {\n      lineCap: strokeState.lineCap,\n      lineDash: strokeState.lineDash,\n      lineDashOffset: strokeState.lineDashOffset,\n      lineJoin: strokeState.lineJoin,\n      lineWidth: strokeState.lineWidth,\n      miterLimit: strokeState.miterLimit,\n      strokeStyle: strokeState.strokeStyle\n    };\n  } else {\n    if (contextStrokeState.lineCap != strokeState.lineCap) {\n      contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n    }\n    if (CANVAS_LINE_DASH) {\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = context.lineDashOffset =\n            strokeState.lineDashOffset;\n      }\n    }\n    if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n      contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n    }\n    if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n      contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n    }\n    if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n      contextStrokeState.miterLimit = context.miterLimit =\n          strokeState.miterLimit;\n    }\n    if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n      contextStrokeState.strokeStyle = context.strokeStyle =\n          strokeState.strokeStyle;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~TextState} textState Text state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextTextState_ = function(textState) {\n  const context = this.context_;\n  const contextTextState = this.contextTextState_;\n  const textAlign = textState.textAlign ?\n    textState.textAlign : defaultTextAlign;\n  if (!contextTextState) {\n    context.font = textState.font;\n    context.textAlign = textAlign;\n    context.textBaseline = textState.textBaseline;\n    this.contextTextState_ = {\n      font: textState.font,\n      textAlign: textAlign,\n      textBaseline: textState.textBaseline\n    };\n  } else {\n    if (contextTextState.font != textState.font) {\n      contextTextState.font = context.font = textState.font;\n    }\n    if (contextTextState.textAlign != textAlign) {\n      contextTextState.textAlign = context.textAlign = textAlign;\n    }\n    if (contextTextState.textBaseline != textState.textBaseline) {\n      contextTextState.textBaseline = context.textBaseline =\n          textState.textBaseline;\n    }\n  }\n};\n\n\n/**\n * Set the fill and stroke style for subsequent draw operations.  To clear\n * either fill or stroke styles, pass null for the appropriate parameter.\n *\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  if (!fillStyle) {\n    this.fillState_ = null;\n  } else {\n    const fillStyleColor = fillStyle.getColor();\n    this.fillState_ = {\n      fillStyle: asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle)\n    };\n  }\n  if (!strokeStyle) {\n    this.strokeState_ = null;\n  } else {\n    const strokeStyleColor = strokeStyle.getColor();\n    const strokeStyleLineCap = strokeStyle.getLineCap();\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    const strokeStyleLineJoin = strokeStyle.getLineJoin();\n    const strokeStyleWidth = strokeStyle.getWidth();\n    const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    this.strokeState_ = {\n      lineCap: strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap,\n      lineDash: strokeStyleLineDash ?\n        strokeStyleLineDash : defaultLineDash,\n      lineDashOffset: strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset,\n      lineJoin: strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin,\n      lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth),\n      miterLimit: strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit,\n      strokeStyle: asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle)\n    };\n  }\n};\n\n\n/**\n * Set the image style for subsequent draw operations.  Pass null to remove\n * the image style.\n *\n * @param {module:ol/style/Image} imageStyle Image style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setImageStyle = function(imageStyle) {\n  if (!imageStyle) {\n    this.image_ = null;\n  } else {\n    const imageAnchor = imageStyle.getAnchor();\n    // FIXME pixel ratio\n    const imageImage = imageStyle.getImage(1);\n    const imageOrigin = imageStyle.getOrigin();\n    const imageSize = imageStyle.getSize();\n    this.imageAnchorX_ = imageAnchor[0];\n    this.imageAnchorY_ = imageAnchor[1];\n    this.imageHeight_ = imageSize[1];\n    this.image_ = imageImage;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n    this.imageSnapToPixel_ = imageStyle.getSnapToPixel();\n    this.imageWidth_ = imageSize[0];\n  }\n};\n\n\n/**\n * Set the text style for subsequent draw operations.  Pass null to\n * remove the text style.\n *\n * @param {module:ol/style/Text} textStyle Text style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setTextStyle = function(textStyle) {\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    const textFillStyle = textStyle.getFill();\n    if (!textFillStyle) {\n      this.textFillState_ = null;\n    } else {\n      const textFillStyleColor = textFillStyle.getColor();\n      this.textFillState_ = {\n        fillStyle: asColorLike(textFillStyleColor ?\n          textFillStyleColor : defaultFillStyle)\n      };\n    }\n    const textStrokeStyle = textStyle.getStroke();\n    if (!textStrokeStyle) {\n      this.textStrokeState_ = null;\n    } else {\n      const textStrokeStyleColor = textStrokeStyle.getColor();\n      const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n      const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n      const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n      const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n      const textStrokeStyleWidth = textStrokeStyle.getWidth();\n      const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n      this.textStrokeState_ = {\n        lineCap: textStrokeStyleLineCap !== undefined ?\n          textStrokeStyleLineCap : defaultLineCap,\n        lineDash: textStrokeStyleLineDash ?\n          textStrokeStyleLineDash : defaultLineDash,\n        lineDashOffset: textStrokeStyleLineDashOffset ?\n          textStrokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: textStrokeStyleLineJoin !== undefined ?\n          textStrokeStyleLineJoin : defaultLineJoin,\n        lineWidth: textStrokeStyleWidth !== undefined ?\n          textStrokeStyleWidth : defaultLineWidth,\n        miterLimit: textStrokeStyleMiterLimit !== undefined ?\n          textStrokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(textStrokeStyleColor ?\n          textStrokeStyleColor : defaultStrokeStyle)\n      };\n    }\n    const textFont = textStyle.getFont();\n    const textOffsetX = textStyle.getOffsetX();\n    const textOffsetY = textStyle.getOffsetY();\n    const textRotateWithView = textStyle.getRotateWithView();\n    const textRotation = textStyle.getRotation();\n    const textScale = textStyle.getScale();\n    const textText = textStyle.getText();\n    const textTextAlign = textStyle.getTextAlign();\n    const textTextBaseline = textStyle.getTextBaseline();\n    this.textState_ = {\n      font: textFont !== undefined ?\n        textFont : defaultFont,\n      textAlign: textTextAlign !== undefined ?\n        textTextAlign : defaultTextAlign,\n      textBaseline: textTextBaseline !== undefined ?\n        textTextBaseline : defaultTextBaseline\n    };\n    this.text_ = textText !== undefined ? textText : '';\n    this.textOffsetX_ =\n        textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n    this.textOffsetY_ =\n        textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n    this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n    this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n    this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n      textScale : 1);\n  }\n};\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n * @constructor\n */\nconst IconImageCache = function() {\n\n  /**\n   * @type {!Object.<string, module:ol/style/IconImage>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.cacheSize_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxCacheSize_ = 32;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\n/**\n * FIXME empty description for jsdoc\n */\nIconImageCache.prototype.clear = function() {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nIconImageCache.prototype.expire = function() {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    let i = 0;\n    for (const key in this.cache_) {\n      const iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/style/IconImage} Icon image.\n */\nIconImageCache.prototype.get = function(src, crossOrigin, color) {\n  const key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @param {module:ol/style/IconImage} iconImage Icon image.\n */\nIconImageCache.prototype.set = function(src, crossOrigin, color, iconImage) {\n  const key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n\n/**\n * Set the cache size of the icon cache. Default is `32`. Change this value when\n * your map uses more than 32 different icon images and you are not caching icon\n * styles on the application level.\n * @param {number} maxCacheSize Cache max size.\n * @api\n */\nIconImageCache.prototype.setSize = function(maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/renderer/Map\n */\nimport {getUid, inherits} from '../index.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/Disposable}\n * @param {module:ol/PluggableMap} map Map.\n * @struct\n */\nconst MapRenderer = function(map) {\n  Disposable.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = map;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/renderer/Layer>}\n   */\n  this.layerRenderers_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/events~EventsKey>}\n   */\n  this.layerRendererListeners_ = {};\n\n  /**\n   * @private\n   * @type {Array.<module:ol/renderer/Layer>}\n   */\n  this.layerRendererConstructors_ = [];\n\n};\n\ninherits(MapRenderer, Disposable);\n\n\n/**\n * Register layer renderer constructors.\n * @param {Array.<module:ol/renderer/Layer>} constructors Layer renderers.\n */\nMapRenderer.prototype.registerLayerRenderers = function(constructors) {\n  this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n};\n\n\n/**\n * Get the registered layer renderer constructors.\n * @return {Array.<module:ol/renderer/Layer>} Registered layer renderers.\n */\nMapRenderer.prototype.getLayerRendererConstructors = function() {\n  return this.layerRendererConstructors_;\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @protected\n */\nMapRenderer.prototype.calculateMatrices2D = function(frameState) {\n  const viewState = frameState.viewState;\n  const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n  const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n  composeTransform(coordinateToPixelTransform,\n    frameState.size[0] / 2, frameState.size[1] / 2,\n    1 / viewState.resolution, -1 / viewState.resolution,\n    -viewState.rotation,\n    -viewState.center[0], -viewState.center[1]);\n\n  invertTransform(\n    transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n};\n\n\n/**\n * Removes all layer renderers.\n */\nMapRenderer.prototype.removeLayerRenderers = function() {\n  for (const key in this.layerRenderers_) {\n    this.removeLayerRendererByKey_(key).dispose();\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n *     module:ol/layer/Layer): T} callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nMapRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {\n  let result;\n  const viewState = frameState.viewState;\n  const viewResolution = viewState.resolution;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {?} Callback result.\n   */\n  function forEachFeatureAtCoordinate(feature, layer) {\n    const key = getUid(feature).toString();\n    const managed = frameState.layerStates[getUid(layer)].managed;\n    if (!(key in frameState.skippedFeatureUids && !managed)) {\n      return callback.call(thisArg, feature, managed ? layer : null);\n    }\n  }\n\n  const projection = viewState.projection;\n\n  let translatedCoordinate = coordinate;\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    const x = coordinate[0];\n    if (x < projectionExtent[0] || x > projectionExtent[2]) {\n      const worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n      translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n    }\n  }\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n      const layerRenderer = this.getLayerRenderer(layer);\n      if (layer.getSource()) {\n        result = layerRenderer.forEachFeatureAtCoordinate(\n          layer.getSource().getWrapX() ? translatedCoordinate : coordinate,\n          frameState, hitTolerance, forEachFeatureAtCoordinate, thisArg);\n      }\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @abstract\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nMapRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg,\n  layerFilter, thisArg2) {};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n * @return {boolean} Is there a feature at the given coordinate?\n * @template U\n */\nMapRenderer.prototype.hasFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n  const hasFeature = this.forEachFeatureAtCoordinate(\n    coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n  return hasFeature !== undefined;\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @protected\n * @return {module:ol/renderer/Layer} Layer renderer.\n */\nMapRenderer.prototype.getLayerRenderer = function(layer) {\n  const layerKey = getUid(layer).toString();\n  if (layerKey in this.layerRenderers_) {\n    return this.layerRenderers_[layerKey];\n  } else {\n    let renderer;\n    for (let i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n      const candidate = this.layerRendererConstructors_[i];\n      if (candidate['handles'](layer)) {\n        renderer = candidate['create'](this, layer);\n        break;\n      }\n    }\n    if (renderer) {\n      this.layerRenderers_[layerKey] = renderer;\n      this.layerRendererListeners_[layerKey] = listen(renderer,\n        EventType.CHANGE, this.handleLayerRendererChange_, this);\n    } else {\n      throw new Error('Unable to create renderer for layer: ' + layer.getType());\n    }\n    return renderer;\n  }\n};\n\n\n/**\n * @param {string} layerKey Layer key.\n * @protected\n * @return {module:ol/renderer/Layer} Layer renderer.\n */\nMapRenderer.prototype.getLayerRendererByKey = function(layerKey) {\n  return this.layerRenderers_[layerKey];\n};\n\n\n/**\n * @protected\n * @return {Object.<string, module:ol/renderer/Layer>} Layer renderers.\n */\nMapRenderer.prototype.getLayerRenderers = function() {\n  return this.layerRenderers_;\n};\n\n\n/**\n * @return {module:ol/PluggableMap} Map.\n */\nMapRenderer.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Handle changes in a layer renderer.\n * @private\n */\nMapRenderer.prototype.handleLayerRendererChange_ = function() {\n  this.map_.render();\n};\n\n\n/**\n * @param {string} layerKey Layer key.\n * @return {module:ol/renderer/Layer} Layer renderer.\n * @private\n */\nMapRenderer.prototype.removeLayerRendererByKey_ = function(layerKey) {\n  const layerRenderer = this.layerRenderers_[layerKey];\n  delete this.layerRenderers_[layerKey];\n\n  unlistenByKey(this.layerRendererListeners_[layerKey]);\n  delete this.layerRendererListeners_[layerKey];\n\n  return layerRenderer;\n};\n\n\n/**\n * Render.\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nMapRenderer.prototype.renderFrame = UNDEFINED;\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nMapRenderer.prototype.removeUnusedLayerRenderers_ = function(map, frameState) {\n  for (const layerKey in this.layerRenderers_) {\n    if (!frameState || !(layerKey in frameState.layerStates)) {\n      this.removeLayerRendererByKey_(layerKey).dispose();\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n */\nMapRenderer.prototype.scheduleExpireIconCache = function(frameState) {\n  frameState.postRenderFunctions.push(/** @type {module:ol/PluggableMap~PostRenderFunction} */ (expireIconCache));\n};\n\n\n/**\n * @param {!module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n */\nMapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function(frameState) {\n  for (const layerKey in this.layerRenderers_) {\n    if (!(layerKey in frameState.layerStates)) {\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n      );\n      return;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/layer/Layer~State} state1 First layer state.\n * @param {module:ol/layer/Layer~State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {inherits} from '../../index.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array.<module:ol/renderer/Layer>}\n */\nexport const layerRendererConstructors = [];\n\n\n/**\n * @constructor\n * @extends {module:ol/renderer/Map}\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nconst CanvasMapRenderer = function(map) {\n  MapRenderer.call(this, map);\n\n  const container = map.getViewport();\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n\n  this.canvas_.style.width = '100%';\n  this.canvas_.style.height = '100%';\n  this.canvas_.style.display = 'block';\n  this.canvas_.className = CLASS_UNSELECTABLE;\n  container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = createTransform();\n\n};\n\ninherits(CanvasMapRenderer, MapRenderer);\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nCanvasMapRenderer.prototype.dispatchComposeEvent_ = function(type, frameState) {\n  const map = this.getMap();\n  const context = this.context_;\n  if (map.hasListener(type)) {\n    const extent = frameState.extent;\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n\n    const transform = this.getTransform(frameState);\n\n    const vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n      extent, transform, rotation);\n    const composeEvent = new RenderEvent(type, vectorContext,\n      frameState, context, null);\n    map.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n * @return {!module:ol/transform~Transform} Transform.\n */\nCanvasMapRenderer.prototype.getTransform = function(frameState) {\n  const viewState = frameState.viewState;\n  const dx1 = this.canvas_.width / 2;\n  const dy1 = this.canvas_.height / 2;\n  const sx = frameState.pixelRatio / viewState.resolution;\n  const sy = -sx;\n  const angle = -viewState.rotation;\n  const dx2 = -viewState.center[0];\n  const dy2 = -viewState.center[1];\n  return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.renderFrame = function(frameState) {\n\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.canvas_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const context = this.context_;\n  const pixelRatio = frameState.pixelRatio;\n  const width = Math.round(frameState.size[0] * pixelRatio);\n  const height = Math.round(frameState.size[1] * pixelRatio);\n  if (this.canvas_.width != width || this.canvas_.height != height) {\n    this.canvas_.width = width;\n    this.canvas_.height = height;\n  } else {\n    context.clearRect(0, 0, width, height);\n  }\n\n  const rotation = frameState.viewState.rotation;\n\n  this.calculateMatrices2D(frameState);\n\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n\n  const layerStatesArray = frameState.layerStatesArray;\n  stableSort(layerStatesArray, sortByZIndex);\n\n  if (rotation) {\n    context.save();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n\n  const viewResolution = frameState.viewState.resolution;\n  let i, ii, layer, layerRenderer, layerState;\n  for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    layerState = layerStatesArray[i];\n    layer = layerState.layer;\n    layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this.getLayerRenderer(layer));\n    if (!visibleAtResolution(layerState, viewResolution) ||\n        layerState.sourceState != SourceState.READY) {\n      continue;\n    }\n    if (layerRenderer.prepareFrame(frameState, layerState)) {\n      layerRenderer.composeFrame(frameState, layerState, context);\n    }\n  }\n\n  if (rotation) {\n    context.restore();\n  }\n\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n  if (!this.renderedVisible_) {\n    this.canvas_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n  this.scheduleRemoveUnusedLayerRenderers(frameState);\n  this.scheduleExpireIconCache(frameState);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg,\n  layerFilter, thisArg2) {\n  let result;\n  const viewState = frameState.viewState;\n  const viewResolution = viewState.resolution;\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n\n  const coordinate = applyTransform(\n    frameState.pixelToCoordinateTransform, pixel.slice());\n\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n      const layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this.getLayerRenderer(layer));\n      result = layerRenderer.forEachLayerAtCoordinate(\n        coordinate, frameState, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.registerLayerRenderers = function(constructors) {\n  MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n  for (let i = 0, ii = constructors.length; i < ii; ++i) {\n    const ctor = constructors[i];\n    if (!includes(layerRendererConstructors, ctor)) {\n      layerRendererConstructors.push(ctor);\n    }\n  }\n};\n\nexport default CanvasMapRenderer;\n","/**\n * @module ol/renderer/Layer\n */\nimport {getUid, inherits} from '../index.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport SourceState from '../source/State.js';\n\n/**\n * @constructor\n * @extends {module:ol/Observable}\n * @param {module:ol/layer/Layer} layer Layer.\n * @struct\n */\nconst LayerRenderer = function(layer) {\n\n  Observable.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/layer/Layer}\n   */\n  this.layer_ = layer;\n\n\n};\n\ninherits(LayerRenderer, Observable);\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer): T}\n *     callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T\n */\nLayerRenderer.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {boolean} Is there a feature at the given coordinate?\n */\nLayerRenderer.prototype.hasFeatureAtCoordinate = FALSE;\n\n\n/**\n * Create a function that adds loaded tiles to the tile lookup.\n * @param {module:ol/source/Tile} source Tile source.\n * @param {module:ol/proj/Projection} projection Projection of the tiles.\n * @param {Object.<number, Object.<string, module:ol/Tile>>} tiles Lookup of loaded tiles by zoom level.\n * @return {function(number, module:ol/TileRange):boolean} A function that can be\n *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n * @protected\n */\nLayerRenderer.prototype.createLoadedTileFinder = function(source, projection, tiles) {\n  return (\n    /**\n     * @param {number} zoom Zoom level.\n     * @param {module:ol/TileRange} tileRange Tile range.\n     * @return {boolean} The tile range is fully loaded.\n     */\n    function(zoom, tileRange) {\n      function callback(tile) {\n        if (!tiles[zoom]) {\n          tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n      }\n      return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n    }\n  );\n};\n\n\n/**\n * @return {module:ol/layer/Layer} Layer.\n */\nLayerRenderer.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * Handle changes in image state.\n * @param {module:ol/events/Event} event Image change event.\n * @private\n */\nLayerRenderer.prototype.handleImageChange_ = function(event) {\n  const image = /** @type {module:ol/Image} */ (event.target);\n  if (image.getState() === ImageState.LOADED) {\n    this.renderIfReadyAndVisible();\n  }\n};\n\n\n/**\n * Load the image if not already loaded, and register the image change\n * listener if needed.\n * @param {module:ol/ImageBase} image Image.\n * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n * @protected\n */\nLayerRenderer.prototype.loadImage = function(image) {\n  let imageState = image.getState();\n  if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n    listen(image, EventType.CHANGE, this.handleImageChange_, this);\n  }\n  if (imageState == ImageState.IDLE) {\n    image.load();\n    imageState = image.getState();\n  }\n  return imageState == ImageState.LOADED;\n};\n\n\n/**\n * @protected\n */\nLayerRenderer.prototype.renderIfReadyAndVisible = function() {\n  const layer = this.getLayer();\n  if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @protected\n */\nLayerRenderer.prototype.scheduleExpireCache = function(frameState, tileSource) {\n  if (tileSource.canExpireCache()) {\n    /**\n     * @param {module:ol/source/Tile} tileSource Tile source.\n     * @param {module:ol/PluggableMap} map Map.\n     * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function(tileSource, map, frameState) {\n      const tileSourceKey = getUid(tileSource).toString();\n      if (tileSourceKey in frameState.usedTiles) {\n        tileSource.expireCache(frameState.viewState.projection,\n          frameState.usedTiles[tileSourceKey]);\n      }\n    }.bind(null, tileSource);\n\n    frameState.postRenderFunctions.push(\n      /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n    );\n  }\n};\n\n\n/**\n * @param {!Object.<string, !Object.<string, module:ol/TileRange>>} usedTiles Used tiles.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @param {number} z Z.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @protected\n */\nLayerRenderer.prototype.updateUsedTiles = function(usedTiles, tileSource, z, tileRange) {\n  // FIXME should we use tilesToDrawByZ instead?\n  const tileSourceKey = getUid(tileSource).toString();\n  const zKey = z.toString();\n  if (tileSourceKey in usedTiles) {\n    if (zKey in usedTiles[tileSourceKey]) {\n      usedTiles[tileSourceKey][zKey].extend(tileRange);\n    } else {\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  } else {\n    usedTiles[tileSourceKey] = {};\n    usedTiles[tileSourceKey][zKey] = tileRange;\n  }\n};\n\n\n/**\n * Manage tile pyramid.\n * This function performs a number of functions related to the tiles at the\n * current zoom and lower zoom levels:\n * - registers idle tiles in frameState.wantedTiles so that they are not\n *   discarded by the tile queue\n * - enqueues missing tiles\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} currentZ Current Z.\n * @param {number} preload Load low resolution tiles up to 'preload' levels.\n * @param {function(this: T, module:ol/Tile)=} opt_tileCallback Tile callback.\n * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n * @protected\n * @template T\n */\nLayerRenderer.prototype.manageTilePyramid = function(\n  frameState, tileSource, tileGrid, pixelRatio, projection, extent,\n  currentZ, preload, opt_tileCallback, opt_this) {\n  const tileSourceKey = getUid(tileSource).toString();\n  if (!(tileSourceKey in frameState.wantedTiles)) {\n    frameState.wantedTiles[tileSourceKey] = {};\n  }\n  const wantedTiles = frameState.wantedTiles[tileSourceKey];\n  const tileQueue = frameState.tileQueue;\n  const minZoom = tileGrid.getMinZoom();\n  let tile, tileRange, tileResolution, x, y, z;\n  for (z = minZoom; z <= currentZ; ++z) {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n    tileResolution = tileGrid.getResolution(z);\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (currentZ - z <= preload) {\n          tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n          if (tile.getState() == TileState.IDLE) {\n            wantedTiles[tile.getKey()] = true;\n            if (!tileQueue.isKeyQueued(tile.getKey())) {\n              tileQueue.enqueue([tile, tileSourceKey,\n                tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n            }\n          }\n          if (opt_tileCallback !== undefined) {\n            opt_tileCallback.call(opt_this, tile);\n          }\n        } else {\n          tileSource.useTile(z, x, y, projection);\n        }\n      }\n    }\n  }\n};\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {inherits} from '../../index.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/renderer/Layer}\n * @param {module:ol/layer/Layer} layer Layer.\n */\nconst CanvasLayerRenderer = function(layer) {\n\n  LayerRenderer.call(this, layer);\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.renderedResolution;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = createTransform();\n\n};\n\ninherits(CanvasLayerRenderer, LayerRenderer);\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/extent~Extent} extent Clip extent.\n * @protected\n */\nCanvasLayerRenderer.prototype.clip = function(context, frameState, extent) {\n  const pixelRatio = frameState.pixelRatio;\n  const width = frameState.size[0] * pixelRatio;\n  const height = frameState.size[1] * pixelRatio;\n  const rotation = frameState.viewState.rotation;\n  const topLeft = getTopLeft(/** @type {module:ol/extent~Extent} */ (extent));\n  const topRight = getTopRight(/** @type {module:ol/extent~Extent} */ (extent));\n  const bottomRight = getBottomRight(/** @type {module:ol/extent~Extent} */ (extent));\n  const bottomLeft = getBottomLeft(/** @type {module:ol/extent~Extent} */ (extent));\n\n  applyTransform(frameState.coordinateToPixelTransform, topLeft);\n  applyTransform(frameState.coordinateToPixelTransform, topRight);\n  applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n  applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n  context.save();\n  rotateAtOffset(context, -rotation, width / 2, height / 2);\n  context.beginPath();\n  context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n  context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n  context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n  context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n  context.clip();\n  rotateAtOffset(context, rotation, width / 2, height / 2);\n};\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @private\n */\nCanvasLayerRenderer.prototype.dispatchComposeEvent_ = function(type, context, frameState, opt_transform) {\n  const layer = this.getLayer();\n  if (layer.hasListener(type)) {\n    const width = frameState.size[0] * frameState.pixelRatio;\n    const height = frameState.size[1] * frameState.pixelRatio;\n    const rotation = frameState.viewState.rotation;\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    const transform = opt_transform !== undefined ?\n      opt_transform : this.getTransform(frameState, 0);\n    const render = new CanvasImmediateRenderer(\n      context, frameState.pixelRatio, frameState.extent, transform,\n      frameState.viewState.rotation);\n    const composeEvent = new RenderEvent(type, render, frameState,\n      context, null);\n    layer.dispatchEvent(composeEvent);\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nCanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function(coordinate, frameState, callback, thisArg) {\n  const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n\n  if (hasFeature) {\n    return callback.call(thisArg, this.getLayer(), null);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.postCompose = function(context, frameState, layerState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.preCompose = function(context, frameState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.dispatchRenderEvent = function(context, frameState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} offsetX Offset on the x-axis in view coordinates.\n * @protected\n * @return {!module:ol/transform~Transform} Transform.\n */\nCanvasLayerRenderer.prototype.getTransform = function(frameState, offsetX) {\n  const viewState = frameState.viewState;\n  const pixelRatio = frameState.pixelRatio;\n  const dx1 = pixelRatio * frameState.size[0] / 2;\n  const dy1 = pixelRatio * frameState.size[1] / 2;\n  const sx = pixelRatio / viewState.resolution;\n  const sy = -sx;\n  const angle = -viewState.rotation;\n  const dx2 = -viewState.center[0] + offsetX;\n  const dy2 = -viewState.center[1];\n  return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n};\n\n\n/**\n * @abstract\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {CanvasRenderingContext2D} context Context.\n */\nCanvasLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {};\n\n/**\n * @abstract\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @return {boolean} whether composeFrame should be called.\n */\nCanvasLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {};\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {inherits} from '../../index.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {UNDEFINED} from '../../functions.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/renderer/canvas/Layer}\n * @param {module:ol/layer/Layer} layer Layer.\n */\nconst IntermediateCanvasRenderer = function(layer) {\n\n  CanvasLayerRenderer.call(this, layer);\n\n  /**\n   * @protected\n   * @type {module:ol/transform~Transform}\n   */\n  this.coordinateToCanvasPixelTransform = createTransform();\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitCanvasContext_ = null;\n\n};\n\ninherits(IntermediateCanvasRenderer, CanvasLayerRenderer);\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n\n  this.preCompose(context, frameState);\n\n  const image = this.getImage();\n  if (image) {\n\n    // clipped rendering if layer extent is set\n    const extent = layerState.extent;\n    const clipped = extent !== undefined &&\n        !containsExtent(extent, frameState.extent) &&\n        intersects(extent, frameState.extent);\n    if (clipped) {\n      this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (extent));\n    }\n\n    const imageTransform = this.getImageTransform();\n    // for performance reasons, context.save / context.restore is not used\n    // to save and restore the transformation matrix and the opacity.\n    // see http://jsperf.com/context-save-restore-versus-variable\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n\n    // for performance reasons, context.setTransform is only used\n    // when the view is rotated. see http://jsperf.com/canvas-transform\n    const dx = imageTransform[4];\n    const dy = imageTransform[5];\n    const dw = image.width * imageTransform[0];\n    const dh = image.height * imageTransform[3];\n    context.drawImage(image, 0, 0, +image.width, +image.height,\n      Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n    context.globalAlpha = alpha;\n\n    if (clipped) {\n      context.restore();\n    }\n  }\n\n  this.postCompose(context, frameState, layerState);\n};\n\n\n/**\n * @abstract\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Canvas.\n */\nIntermediateCanvasRenderer.prototype.getImage = function() {};\n\n\n/**\n * @abstract\n * @return {!module:ol/transform~Transform} Image transform.\n */\nIntermediateCanvasRenderer.prototype.getImageTransform = function() {};\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const layer = this.getLayer();\n  const source = layer.getSource();\n  const resolution = frameState.viewState.resolution;\n  const rotation = frameState.viewState.rotation;\n  const skippedFeatureUids = frameState.skippedFeatureUids;\n  return source.forEachFeatureAtCoordinate(\n    coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function(feature) {\n      return callback.call(thisArg, feature, layer);\n    });\n};\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function(coordinate, frameState, callback, thisArg) {\n  if (!this.getImage()) {\n    return undefined;\n  }\n\n  if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n    // for ImageCanvas sources use the original hit-detection logic,\n    // so that for example also transparent polygons are detected\n    return CanvasLayerRenderer.prototype.forEachLayerAtCoordinate.apply(this, arguments);\n  } else {\n    const pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    const imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(),  imageData);\n    } else {\n      return undefined;\n    }\n  }\n};\nexport default IntermediateCanvasRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {inherits} from '../../index.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/IntermediateCanvas}\n * @param {module:ol/layer/Image|module:ol/layer/Vector} imageLayer Image or vector layer.\n * @api\n */\nconst CanvasImageLayerRenderer = function(imageLayer) {\n\n  IntermediateCanvasRenderer.call(this, imageLayer);\n\n  /**\n   * @private\n   * @type {?module:ol/ImageBase}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.imageTransform_ = createTransform();\n\n  /**\n   * @type {!Array.<string>}\n   */\n  this.skippedFeatures_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/renderer/canvas/VectorLayer}\n   */\n  this.vectorRenderer_ = null;\n\n  if (imageLayer.getType() === LayerType.VECTOR) {\n    for (let i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n      const ctor = layerRendererConstructors[i];\n      if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n        this.vectorRenderer_ = new ctor(imageLayer);\n        break;\n      }\n    }\n  }\n\n};\n\ninherits(CanvasImageLayerRenderer, IntermediateCanvasRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {module:ol/layer/Vector} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/ImageLayer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {module:ol/layer/Image} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.disposeInternal = function() {\n  if (this.vectorRenderer_) {\n    this.vectorRenderer_.dispose();\n  }\n  IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.getImage = function() {\n  return !this.image_ ? null : this.image_.getImage();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.getImageTransform = function() {\n  return this.imageTransform_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n\n  const pixelRatio = frameState.pixelRatio;\n  const size = frameState.size;\n  const viewState = frameState.viewState;\n  const viewCenter = viewState.center;\n  const viewResolution = viewState.resolution;\n\n  let image;\n  const imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n  const imageSource = imageLayer.getSource();\n\n  const hints = frameState.viewHints;\n\n  const vectorRenderer = this.vectorRenderer_;\n  let renderedExtent = frameState.extent;\n  if (!vectorRenderer && layerState.extent !== undefined) {\n    renderedExtent = getIntersection(renderedExtent, layerState.extent);\n  }\n\n  if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)) {\n    let projection = viewState.projection;\n    if (!ENABLE_RASTER_REPROJECTION) {\n      const sourceProjection = imageSource.getProjection();\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n    }\n    let skippedFeatures = this.skippedFeatures_;\n    if (vectorRenderer) {\n      const context = vectorRenderer.context;\n      const imageFrameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, frameState, {\n        size: [\n          getWidth(renderedExtent) / viewResolution,\n          getHeight(renderedExtent) / viewResolution\n        ],\n        viewState: /** @type {module:ol/View~State} */ (assign({}, frameState.viewState, {\n          rotation: 0\n        }))\n      }));\n      const newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n      image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n        if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n            (vectorRenderer.replayGroupChanged ||\n            !equals(skippedFeatures, newSkippedFeatures))) {\n          context.canvas.width = imageFrameState.size[0] * pixelRatio;\n          context.canvas.height = imageFrameState.size[1] * pixelRatio;\n          vectorRenderer.compose(context, imageFrameState, layerState);\n          skippedFeatures = newSkippedFeatures;\n          callback();\n        }\n      });\n    } else {\n      image = imageSource.getImage(\n        renderedExtent, viewResolution, pixelRatio, projection);\n    }\n    if (image && this.loadImage(image)) {\n      this.image_ = image;\n      this.skippedFeatures_ = skippedFeatures;\n    }\n  }\n\n  if (this.image_) {\n    image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const scale = pixelRatio * imageResolution /\n        (viewResolution * imagePixelRatio);\n    const transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n      imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n    this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n  }\n\n  return !!this.image_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (this.vectorRenderer_) {\n    return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n  } else {\n    return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, thisArg);\n  }\n};\n\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n *\n * @constructor\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @struct\n */\nconst TileRange = function(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/TileRange=} tileRange TileRange.\n * @return {module:ol/TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function(tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function(tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function(x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function(tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function(tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function() {\n  return this.maxY - this.minY + 1;\n};\n\n\n/**\n * @return {module:ol/size~Size} Size.\n */\nTileRange.prototype.getSize = function() {\n  return [this.getWidth(), this.getHeight()];\n};\n\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function() {\n  return this.maxX - this.minX + 1;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function(tileRange) {\n  return this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY;\n};\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid, inherits} from '../../index.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/IntermediateCanvas}\n * @param {module:ol/layer/Tile|module:ol/layer/VectorTile} tileLayer Tile layer.\n * @api\n */\nconst CanvasTileLayerRenderer = function(tileLayer) {\n\n  IntermediateCanvasRenderer.call(this, tileLayer);\n\n  /**\n   * @protected\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = this.context === null ? null : createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.oversampling_;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedExtent_ = null;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.renderedRevision;\n\n  /**\n   * @protected\n   * @type {!Array.<module:ol/Tile>}\n   */\n  this.renderedTiles = [];\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.newTiles_ = false;\n\n  /**\n   * @protected\n   * @type {module:ol/extent~Extent}\n   */\n  this.tmpExtent = createEmpty();\n\n  /**\n   * @private\n   * @type {module:ol/TileRange}\n   */\n  this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.imageTransform_ = createTransform();\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.zDirection = 0;\n\n};\n\ninherits(CanvasTileLayerRenderer, IntermediateCanvasRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/TileLayer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {module:ol/layer/Tile} */ (layer));\n};\n\n\n/**\n * @private\n * @param {module:ol/Tile} tile Tile.\n * @return {boolean} Tile is drawable.\n */\nCanvasTileLayerRenderer.prototype.isDrawableTile_ = function(tile) {\n  const tileState = tile.getState();\n  const useInterimTilesOnError = this.getLayer().getUseInterimTilesOnError();\n  return tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      tileState == TileState.ERROR && !useInterimTilesOnError;\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n */\nCanvasTileLayerRenderer.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const source = /** @type {module:ol/source/Tile} */ (layer.getSource());\n  let tile = source.getTile(z, x, y, pixelRatio, projection);\n  if (tile.getState() == TileState.ERROR) {\n    if (!layer.getUseInterimTilesOnError()) {\n      // When useInterimTilesOnError is false, we consider the error tile as loaded.\n      tile.setState(TileState.LOADED);\n    } else if (layer.getPreload() > 0) {\n      // Preloaded tiles for lower resolutions might have finished loading.\n      this.newTiles_ = true;\n    }\n  }\n  if (!this.isDrawableTile_(tile)) {\n    tile = tile.getInterimTile();\n  }\n  return tile;\n};\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n\n  const pixelRatio = frameState.pixelRatio;\n  const size = frameState.size;\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const viewResolution = viewState.resolution;\n  const viewCenter = viewState.center;\n\n  const tileLayer = this.getLayer();\n  const tileSource = /** @type {module:ol/source/Tile} */ (tileLayer.getSource());\n  const sourceRevision = tileSource.getRevision();\n  const tileGrid = tileSource.getTileGridForProjection(projection);\n  const z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n  const tileResolution = tileGrid.getResolution(z);\n  let oversampling = Math.round(viewResolution / tileResolution) || 1;\n  let extent = frameState.extent;\n\n  if (layerState.extent !== undefined) {\n    extent = getIntersection(extent, layerState.extent);\n  }\n  if (isEmpty(extent)) {\n    // Return false to prevent the rendering of the layer.\n    return false;\n  }\n\n  const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  const imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n  const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n  /**\n   * @type {Object.<number, Object.<string, module:ol/Tile>>}\n   */\n  const tilesToDrawByZ = {};\n  tilesToDrawByZ[z] = {};\n\n  const findLoadedTiles = this.createLoadedTileFinder(\n    tileSource, projection, tilesToDrawByZ);\n\n  const hints = frameState.viewHints;\n  const animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n  const tmpExtent = this.tmpExtent;\n  const tmpTileRange = this.tmpTileRange_;\n  this.newTiles_ = false;\n  let tile, x, y;\n  for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n    for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n      if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n        continue;\n      }\n      tile = this.getTile(z, x, y, pixelRatio, projection);\n      if (this.isDrawableTile_(tile)) {\n        const uid = getUid(this);\n        if (tile.getState() == TileState.LOADED) {\n          tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n          const inTransition = tile.inTransition(uid);\n          if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n            this.newTiles_ = true;\n          }\n        }\n        if (tile.getAlpha(uid, frameState.time) === 1) {\n          // don't look for alt tiles if alpha is 1\n          continue;\n        }\n      }\n\n      const childTileRange = tileGrid.getTileCoordChildTileRange(\n        tile.tileCoord, tmpTileRange, tmpExtent);\n      let covered = false;\n      if (childTileRange) {\n        covered = findLoadedTiles(z + 1, childTileRange);\n      }\n      if (!covered) {\n        tileGrid.forEachTileCoordParentTileRange(\n          tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n      }\n\n    }\n  }\n\n  const renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n  if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n    this.newTiles_ ||\n        !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n        this.renderedRevision != sourceRevision ||\n        oversampling != this.oversampling_ ||\n        !animatingOrInteracting && renderedResolution != this.renderedResolution\n  )) {\n\n    const context = this.context;\n    if (context) {\n      const tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n      const width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n      const height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n      const canvas = context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        this.oversampling_ = oversampling;\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n          context.clearRect(0, 0, width, height);\n        }\n        oversampling = this.oversampling_;\n      }\n    }\n\n    this.renderedTiles.length = 0;\n    /** @type {Array.<number>} */\n    const zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(function(a, b) {\n      if (a === z) {\n        return 1;\n      } else if (b === z) {\n        return -1;\n      } else {\n        return a > b ? 1 : a < b ? -1 : 0;\n      }\n    });\n    let currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n    let tileExtent, tileGutter, tilesToDraw, w, h;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      currentZ = zs[i];\n      currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n      currentResolution = tileGrid.getResolution(currentZ);\n      currentScale = currentResolution / tileResolution;\n      tileGutter = tilePixelRatio * tileSource.getGutter(projection);\n      tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        tile = tilesToDraw[tileCoordKey];\n        tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n        x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n        y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n        w = currentTilePixelSize[0] * currentScale / oversampling;\n        h = currentTilePixelSize[1] * currentScale / oversampling;\n        this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n        this.renderedTiles.push(tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    this.renderedExtent_ = imageExtent;\n  }\n\n  const scale = this.renderedResolution / viewResolution;\n  const transform = composeTransform(this.imageTransform_,\n    pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n    scale, scale,\n    0,\n    (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n    (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n  composeTransform(this.coordinateToCanvasPixelTransform,\n    pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n    pixelRatio / viewResolution, -pixelRatio / viewResolution,\n    0,\n    -viewCenter[0], -viewCenter[1]);\n\n\n  this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n  this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n    projection, extent, z, tileLayer.getPreload());\n  this.scheduleExpireCache(frameState, tileSource);\n\n  return this.renderedTiles.length > 0;\n};\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} x Left of the tile.\n * @param {number} y Top of the tile.\n * @param {number} w Width of the tile.\n * @param {number} h Height of the tile.\n * @param {number} gutter Tile gutter.\n * @param {boolean} transition Apply an alpha transition.\n */\nCanvasTileLayerRenderer.prototype.drawTileImage = function(tile, frameState, layerState, x, y, w, h, gutter, transition) {\n  const image = tile.getImage(this.getLayer());\n  if (!image) {\n    return;\n  }\n  const uid = getUid(this);\n  const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n  if (alpha === 1 && !this.getLayer().getSource().getOpaque(frameState.viewState.projection)) {\n    this.context.clearRect(x, y, w, h);\n  }\n  const alphaChanged = alpha !== this.context.globalAlpha;\n  if (alphaChanged) {\n    this.context.save();\n    this.context.globalAlpha = alpha;\n  }\n  this.context.drawImage(image, gutter, gutter,\n    image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n  if (alphaChanged) {\n    this.context.restore();\n  }\n  if (alpha !== 1) {\n    frameState.animate = true;\n  } else if (transition) {\n    tile.endTransition(uid);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.getImage = function() {\n  const context = this.context;\n  return context ? context.canvas : null;\n};\n\n\n/**\n * @function\n * @return {module:ol/layer/Tile|module:ol/layer/VectorTile}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.getImageTransform = function() {\n  return this.imageTransform_;\n};\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/render/ReplayGroup\n */\n/**\n * Base class for replay groups.\n * @constructor\n * @abstract\n */\nconst ReplayGroup = function() {};\n\n\n/**\n * @abstract\n * @param {number|undefined} zIndex Z index.\n * @param {module:ol/render/ReplayType} replayType Replay type.\n * @return {module:ol/render/VectorContext} Replay.\n */\nReplayGroup.prototype.getReplay = function(zIndex, replayType) {};\n\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function() {};\nexport default ReplayGroup;\n","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array.<Array.<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  const result = [];\n\n  // Keep text upright\n  const reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  const numChars = text.length;\n\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let segmentM = 0;\n  let segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  let chunk = '';\n  let chunkLength = 0;\n  let data, index, previousAngle;\n  for (let i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    const char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    const charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    const charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    const segmentPos = charM - segmentM;\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    const interpolate = segmentPos / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n","/**\n * @module ol/render/replay\n */\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * @const\n * @type {Array.<module:ol/render/ReplayType>}\n */\nexport const ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid, inherits} from '../../index.js';\nimport {UNDEFINED} from '../../functions.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/VectorContext}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasReplay = function(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  VectorContext.call(this);\n\n  /**\n   * @type {?}\n   */\n  this.declutterTree = declutterTree;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.tolerance = tolerance;\n\n  /**\n   * @protected\n   * @const\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxExtent = maxExtent;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.overlaps = overlaps;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.pixelRatio = pixelRatio;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxLineWidth = 0;\n\n  /**\n   * @protected\n   * @const\n   * @type {number}\n   */\n  this.resolution = resolution;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.alignFill_;\n\n  /**\n   * @private\n   * @type {Array.<*>}\n   */\n  this.beginGeometryInstruction1_ = null;\n\n  /**\n   * @private\n   * @type {Array.<*>}\n   */\n  this.beginGeometryInstruction2_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.bufferedMaxExtent_ = null;\n\n  /**\n   * @protected\n   * @type {Array.<*>}\n   */\n  this.instructions = [];\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.coordinates = [];\n\n  /**\n   * @private\n   * @type {!Object.<number,module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>>}\n   */\n  this.coordinateCache_ = {};\n\n  /**\n   * @private\n   * @type {!module:ol/transform~Transform}\n   */\n  this.renderedTransform_ = createTransform();\n\n  /**\n   * @protected\n   * @type {Array.<*>}\n   */\n  this.hitDetectionInstructions = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.pixelCoordinates_ = null;\n\n  /**\n   * @protected\n   * @type {module:ol/render/canvas~FillStrokeState}\n   */\n  this.state = /** @type {module:ol/render/canvas~FillStrokeState} */ ({});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.viewRotation_ = 0;\n\n};\n\ninherits(CanvasReplay, VectorContext);\n\n\n/**\n * @type {module:ol/extent~Extent}\n */\nconst tmpExtent = createEmpty();\n\n\n/**\n * @type {!module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/coordinate~Coordinate} p1 1st point of the background box.\n * @param {module:ol/coordinate~Coordinate} p2 2nd point of the background box.\n * @param {module:ol/coordinate~Coordinate} p3 3rd point of the background box.\n * @param {module:ol/coordinate~Coordinate} p4 4th point of the background box.\n * @param {Array.<*>} fillInstruction Fill instruction.\n * @param {Array.<*>} strokeInstruction Stroke instruction.\n */\nCanvasReplay.prototype.replayTextBackground_ = function(context, p1, p2, p3, p4,\n  fillInstruction, strokeInstruction) {\n  context.beginPath();\n  context.moveTo.apply(context, p1);\n  context.lineTo.apply(context, p2);\n  context.lineTo.apply(context, p3);\n  context.lineTo.apply(context, p4);\n  context.lineTo.apply(context, p1);\n  if (fillInstruction) {\n    this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n    this.fill_(context);\n  }\n  if (strokeInstruction) {\n    this.setStrokeStyle_(context, /** @type {Array.<*>} */ (strokeInstruction));\n    context.stroke();\n  }\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} anchorX Anchor X.\n * @param {number} anchorY Anchor Y.\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n * @param {number} height Height.\n * @param {number} opacity Opacity.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} rotation Rotation.\n * @param {number} scale Scale.\n * @param {boolean} snapToPixel Snap to pixel.\n * @param {number} width Width.\n * @param {Array.<number>} padding Padding.\n * @param {Array.<*>} fillInstruction Fill instruction.\n * @param {Array.<*>} strokeInstruction Stroke instruction.\n */\nCanvasReplay.prototype.replayImage_ = function(context, x, y, image,\n  anchorX, anchorY, declutterGroup, height, opacity, originX, originY,\n  rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n  const fillStroke = fillInstruction || strokeInstruction;\n  anchorX *= scale;\n  anchorY *= scale;\n  x -= anchorX;\n  y -= anchorY;\n\n  const w = (width + originX > image.width) ? image.width - originX : width;\n  const h = (height + originY > image.height) ? image.height - originY : height;\n  const boxW = padding[3] + w * scale + padding[1];\n  const boxH = padding[0] + h * scale + padding[2];\n  const boxX = x - padding[3];\n  const boxY = y - padding[0];\n\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p1;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p2;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p3;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p4;\n  if (fillStroke || rotation !== 0) {\n    p1 = [boxX, boxY];\n    p2 = [boxX + boxW, boxY];\n    p3 = [boxX + boxW, boxY + boxH];\n    p4 = [boxX, boxY + boxH];\n  }\n\n  let transform = null;\n  if (rotation !== 0) {\n    const centerX = x + anchorX;\n    const centerY = y + anchorY;\n    transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n    createOrUpdateEmpty(tmpExtent);\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n  } else {\n    createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n  }\n  const canvas = context.canvas;\n  const strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n  const intersects =\n      tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n      tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n  if (snapToPixel) {\n    x = Math.round(x);\n    y = Math.round(y);\n  }\n\n  if (declutterGroup) {\n    if (!intersects && declutterGroup[4] == 1) {\n      return;\n    }\n    extend(declutterGroup, tmpExtent);\n    const declutterArgs = intersects ?\n      [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n      null;\n    if (declutterArgs && fillStroke) {\n      declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n    }\n    declutterGroup.push(declutterArgs);\n  } else if (intersects) {\n    if (fillStroke) {\n      this.replayTextBackground_(context, p1, p2, p3, p4,\n        /** @type {Array.<*>} */ (fillInstruction),\n        /** @type {Array.<*>} */ (strokeInstruction));\n    }\n    drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n  }\n};\n\n\n/**\n * @protected\n * @param {Array.<number>} dashArray Dash array.\n * @return {Array.<number>} Dash array with pixel ratio applied\n */\nCanvasReplay.prototype.applyPixelRatio = function(dashArray) {\n  const pixelRatio = this.pixelRatio;\n  return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n    return dash * pixelRatio;\n  });\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} closed Last input coordinate equals first.\n * @param {boolean} skipFirst Skip first coordinate.\n * @protected\n * @return {number} My end.\n */\nCanvasReplay.prototype.appendFlatCoordinates = function(flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n  let myEnd = this.coordinates.length;\n  const extent = this.getBufferedMaxExtent();\n  if (skipFirst) {\n    offset += stride;\n  }\n  const lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const nextCoord = [NaN, NaN];\n  let skipped = true;\n\n  let i, lastRel, nextRel;\n  for (i = offset + stride; i < end; i += stride) {\n    nextCoord[0] = flatCoordinates[i];\n    nextCoord[1] = flatCoordinates[i + 1];\n    nextRel = coordinateRelationship(extent, nextCoord);\n    if (nextRel !== lastRel) {\n      if (skipped) {\n        this.coordinates[myEnd++] = lastCoord[0];\n        this.coordinates[myEnd++] = lastCoord[1];\n      }\n      this.coordinates[myEnd++] = nextCoord[0];\n      this.coordinates[myEnd++] = nextCoord[1];\n      skipped = false;\n    } else if (nextRel === Relationship.INTERSECTING) {\n      this.coordinates[myEnd++] = nextCoord[0];\n      this.coordinates[myEnd++] = nextCoord[1];\n      skipped = false;\n    } else {\n      skipped = true;\n    }\n    lastCoord[0] = nextCoord[0];\n    lastCoord[1] = nextCoord[1];\n    lastRel = nextRel;\n  }\n\n  // Last coordinate equals first or only one point to append:\n  if ((closed && skipped) || i === offset + stride) {\n    this.coordinates[myEnd++] = lastCoord[0];\n    this.coordinates[myEnd++] = lastCoord[1];\n  }\n  return myEnd;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} replayEnds Replay ends.\n * @return {number} Offset.\n */\nCanvasReplay.prototype.drawCustomCoordinates_ = function(flatCoordinates, offset, ends, stride, replayEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    replayEnds.push(replayEnd);\n    offset = end;\n  }\n  return offset;\n};\n\n\n/**\n * @inheritDoc.\n */\nCanvasReplay.prototype.drawCustom = function(geometry, feature, renderer) {\n  this.beginGeometry(geometry, feature);\n  const type = geometry.getType();\n  const stride = geometry.getStride();\n  const replayBegin = this.coordinates.length;\n  let flatCoordinates, replayEnd, replayEnds, replayEndss;\n  let offset;\n  if (type == GeometryType.MULTI_POLYGON) {\n    geometry = /** @type {module:ol/geom/MultiPolygon} */ (geometry);\n    flatCoordinates = geometry.getOrientedFlatCoordinates();\n    replayEndss = [];\n    const endss = geometry.getEndss();\n    offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const myEnds = [];\n      offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n      replayEndss.push(myEnds);\n    }\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n  } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n    replayEnds = [];\n    flatCoordinates = (type == GeometryType.POLYGON) ?\n      /** @type {module:ol/geom/Polygon} */ (geometry).getOrientedFlatCoordinates() :\n      geometry.getFlatCoordinates();\n    offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n      /** @type {module:ol/geom/Polygon|module:ol/geom/MultiLineString} */ (geometry).getEnds(),\n      stride, replayEnds);\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n  } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n    flatCoordinates = geometry.getFlatCoordinates();\n    replayEnd = this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n  } else if (type == GeometryType.POINT) {\n    flatCoordinates = geometry.getFlatCoordinates();\n    this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    replayEnd = this.coordinates.length;\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnd, geometry, renderer]);\n  }\n  this.endGeometry(geometry, feature);\n};\n\n\n/**\n * @protected\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.beginGeometry = function(geometry, feature) {\n  this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n  this.instructions.push(this.beginGeometryInstruction1_);\n  this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n  this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n */\nCanvasReplay.prototype.fill_ = function(context) {\n  if (this.alignFill_) {\n    const origin = applyTransform(this.renderedTransform_, [0, 0]);\n    const repeatSize = 512 * this.pixelRatio;\n    context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n    context.rotate(this.viewRotation_);\n  }\n  context.fill();\n  if (this.alignFill_) {\n    context.setTransform.apply(context, resetTransform);\n  }\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n * @param {Array.<*>} instruction Instruction.\n */\nCanvasReplay.prototype.setStrokeStyle_ = function(context, instruction) {\n  context.strokeStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n  context.lineWidth = /** @type {number} */ (instruction[2]);\n  context.lineCap = /** @type {string} */ (instruction[3]);\n  context.lineJoin = /** @type {string} */ (instruction[4]);\n  context.miterLimit = /** @type {number} */ (instruction[5]);\n  if (CANVAS_LINE_DASH) {\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array.<number>} */ (instruction[6]));\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.renderDeclutter_ = function(declutterGroup, feature) {\n  if (declutterGroup && declutterGroup.length > 5) {\n    const groupCount = declutterGroup[4];\n    if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n      /** @type {module:ol/structs/RBush~Entry} */\n      const box = {\n        minX: /** @type {number} */ (declutterGroup[0]),\n        minY: /** @type {number} */ (declutterGroup[1]),\n        maxX: /** @type {number} */ (declutterGroup[2]),\n        maxY: /** @type {number} */ (declutterGroup[3]),\n        value: feature\n      };\n      if (!this.declutterTree.collides(box)) {\n        this.declutterTree.insert(box);\n        for (let j = 5, jj = declutterGroup.length; j < jj; ++j) {\n          const declutterData = /** @type {Array} */ (declutterGroup[j]);\n          if (declutterData) {\n            if (declutterData.length > 11) {\n              this.replayTextBackground_(declutterData[0],\n                declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                declutterData[11], declutterData[12]);\n            }\n            drawImage.apply(undefined, declutterData);\n          }\n        }\n      }\n      declutterGroup.length = 5;\n      createOrUpdateEmpty(declutterGroup);\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {Array.<*>} instructions Instructions array.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined}\n *     featureCallback Feature callback.\n * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n *     extent.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplay.prototype.replay_ = function(\n  context, transform, skippedFeaturesHash,\n  instructions, featureCallback, opt_hitExtent) {\n  /** @type {Array.<number>} */\n  let pixelCoordinates;\n  if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n    pixelCoordinates = this.pixelCoordinates_;\n  } else {\n    if (!this.pixelCoordinates_) {\n      this.pixelCoordinates_ = [];\n    }\n    pixelCoordinates = transform2D(\n      this.coordinates, 0, this.coordinates.length, 2,\n      transform, this.pixelCoordinates_);\n    transformSetFromArray(this.renderedTransform_, transform);\n  }\n  const skipFeatures = !isEmpty(skippedFeaturesHash);\n  let i = 0; // instruction index\n  const ii = instructions.length; // end of instructions\n  let d = 0; // data index\n  let dd; // end of per-instruction data\n  let anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n  let pendingFill = 0;\n  let pendingStroke = 0;\n  let lastFillInstruction = null;\n  let lastStrokeInstruction = null;\n  const coordinateCache = this.coordinateCache_;\n  const viewRotation = this.viewRotation_;\n\n  const state = /** @type {module:ol/render~State} */ ({\n    context: context,\n    pixelRatio: this.pixelRatio,\n    resolution: this.resolution,\n    rotation: viewRotation\n  });\n\n  // When the batch size gets too big, performance decreases. 200 is a good\n  // balance between batch size and number of fill/stroke instructions.\n  const batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n  let /** @type {module:ol/Feature|module:ol/render/Feature} */ feature;\n  let x, y;\n  while (i < ii) {\n    const instruction = instructions[i];\n    const type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n    switch (type) {\n      case CanvasInstruction.BEGIN_GEOMETRY:\n        feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n        if ((skipFeatures &&\n            skippedFeaturesHash[getUid(feature).toString()]) ||\n            !feature.getGeometry()) {\n          i = /** @type {number} */ (instruction[2]);\n        } else if (opt_hitExtent !== undefined && !intersects(\n          opt_hitExtent, feature.getGeometry().getExtent())) {\n          i = /** @type {number} */ (instruction[2]) + 1;\n        } else {\n          ++i;\n        }\n        break;\n      case CanvasInstruction.BEGIN_PATH:\n        if (pendingFill > batchSize) {\n          this.fill_(context);\n          pendingFill = 0;\n        }\n        if (pendingStroke > batchSize) {\n          context.stroke();\n          pendingStroke = 0;\n        }\n        if (!pendingFill && !pendingStroke) {\n          context.beginPath();\n          prevX = prevY = NaN;\n        }\n        ++i;\n        break;\n      case CanvasInstruction.CIRCLE:\n        d = /** @type {number} */ (instruction[1]);\n        const x1 = pixelCoordinates[d];\n        const y1 = pixelCoordinates[d + 1];\n        const x2 = pixelCoordinates[d + 2];\n        const y2 = pixelCoordinates[d + 3];\n        const dx = x2 - x1;\n        const dy = y2 - y1;\n        const r = Math.sqrt(dx * dx + dy * dy);\n        context.moveTo(x1 + r, y1);\n        context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n        ++i;\n        break;\n      case CanvasInstruction.CLOSE_PATH:\n        context.closePath();\n        ++i;\n        break;\n      case CanvasInstruction.CUSTOM:\n        d = /** @type {number} */ (instruction[1]);\n        dd = instruction[2];\n        const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (instruction[3]);\n        const renderer = instruction[4];\n        const fn = instruction.length == 6 ? instruction[5] : undefined;\n        state.geometry = geometry;\n        state.feature = feature;\n        if (!(i in coordinateCache)) {\n          coordinateCache[i] = [];\n        }\n        const coords = coordinateCache[i];\n        if (fn) {\n          fn(pixelCoordinates, d, dd, 2, coords);\n        } else {\n          coords[0] = pixelCoordinates[d];\n          coords[1] = pixelCoordinates[d + 1];\n          coords.length = 2;\n        }\n        renderer(coords, state);\n        ++i;\n        break;\n      case CanvasInstruction.DRAW_IMAGE:\n        d = /** @type {number} */ (instruction[1]);\n        dd = /** @type {number} */ (instruction[2]);\n        image =  /** @type {HTMLCanvasElement|HTMLVideoElement|Image} */\n            (instruction[3]);\n        // Remaining arguments in DRAW_IMAGE are in alphabetical order\n        anchorX = /** @type {number} */ (instruction[4]);\n        anchorY = /** @type {number} */ (instruction[5]);\n        declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[6]);\n        const height = /** @type {number} */ (instruction[7]);\n        const opacity = /** @type {number} */ (instruction[8]);\n        const originX = /** @type {number} */ (instruction[9]);\n        const originY = /** @type {number} */ (instruction[10]);\n        const rotateWithView = /** @type {boolean} */ (instruction[11]);\n        let rotation = /** @type {number} */ (instruction[12]);\n        const scale = /** @type {number} */ (instruction[13]);\n        const snapToPixel = /** @type {boolean} */ (instruction[14]);\n        const width = /** @type {number} */ (instruction[15]);\n\n        let padding, backgroundFill, backgroundStroke;\n        if (instruction.length > 16) {\n          padding = /** @type {Array.<number>} */ (instruction[16]);\n          backgroundFill = /** @type {boolean} */ (instruction[17]);\n          backgroundStroke = /** @type {boolean} */ (instruction[18]);\n        } else {\n          padding = defaultPadding;\n          backgroundFill = backgroundStroke = false;\n        }\n\n        if (rotateWithView) {\n          rotation += viewRotation;\n        }\n        for (; d < dd; d += 2) {\n          this.replayImage_(context,\n            pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n            declutterGroup, height, opacity, originX, originY, rotation, scale,\n            snapToPixel, width, padding,\n            backgroundFill ? /** @type {Array.<*>} */ (lastFillInstruction) : null,\n            backgroundStroke ? /** @type {Array.<*>} */ (lastStrokeInstruction) : null);\n        }\n        this.renderDeclutter_(declutterGroup, feature);\n        ++i;\n        break;\n      case CanvasInstruction.DRAW_CHARS:\n        const begin = /** @type {number} */ (instruction[1]);\n        const end = /** @type {number} */ (instruction[2]);\n        const baseline = /** @type {number} */ (instruction[3]);\n        declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[4]);\n        const overflow = /** @type {number} */ (instruction[5]);\n        const fillKey = /** @type {string} */ (instruction[6]);\n        const maxAngle = /** @type {number} */ (instruction[7]);\n        const measure = /** @type {function(string):number} */ (instruction[8]);\n        const offsetY = /** @type {number} */ (instruction[9]);\n        const strokeKey = /** @type {string} */ (instruction[10]);\n        const strokeWidth =  /** @type {number} */ (instruction[11]);\n        const text = /** @type {string} */ (instruction[12]);\n        const textKey = /** @type {string} */ (instruction[13]);\n        const textScale = /** @type {number} */ (instruction[14]);\n\n        const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n        const textLength = measure(text);\n        if (overflow || textLength <= pathLength) {\n          const textAlign = /** @type {module:ol~render} */ (this).textStates[textKey].textAlign;\n          const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n          const parts = drawTextOnPath(\n            pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n          if (parts) {\n            let c, cc, chars, label, part;\n            if (strokeKey) {\n              for (c = 0, cc = parts.length; c < cc; ++c) {\n                part = parts[c]; // x, y, anchorX, rotation, chunk\n                chars = /** @type {string} */ (part[4]);\n                label = /** @type {module:ol~render} */ (this).getImage(chars, textKey, '', strokeKey);\n                anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                this.replayImage_(context,\n                  /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                  anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                  /** @type {number} */ (part[3]), textScale, false, label.width,\n                  defaultPadding, null, null);\n              }\n            }\n            if (fillKey) {\n              for (c = 0, cc = parts.length; c < cc; ++c) {\n                part = parts[c]; // x, y, anchorX, rotation, chunk\n                chars = /** @type {string} */ (part[4]);\n                label = /** @type {module:ol~render} */ (this).getImage(chars, textKey, fillKey, '');\n                anchorX = /** @type {number} */ (part[2]);\n                anchorY = baseline * label.height - offsetY;\n                this.replayImage_(context,\n                  /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                  anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                  /** @type {number} */ (part[3]), textScale, false, label.width,\n                  defaultPadding, null, null);\n              }\n            }\n          }\n        }\n        this.renderDeclutter_(declutterGroup, feature);\n        ++i;\n        break;\n      case CanvasInstruction.END_GEOMETRY:\n        if (featureCallback !== undefined) {\n          feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n          const result = featureCallback(feature);\n          if (result) {\n            return result;\n          }\n        }\n        ++i;\n        break;\n      case CanvasInstruction.FILL:\n        if (batchSize) {\n          pendingFill++;\n        } else {\n          this.fill_(context);\n        }\n        ++i;\n        break;\n      case CanvasInstruction.MOVE_TO_LINE_TO:\n        d = /** @type {number} */ (instruction[1]);\n        dd = /** @type {number} */ (instruction[2]);\n        x = pixelCoordinates[d];\n        y = pixelCoordinates[d + 1];\n        roundX = (x + 0.5) | 0;\n        roundY = (y + 0.5) | 0;\n        if (roundX !== prevX || roundY !== prevY) {\n          context.moveTo(x, y);\n          prevX = roundX;\n          prevY = roundY;\n        }\n        for (d += 2; d < dd; d += 2) {\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n            context.lineTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n        }\n        ++i;\n        break;\n      case CanvasInstruction.SET_FILL_STYLE:\n        lastFillInstruction = instruction;\n        this.alignFill_ = instruction[2];\n\n        if (pendingFill) {\n          this.fill_(context);\n          pendingFill = 0;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n        }\n\n        context.fillStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n        ++i;\n        break;\n      case CanvasInstruction.SET_STROKE_STYLE:\n        lastStrokeInstruction = instruction;\n        if (pendingStroke) {\n          context.stroke();\n          pendingStroke = 0;\n        }\n        this.setStrokeStyle_(context, /** @type {Array.<*>} */ (instruction));\n        ++i;\n        break;\n      case CanvasInstruction.STROKE:\n        if (batchSize) {\n          pendingStroke++;\n        } else {\n          context.stroke();\n        }\n        ++i;\n        break;\n      default:\n        ++i; // consume the instruction anyway, to avoid an infinite loop\n        break;\n    }\n  }\n  if (pendingFill) {\n    this.fill_(context);\n  }\n  if (pendingStroke) {\n    context.stroke();\n  }\n  return undefined;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n */\nCanvasReplay.prototype.replay = function(\n  context, transform, viewRotation, skippedFeaturesHash) {\n  this.viewRotation_ = viewRotation;\n  this.replay_(context, transform,\n    skippedFeaturesHash, this.instructions, undefined, undefined);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T=} opt_featureCallback\n *     Feature callback.\n * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n *     extent.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplay.prototype.replayHitDetection = function(\n  context, transform, viewRotation, skippedFeaturesHash,\n  opt_featureCallback, opt_hitExtent) {\n  this.viewRotation_ = viewRotation;\n  return this.replay_(context, transform, skippedFeaturesHash,\n    this.hitDetectionInstructions, opt_featureCallback, opt_hitExtent);\n};\n\n\n/**\n * Reverse the hit detection instructions.\n */\nCanvasReplay.prototype.reverseHitDetectionInstructions = function() {\n  const hitDetectionInstructions = this.hitDetectionInstructions;\n  // step 1 - reverse array\n  hitDetectionInstructions.reverse();\n  // step 2 - reverse instructions within geometry blocks\n  let i;\n  const n = hitDetectionInstructions.length;\n  let instruction;\n  let type;\n  let begin = -1;\n  for (i = 0; i < n; ++i) {\n    instruction = hitDetectionInstructions[i];\n    type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n    if (type == CanvasInstruction.END_GEOMETRY) {\n      begin = i;\n    } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n      instruction[2] = i;\n      reverseSubArray(this.hitDetectionInstructions, begin, i);\n      begin = -1;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplay.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  const state = this.state;\n  if (fillStyle) {\n    const fillStyleColor = fillStyle.getColor();\n    state.fillStyle = asColorLike(fillStyleColor ?\n      fillStyleColor : defaultFillStyle);\n  } else {\n    state.fillStyle = undefined;\n  }\n  if (strokeStyle) {\n    const strokeStyleColor = strokeStyle.getColor();\n    state.strokeStyle = asColorLike(strokeStyleColor ?\n      strokeStyleColor : defaultStrokeStyle);\n    const strokeStyleLineCap = strokeStyle.getLineCap();\n    state.lineCap = strokeStyleLineCap !== undefined ?\n      strokeStyleLineCap : defaultLineCap;\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    state.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash.slice() : defaultLineDash;\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    state.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : defaultLineDashOffset;\n    const strokeStyleLineJoin = strokeStyle.getLineJoin();\n    state.lineJoin = strokeStyleLineJoin !== undefined ?\n      strokeStyleLineJoin : defaultLineJoin;\n    const strokeStyleWidth = strokeStyle.getWidth();\n    state.lineWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : defaultLineWidth;\n    const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    state.miterLimit = strokeStyleMiterLimit !== undefined ?\n      strokeStyleMiterLimit : defaultMiterLimit;\n\n    if (state.lineWidth > this.maxLineWidth) {\n      this.maxLineWidth = state.lineWidth;\n      // invalidate the buffered max extent cache\n      this.bufferedMaxExtent_ = null;\n    }\n  } else {\n    state.strokeStyle = undefined;\n    state.lineCap = undefined;\n    state.lineDash = null;\n    state.lineDashOffset = undefined;\n    state.lineJoin = undefined;\n    state.lineWidth = undefined;\n    state.miterLimit = undefined;\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @return {Array.<*>} Fill instruction.\n */\nCanvasReplay.prototype.createFill = function(state, geometry) {\n  const fillStyle = state.fillStyle;\n  const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n  if (typeof fillStyle !== 'string') {\n    // Fill is a pattern or gradient - align it!\n    fillInstruction.push(true);\n  }\n  return fillInstruction;\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n */\nCanvasReplay.prototype.applyStroke = function(state) {\n  this.instructions.push(this.createStroke(state));\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @return {Array.<*>} Stroke instruction.\n */\nCanvasReplay.prototype.createStroke = function(state) {\n  return [\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n    state.lineJoin, state.miterLimit,\n    this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n  ];\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState, (module:ol/geom/Geometry|module:ol/render/Feature)):Array.<*>} createFill Create fill.\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n */\nCanvasReplay.prototype.updateFillStyle = function(state, createFill, geometry) {\n  const fillStyle = state.fillStyle;\n  if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n    if (fillStyle !== undefined) {\n      this.instructions.push(createFill.call(this, state, geometry));\n    }\n    state.currentFillStyle = fillStyle;\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState)} applyStroke Apply stroke.\n */\nCanvasReplay.prototype.updateStrokeStyle = function(state, applyStroke) {\n  const strokeStyle = state.strokeStyle;\n  const lineCap = state.lineCap;\n  const lineDash = state.lineDash;\n  const lineDashOffset = state.lineDashOffset;\n  const lineJoin = state.lineJoin;\n  const lineWidth = state.lineWidth;\n  const miterLimit = state.miterLimit;\n  if (state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit) {\n    if (strokeStyle !== undefined) {\n      applyStroke.call(this, state);\n    }\n    state.currentStrokeStyle = strokeStyle;\n    state.currentLineCap = lineCap;\n    state.currentLineDash = lineDash;\n    state.currentLineDashOffset = lineDashOffset;\n    state.currentLineJoin = lineJoin;\n    state.currentLineWidth = lineWidth;\n    state.currentMiterLimit = miterLimit;\n  }\n};\n\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.endGeometry = function(geometry, feature) {\n  this.beginGeometryInstruction1_[2] = this.instructions.length;\n  this.beginGeometryInstruction1_ = null;\n  this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n  this.beginGeometryInstruction2_ = null;\n  const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n  this.instructions.push(endGeometryInstruction);\n  this.hitDetectionInstructions.push(endGeometryInstruction);\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplay.prototype.finish = UNDEFINED;\n\n\n/**\n * Get the buffered rendering extent.  Rendering will be clipped to the extent\n * provided to the constructor.  To account for symbolizers that may intersect\n * this extent, we calculate a buffered extent (e.g. based on stroke width).\n * @return {module:ol/extent~Extent} The buffered rendering extent.\n * @protected\n */\nCanvasReplay.prototype.getBufferedMaxExtent = function() {\n  if (!this.bufferedMaxExtent_) {\n    this.bufferedMaxExtent_ = clone(this.maxExtent);\n    if (this.maxLineWidth > 0) {\n      const width = this.resolution * (this.maxLineWidth + 1) / 2;\n      buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n    }\n  }\n  return this.bufferedMaxExtent_;\n};\nexport default CanvasReplay;\n","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport {inherits} from '../../index.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasImageReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.hitDetectionImage_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.anchorX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.anchorY_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.height_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.opacity_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.originX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.originY_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.snapToPixel_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = undefined;\n\n};\n\ninherits(CanvasImageReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} My end.\n */\nCanvasImageReplay.prototype.drawCoordinates_ = function(flatCoordinates, offset, end, stride) {\n  return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.drawPoint = function(pointGeometry, feature) {\n  if (!this.image_) {\n    return;\n  }\n  this.beginGeometry(pointGeometry, feature);\n  const flatCoordinates = pointGeometry.getFlatCoordinates();\n  const stride = pointGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  const myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  this.instructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n  ]);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_, this.snapToPixel_, this.width_\n  ]);\n  this.endGeometry(pointGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.drawMultiPoint = function(multiPointGeometry, feature) {\n  if (!this.image_) {\n    return;\n  }\n  this.beginGeometry(multiPointGeometry, feature);\n  const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n  const stride = multiPointGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  const myEnd = this.drawCoordinates_(\n    flatCoordinates, 0, flatCoordinates.length, stride);\n  this.instructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n  ]);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_, this.snapToPixel_, this.width_\n  ]);\n  this.endGeometry(multiPointGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.finish = function() {\n  this.reverseHitDetectionInstructions();\n  // FIXME this doesn't really protect us against further calls to draw*Geometry\n  this.anchorX_ = undefined;\n  this.anchorY_ = undefined;\n  this.hitDetectionImage_ = null;\n  this.image_ = null;\n  this.height_ = undefined;\n  this.scale_ = undefined;\n  this.opacity_ = undefined;\n  this.originX_ = undefined;\n  this.originY_ = undefined;\n  this.rotateWithView_ = undefined;\n  this.rotation_ = undefined;\n  this.snapToPixel_ = undefined;\n  this.width_ = undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.setImageStyle = function(imageStyle, declutterGroup) {\n  const anchor = imageStyle.getAnchor();\n  const size = imageStyle.getSize();\n  const hitDetectionImage = imageStyle.getHitDetectionImage(1);\n  const image = imageStyle.getImage(1);\n  const origin = imageStyle.getOrigin();\n  this.anchorX_ = anchor[0];\n  this.anchorY_ = anchor[1];\n  this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n  this.hitDetectionImage_ = hitDetectionImage;\n  this.image_ = image;\n  this.height_ = size[1];\n  this.opacity_ = imageStyle.getOpacity();\n  this.originX_ = origin[0];\n  this.originY_ = origin[1];\n  this.rotateWithView_ = imageStyle.getRotateWithView();\n  this.rotation_ = imageStyle.getRotation();\n  this.scale_ = imageStyle.getScale();\n  this.snapToPixel_ = imageStyle.getSnapToPixel();\n  this.width_ = size[0];\n};\nexport default CanvasImageReplay;\n","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport {inherits} from '../../index.js';\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasLineStringReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\ninherits(CanvasLineStringReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} end.\n */\nCanvasLineStringReplay.prototype.drawFlatCoordinates_ = function(flatCoordinates, offset, end, stride) {\n  const myBegin = this.coordinates.length;\n  const myEnd = this.appendFlatCoordinates(\n    flatCoordinates, offset, end, stride, false, false);\n  const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n  this.instructions.push(moveToLineToInstruction);\n  this.hitDetectionInstructions.push(moveToLineToInstruction);\n  return end;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.drawLineString = function(lineStringGeometry, feature) {\n  const state = this.state;\n  const strokeStyle = state.strokeStyle;\n  const lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(lineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], beginPathInstruction);\n  const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n  const stride = lineStringGeometry.getStride();\n  this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  this.hitDetectionInstructions.push(strokeInstruction);\n  this.endGeometry(lineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {\n  const state = this.state;\n  const strokeStyle = state.strokeStyle;\n  const lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(multiLineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], beginPathInstruction);\n  const ends = multiLineStringGeometry.getEnds();\n  const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n  const stride = multiLineStringGeometry.getStride();\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n  }\n  this.hitDetectionInstructions.push(strokeInstruction);\n  this.endGeometry(multiLineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.finish = function() {\n  const state = this.state;\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push(strokeInstruction);\n  }\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n};\n\n\n/**\n * @inheritDoc.\n */\nCanvasLineStringReplay.prototype.applyStroke = function(state) {\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push(strokeInstruction);\n    state.lastStroke = this.coordinates.length;\n  }\n  state.lastStroke = 0;\n  CanvasReplay.prototype.applyStroke.call(this, state);\n  this.instructions.push(beginPathInstruction);\n};\nexport default CanvasLineStringReplay;\n","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {inherits} from '../../index.js';\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasPolygonReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\ninherits(CanvasPolygonReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\nCanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function(flatCoordinates, offset, ends, stride) {\n  const state = this.state;\n  const fill = state.fillStyle !== undefined;\n  const stroke = state.strokeStyle != undefined;\n  const numEnds = ends.length;\n  this.instructions.push(beginPathInstruction);\n  this.hitDetectionInstructions.push(beginPathInstruction);\n  for (let i = 0; i < numEnds; ++i) {\n    const end = ends[i];\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n    const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    if (stroke) {\n      // Performance optimization: only call closePath() when we have a stroke.\n      // Otherwise the ring is closed already (see appendFlatCoordinates above).\n      this.instructions.push(closePathInstruction);\n      this.hitDetectionInstructions.push(closePathInstruction);\n    }\n    offset = end;\n  }\n  this.hitDetectionInstructions.push(fillInstruction);\n  if (fill) {\n    this.instructions.push(fillInstruction);\n  }\n  if (stroke) {\n    this.instructions.push(strokeInstruction);\n    this.hitDetectionInstructions.push(strokeInstruction);\n  }\n  return offset;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawCircle = function(circleGeometry, feature) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  const strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(circleGeometry);\n  this.beginGeometry(circleGeometry, feature);\n  // always fill the circle for hit detection\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_FILL_STYLE,\n    asString(defaultFillStyle)\n  ]);\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const flatCoordinates = circleGeometry.getFlatCoordinates();\n  const stride = circleGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  this.appendFlatCoordinates(\n    flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n  const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n  this.instructions.push(beginPathInstruction, circleInstruction);\n  this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n  this.hitDetectionInstructions.push(fillInstruction);\n  if (state.fillStyle !== undefined) {\n    this.instructions.push(fillInstruction);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.instructions.push(strokeInstruction);\n    this.hitDetectionInstructions.push(strokeInstruction);\n  }\n  this.endGeometry(circleGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawPolygon = function(polygonGeometry, feature) {\n  const state = this.state;\n  this.setFillStrokeStyles_(polygonGeometry);\n  this.beginGeometry(polygonGeometry, feature);\n  // always fill the polygon for hit detection\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_FILL_STYLE,\n    asString(defaultFillStyle)]\n  );\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const ends = polygonGeometry.getEnds();\n  const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n  const stride = polygonGeometry.getStride();\n  this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n  this.endGeometry(polygonGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  const strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(multiPolygonGeometry);\n  this.beginGeometry(multiPolygonGeometry, feature);\n  // always fill the multi-polygon for hit detection\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_FILL_STYLE,\n    asString(defaultFillStyle)\n  ]);\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const endss = multiPolygonGeometry.getEndss();\n  const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n  const stride = multiPolygonGeometry.getStride();\n  let offset = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n  }\n  this.endGeometry(multiPolygonGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.finish = function() {\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n  // We want to preserve topology when drawing polygons.  Polygons are\n  // simplified using quantization and point elimination. However, we might\n  // have received a mix of quantized and non-quantized geometries, so ensure\n  // that all are quantized by quantizing all coordinates in the batch.\n  const tolerance = this.tolerance;\n  if (tolerance !== 0) {\n    const coordinates = this.coordinates;\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      coordinates[i] = snap(coordinates[i], tolerance);\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n */\nCanvasPolygonReplay.prototype.setFillStrokeStyles_ = function(geometry) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  if (fillStyle !== undefined) {\n    this.updateFillStyle(state, this.createFill, geometry);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.updateStrokeStyle(state, this.applyStroke);\n  }\n};\nexport default CanvasPolygonReplay;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array.<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid, inherits} from '../../index.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasTextReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   */\n  this.declutterGroup_;\n\n  /**\n   * @private\n   * @type {Array.<HTMLCanvasElement>}\n   */\n  this.labels_ = null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.textRotateWithView_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textRotation_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.textFillState_ = null;\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~FillState>}\n   */\n  this.fillStates = {};\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.textStrokeState_ = null;\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~StrokeState>}\n   */\n  this.strokeStates = {};\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~TextState}\n   */\n  this.textState_ = /** @type {module:ol/render/canvas~TextState} */ ({});\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~TextState>}\n   */\n  this.textStates = {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.textKey_ = '';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.fillKey_ = '';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.strokeKey_ = '';\n\n  /**\n   * @private\n   * @type {Object.<string, Object.<string, number>>}\n   */\n  this.widths_ = {};\n\n  labelCache.prune();\n\n};\n\ninherits(CanvasTextReplay, CanvasReplay);\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array.<string>} lines Lines to measure.\n * @param {Array.<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\n/**\n * @inheritDoc\n */\nCanvasTextReplay.prototype.drawText = function(geometry, feature) {\n  const fillState = this.textFillState_;\n  const strokeState = this.textStrokeState_;\n  const textState = this.textState_;\n  if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n    return;\n  }\n\n  let begin = this.coordinates.length;\n\n  const geometryType = geometry.getType();\n  let flatCoordinates = null;\n  let end = 2;\n  let stride = 2;\n  let i, ii;\n\n  if (textState.placement === TextPlacement.LINE) {\n    if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n      return;\n    }\n    let ends;\n    flatCoordinates = geometry.getFlatCoordinates();\n    stride = geometry.getStride();\n    if (geometryType == GeometryType.LINE_STRING) {\n      ends = [flatCoordinates.length];\n    } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n      ends = geometry.getEnds();\n    } else if (geometryType == GeometryType.POLYGON) {\n      ends = geometry.getEnds().slice(0, 1);\n    } else if (geometryType == GeometryType.MULTI_POLYGON) {\n      const endss = geometry.getEndss();\n      ends = [];\n      for (i = 0, ii = endss.length; i < ii; ++i) {\n        ends.push(endss[i][0]);\n      }\n    }\n    this.beginGeometry(geometry, feature);\n    const textAlign = textState.textAlign;\n    let flatOffset = 0;\n    let flatEnd;\n    for (let o = 0, oo = ends.length; o < oo; ++o) {\n      if (textAlign == undefined) {\n        const range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n        flatOffset = range[0];\n        flatEnd = range[1];\n      } else {\n        flatEnd = ends[o];\n      }\n      for (i = flatOffset; i < flatEnd; i += stride) {\n        this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n      }\n      end = this.coordinates.length;\n      flatOffset = ends[o];\n      this.drawChars_(begin, end, this.declutterGroup_);\n      begin = end;\n    }\n    this.endGeometry(geometry, feature);\n\n  } else {\n    const label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n    const width = label.width / this.pixelRatio;\n    switch (geometryType) {\n      case GeometryType.POINT:\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        end = flatCoordinates.length;\n        break;\n      case GeometryType.LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n        break;\n      case GeometryType.CIRCLE:\n        flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n        end = flatCoordinates.length;\n        break;\n      case GeometryType.POLYGON:\n        flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n        if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n          return;\n        }\n        stride = 3;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        const interiorPoints = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n        flatCoordinates = [];\n        for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n          if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n        }\n        end = flatCoordinates.length;\n        if (end == 0) {\n          return;\n        }\n        break;\n      default:\n    }\n    end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n    if (textState.backgroundFill || textState.backgroundStroke) {\n      this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n      if (textState.backgroundFill) {\n        this.updateFillStyle(this.state, this.createFill, geometry);\n        this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n      }\n      if (textState.backgroundStroke) {\n        this.updateStrokeStyle(this.state, this.applyStroke);\n        this.hitDetectionInstructions.push(this.createStroke(this.state));\n      }\n    }\n    this.beginGeometry(geometry, feature);\n    this.drawTextImage_(label, begin, end);\n    this.endGeometry(geometry, feature);\n  }\n};\n\n\n/**\n * @param {string} text Text.\n * @param {string} textKey Text style key.\n * @param {string} fillKey Fill style key.\n * @param {string} strokeKey Stroke style key.\n * @return {HTMLCanvasElement} Image.\n */\nCanvasTextReplay.prototype.getImage = function(text, textKey, fillKey, strokeKey) {\n  let label;\n  const key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n  if (!labelCache.containsKey(key)) {\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n    const fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n    const textState = this.textStates[textKey] || this.textState_;\n    const pixelRatio = this.pixelRatio;\n    const scale = textState.scale * pixelRatio;\n    const align =  TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    const strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = (width + strokeWidth);\n    const context = createCanvasContext2D(\n      Math.ceil(renderWidth * scale),\n      Math.ceil((height + strokeWidth) * scale));\n    label = context.canvas;\n    labelCache.set(key, label);\n    if (scale != 1) {\n      context.scale(scale, scale);\n    }\n    context.font = textState.font;\n    if (strokeKey) {\n      context.strokeStyle = strokeState.strokeStyle;\n      context.lineWidth = strokeWidth;\n      context.lineCap = strokeState.lineCap;\n      context.lineJoin = strokeState.lineJoin;\n      context.miterLimit = strokeState.miterLimit;\n      if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n    }\n    if (fillKey) {\n      context.fillStyle = fillState.fillStyle;\n    }\n    context.textBaseline = 'middle';\n    context.textAlign = 'center';\n    const leftRight = (0.5 - align);\n    const x = align * label.width / scale + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n      }\n    }\n  }\n  return labelCache.get(key);\n};\n\n\n/**\n * @private\n * @param {HTMLCanvasElement} label Label.\n * @param {number} begin Begin.\n * @param {number} end End.\n */\nCanvasTextReplay.prototype.drawTextImage_ = function(label, begin, end) {\n  const textState = this.textState_;\n  const strokeState = this.textStrokeState_;\n  const pixelRatio = this.pixelRatio;\n  const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n  const baseline = TEXT_ALIGN[textState.textBaseline];\n  const strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n  const anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n  const anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n  this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n    label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n    this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n    1, true, label.width,\n    textState.padding == defaultPadding ?\n      defaultPadding : textState.padding.map(function(p) {\n        return p * pixelRatio;\n      }),\n    !!textState.backgroundFill, !!textState.backgroundStroke\n  ]);\n  this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n    label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n    this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n    1 / pixelRatio, true, label.width, textState.padding,\n    !!textState.backgroundFill, !!textState.backgroundStroke\n  ]);\n};\n\n\n/**\n * @private\n * @param {number} begin Begin.\n * @param {number} end End.\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n */\nCanvasTextReplay.prototype.drawChars_ = function(begin, end, declutterGroup) {\n  const strokeState = this.textStrokeState_;\n  const textState = this.textState_;\n  const fillState = this.textFillState_;\n\n  const strokeKey = this.strokeKey_;\n  if (strokeState) {\n    if (!(strokeKey in this.strokeStates)) {\n      this.strokeStates[strokeKey] = /** @type {module:ol/render/canvas~StrokeState} */ ({\n        strokeStyle: strokeState.strokeStyle,\n        lineCap: strokeState.lineCap,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineWidth: strokeState.lineWidth,\n        lineJoin: strokeState.lineJoin,\n        miterLimit: strokeState.miterLimit,\n        lineDash: strokeState.lineDash\n      });\n    }\n  }\n  const textKey = this.textKey_;\n  if (!(this.textKey_ in this.textStates)) {\n    this.textStates[this.textKey_] = /** @type {module:ol/render/canvas~TextState} */ ({\n      font: textState.font,\n      textAlign: textState.textAlign || defaultTextAlign,\n      scale: textState.scale\n    });\n  }\n  const fillKey = this.fillKey_;\n  if (fillState) {\n    if (!(fillKey in this.fillStates)) {\n      this.fillStates[fillKey] = /** @type {module:ol/render/canvas~FillState} */ ({\n        fillStyle: fillState.fillStyle\n      });\n    }\n  }\n\n  const pixelRatio = this.pixelRatio;\n  const baseline = TEXT_ALIGN[textState.textBaseline];\n\n  const offsetY = this.textOffsetY_ * pixelRatio;\n  const text = this.text_;\n  const font = textState.font;\n  const textScale = textState.scale;\n  const strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n  let widths = this.widths_[font];\n  if (!widths) {\n    this.widths_[font] = widths = {};\n  }\n  this.instructions.push([CanvasInstruction.DRAW_CHARS,\n    begin, end, baseline, declutterGroup,\n    textState.overflow, fillKey, textState.maxAngle,\n    function(text) {\n      let width = widths[text];\n      if (!width) {\n        width = widths[text] = measureTextWidth(font, text);\n      }\n      return width * textScale * pixelRatio;\n    },\n    offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n  ]);\n  this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n    begin, end, baseline, declutterGroup,\n    textState.overflow, fillKey, textState.maxAngle,\n    function(text) {\n      let width = widths[text];\n      if (!width) {\n        width = widths[text] = measureTextWidth(font, text);\n      }\n      return width * textScale;\n    },\n    offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n  ]);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasTextReplay.prototype.setTextStyle = function(textStyle, declutterGroup) {\n  let textState, fillState, strokeState;\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n\n    const textFillStyle = textStyle.getFill();\n    if (!textFillStyle) {\n      fillState = this.textFillState_ = null;\n    } else {\n      fillState = this.textFillState_;\n      if (!fillState) {\n        fillState = this.textFillState_ = /** @type {module:ol/render/canvas~FillState} */ ({});\n      }\n      fillState.fillStyle = asColorLike(\n        textFillStyle.getColor() || defaultFillStyle);\n    }\n\n    const textStrokeStyle = textStyle.getStroke();\n    if (!textStrokeStyle) {\n      strokeState = this.textStrokeState_ = null;\n    } else {\n      strokeState = this.textStrokeState_;\n      if (!strokeState) {\n        strokeState = this.textStrokeState_ = /** @type {module:ol/render/canvas~StrokeState} */ ({});\n      }\n      const lineDash = textStrokeStyle.getLineDash();\n      const lineDashOffset = textStrokeStyle.getLineDashOffset();\n      const lineWidth = textStrokeStyle.getWidth();\n      const miterLimit = textStrokeStyle.getMiterLimit();\n      strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n      strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n      strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n      strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n      strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n      strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n      strokeState.strokeStyle = asColorLike(\n        textStrokeStyle.getColor() || defaultStrokeStyle);\n    }\n\n    textState = this.textState_;\n    const font = textStyle.getFont() || defaultFont;\n    checkFont(font);\n    const textScale = textStyle.getScale();\n    textState.overflow = textStyle.getOverflow();\n    textState.font = font;\n    textState.maxAngle = textStyle.getMaxAngle();\n    textState.placement = textStyle.getPlacement();\n    textState.textAlign = textStyle.getTextAlign();\n    textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n    textState.backgroundFill = textStyle.getBackgroundFill();\n    textState.backgroundStroke = textStyle.getBackgroundStroke();\n    textState.padding = textStyle.getPadding() || defaultPadding;\n    textState.scale = textScale === undefined ? 1 : textScale;\n\n    const textOffsetX = textStyle.getOffsetX();\n    const textOffsetY = textStyle.getOffsetY();\n    const textRotateWithView = textStyle.getRotateWithView();\n    const textRotation = textStyle.getRotation();\n    this.text_ = textStyle.getText() || '';\n    this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n    this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n    this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n    this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n    this.strokeKey_ = strokeState ?\n      (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n      strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n      strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n      '';\n    this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n    this.fillKey_ = fillState ?\n      (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n      '';\n  }\n};\nexport default CanvasTextReplay;\n","/**\n * @module ol/render/canvas/ReplayGroup\n */\nimport {inherits} from '../../index.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport CanvasImageReplay from '../canvas/ImageReplay.js';\nimport CanvasLineStringReplay from '../canvas/LineStringReplay.js';\nimport CanvasPolygonReplay from '../canvas/PolygonReplay.js';\nimport CanvasTextReplay from '../canvas/TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/canvas/Replay, number, module:ol/extent~Extent,\n *                number, number, boolean, Array.<module:ol/render/canvas~DeclutterGroup>)>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/render/ReplayGroup}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay group can have overlapping geometries.\n * @param {?} declutterTree Declutter tree\n * for declutter processing in postrender.\n * @param {number=} opt_renderBuffer Optional rendering buffer.\n * @struct\n */\nconst CanvasReplayGroup = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree, opt_renderBuffer) {\n  ReplayGroup.call(this);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = declutterTree;\n\n  /**\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   * @private\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tolerance_ = tolerance;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxExtent_ = maxExtent;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = overlaps;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.resolution_ = resolution;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.renderBuffer_ = opt_renderBuffer;\n\n  /**\n   * @private\n   * @type {!Object.<string, !Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>}\n   */\n  this.replaysByZIndex_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.hitDetectionTransform_ = createTransform();\n};\n\ninherits(CanvasReplayGroup, ReplayGroup);\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object.<number, Array.<Array.<(boolean|undefined)>>>}\n */\nconst circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array.<Array.<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  let i;\n  const radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array.<Array.<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  const arraySize = radius * 2 + 1;\n  const arr = new Array(arraySize);\n  for (let i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  let x = radius;\n  let y = 0;\n  let error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object.<string, Array.<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n */\nexport function replayDeclutter(declutterReplays, context, rotation) {\n  const zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  const skippedFeatureUids = {};\n  for (let z = 0, zz = zs.length; z < zz; ++z) {\n    const replayData = declutterReplays[zs[z].toString()];\n    for (let i = 0, ii = replayData.length; i < ii;) {\n      const replay = replayData[i++];\n      const transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids);\n    }\n  }\n}\n\n\n/**\n * @param {boolean} group Group with previous replay.\n * @return {module:ol/render/canvas~DeclutterGroup} Declutter instruction group.\n */\nCanvasReplayGroup.prototype.addDeclutter = function(group) {\n  let declutter = null;\n  if (this.declutterTree_) {\n    if (group) {\n      declutter = this.declutterGroup_;\n      /** @type {number} */ (declutter[4])++;\n    } else {\n      declutter = this.declutterGroup_ = createEmpty();\n      declutter.push(1);\n    }\n  }\n  return declutter;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n */\nCanvasReplayGroup.prototype.clip = function(context, transform) {\n  const flatClipCoords = this.getClipCoords(transform);\n  context.beginPath();\n  context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n  context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n  context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n  context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n  context.clip();\n};\n\n\n/**\n * @param {Array.<module:ol/render/ReplayType>} replays Replays.\n * @return {boolean} Has replays of the provided types.\n */\nCanvasReplayGroup.prototype.hasReplays = function(replays) {\n  for (const zIndex in this.replaysByZIndex_) {\n    const candidates = this.replaysByZIndex_[zIndex];\n    for (let i = 0, ii = replays.length; i < ii; ++i) {\n      if (replays[i] in candidates) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplayGroup.prototype.finish = function() {\n  for (const zKey in this.replaysByZIndex_) {\n    const replays = this.replaysByZIndex_[zKey];\n    for (const replayKey in replays) {\n      replays[replayKey].finish();\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>} declutterReplays Declutter replays.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function(\n  coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n\n  hitTolerance = Math.round(hitTolerance);\n  const contextSize = hitTolerance * 2 + 1;\n  const transform = composeTransform(this.hitDetectionTransform_,\n    hitTolerance + 0.5, hitTolerance + 0.5,\n    1 / resolution, -1 / resolution,\n    -rotation,\n    -coordinate[0], -coordinate[1]);\n  const context = this.hitDetectionContext_;\n\n  if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n    context.canvas.width = contextSize;\n    context.canvas.height = contextSize;\n  } else {\n    context.clearRect(0, 0, contextSize, contextSize);\n  }\n\n  /**\n   * @type {module:ol/extent~Extent}\n   */\n  let hitExtent;\n  if (this.renderBuffer_ !== undefined) {\n    hitExtent = createEmpty();\n    extendCoordinate(hitExtent, coordinate);\n    buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n  }\n\n  const mask = getCircleArray(hitTolerance);\n  let declutteredFeatures;\n  if (this.declutterTree_) {\n    declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n      return entry.value;\n    });\n  }\n\n  let replayType;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @return {?} Callback result.\n   */\n  function featureCallback(feature) {\n    const imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n    for (let i = 0; i < contextSize; i++) {\n      for (let j = 0; j < contextSize; j++) {\n        if (mask[i][j]) {\n          if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n            let result;\n            if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                declutteredFeatures.indexOf(feature) !== -1) {\n              result = callback(feature);\n            }\n            if (result) {\n              return result;\n            } else {\n              context.clearRect(0, 0, contextSize, contextSize);\n              return undefined;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(numberSafeCompareFunction);\n\n  let i, j, replays, replay, result;\n  for (i = zs.length - 1; i >= 0; --i) {\n    const zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = ORDER.length - 1; j >= 0; --j) {\n      replayType = ORDER[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (declutterReplays &&\n            (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n          const declutter = declutterReplays[zIndexKey];\n          if (!declutter) {\n            declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          result = replay.replayHitDetection(context, transform, rotation,\n            skippedFeaturesHash, featureCallback, hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {module:ol/transform~Transform} transform Transform.\n * @return {Array.<number>} Clip coordinates.\n */\nCanvasReplayGroup.prototype.getClipCoords = function(transform) {\n  const maxExtent = this.maxExtent_;\n  const minX = maxExtent[0];\n  const minY = maxExtent[1];\n  const maxX = maxExtent[2];\n  const maxY = maxExtent[3];\n  const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n  transform2D(\n    flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n  return flatClipCoords;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplayGroup.prototype.getReplay = function(zIndex, replayType) {\n  const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n  let replays = this.replaysByZIndex_[zIndexKey];\n  if (replays === undefined) {\n    replays = {};\n    this.replaysByZIndex_[zIndexKey] = replays;\n  }\n  let replay = replays[replayType];\n  if (replay === undefined) {\n    const Constructor = BATCH_CONSTRUCTORS[replayType];\n    replay = new Constructor(this.tolerance_, this.maxExtent_,\n      this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n    replays[replayType] = replay;\n  }\n  return replay;\n};\n\n\n/**\n * @return {Object.<string, Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>} Replays.\n */\nCanvasReplayGroup.prototype.getReplays = function() {\n  return this.replaysByZIndex_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplayGroup.prototype.isEmpty = function() {\n  return isEmpty(this.replaysByZIndex_);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {Array.<module:ol/render/ReplayType>=} opt_replayTypes Ordered replay types to replay.\n *     Default is {@link module:ol/render/replay~ORDER}\n * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>=} opt_declutterReplays Declutter replays.\n */\nCanvasReplayGroup.prototype.replay = function(context,\n  transform, viewRotation, skippedFeaturesHash, opt_replayTypes, opt_declutterReplays) {\n\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(numberSafeCompareFunction);\n\n  // setup clipping so that the parts of over-simplified geometries are not\n  // visible outside the current extent when panning\n  context.save();\n  this.clip(context, transform);\n\n  const replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n  let i, ii, j, jj, replays, replay;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    const zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n      const replayType = replayTypes[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (opt_declutterReplays &&\n            (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n          const declutter = opt_declutterReplays[zIndexKey];\n          if (!declutter) {\n            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          replay.replay(context, transform, viewRotation, skippedFeaturesHash);\n        }\n      }\n    }\n  }\n\n  context.restore();\n};\n\nexport default CanvasReplayGroup;\n","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../index.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object.<module:ol/geom/GeometryType,\n *                function(module:ol/render/ReplayGroup, module:ol/geom/Geometry,\n *                         module:ol/style/Style, Object)>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature1 Feature 1.\n * @param {module:ol/Feature|module:ol/render/Feature} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return getUid(feature1) - getUid(feature2);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {module:ol/geom/SimpleGeometry} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid, inherits} from '../../index.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/Layer}\n * @param {module:ol/layer/Vector} vectorLayer Vector layer.\n * @api\n */\nconst CanvasVectorLayerRenderer = function(vectorLayer) {\n\n  CanvasLayerRenderer.call(this, vectorLayer);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedResolution_ = NaN;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedExtent_ = createEmpty();\n\n  /**\n   * @private\n   * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n   */\n  this.renderedRenderOrder_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas/ReplayGroup}\n   */\n  this.replayGroup_ = null;\n\n  /**\n   * A new replay group had to be created by `prepareFrame()`\n   * @type {boolean}\n   */\n  this.replayGroupChanged = true;\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = createCanvasContext2D();\n\n  listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n};\n\ninherits(CanvasVectorLayerRenderer, CanvasLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorLayer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {module:ol/layer/Vector} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.disposeInternal = function() {\n  unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n  CanvasLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n */\nCanvasVectorLayerRenderer.prototype.compose = function(context, frameState, layerState) {\n  const extent = frameState.extent;\n  const pixelRatio = frameState.pixelRatio;\n  const skippedFeatureUids = layerState.managed ?\n    frameState.skippedFeatureUids : {};\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const rotation = viewState.rotation;\n  const projectionExtent = projection.getExtent();\n  const vectorSource = /** @type {module:ol/source/Vector} */ (this.getLayer().getSource());\n\n  let transform = this.getTransform(frameState, 0);\n\n  // clipped rendering if layer extent is set\n  const clipExtent = layerState.extent;\n  const clipped = clipExtent !== undefined;\n  if (clipped) {\n    this.clip(context, frameState,  /** @type {module:ol/extent~Extent} */ (clipExtent));\n  }\n  const replayGroup = this.replayGroup_;\n  if (replayGroup && !replayGroup.isEmpty()) {\n    if (this.declutterTree_) {\n      this.declutterTree_.clear();\n    }\n    const layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    let drawOffsetX = 0;\n    let drawOffsetY = 0;\n    let replayContext;\n    const transparentLayer = layerState.opacity !== 1;\n    const hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n    if (transparentLayer || hasRenderListeners) {\n      let drawWidth = context.canvas.width;\n      let drawHeight = context.canvas.height;\n      if (rotation) {\n        const drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n        drawOffsetX = (drawSize - drawWidth) / 2;\n        drawOffsetY = (drawSize - drawHeight) / 2;\n        drawWidth = drawHeight = drawSize;\n      }\n      // resize and clear\n      this.context.canvas.width = drawWidth;\n      this.context.canvas.height = drawHeight;\n      replayContext = this.context;\n    } else {\n      replayContext = context;\n    }\n\n    const alpha = replayContext.globalAlpha;\n    if (!transparentLayer) {\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      replayContext.globalAlpha = layerState.opacity;\n    }\n\n    if (replayContext != context) {\n      replayContext.translate(drawOffsetX, drawOffsetY);\n    }\n\n    const width = frameState.size[0] * pixelRatio;\n    const height = frameState.size[1] * pixelRatio;\n    rotateAtOffset(replayContext, -rotation,\n      width / 2, height / 2);\n    replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n    if (vectorSource.getWrapX() && projection.canWrapX() &&\n        !containsExtent(projectionExtent, extent)) {\n      let startX = extent[0];\n      const worldWidth = getWidth(projectionExtent);\n      let world = 0;\n      let offsetX;\n      while (startX < projectionExtent[0]) {\n        --world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX += worldWidth;\n      }\n      world = 0;\n      startX = extent[2];\n      while (startX > projectionExtent[2]) {\n        ++world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX -= worldWidth;\n      }\n    }\n    rotateAtOffset(replayContext, rotation,\n      width / 2, height / 2);\n\n    if (replayContext != context) {\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (transparentLayer) {\n        const mainContextAlpha = context.globalAlpha;\n        context.globalAlpha = layerState.opacity;\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        context.globalAlpha = mainContextAlpha;\n      } else {\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n      }\n      replayContext.translate(-drawOffsetX, -drawOffsetY);\n    }\n\n    if (!transparentLayer) {\n      replayContext.globalAlpha = alpha;\n    }\n  }\n\n  if (clipped) {\n    context.restore();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n  const transform = this.getTransform(frameState, 0);\n  this.preCompose(context, frameState, transform);\n  this.compose(context, frameState, layerState);\n  this.postCompose(context, frameState, layerState, transform);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.replayGroup_) {\n    return undefined;\n  } else {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    /** @type {!Object.<string, boolean>} */\n    const features = {};\n    const result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        const key = getUid(feature).toString();\n        if (!(key in features)) {\n          features[key] = true;\n          return callback.call(thisArg, feature, layer);\n        }\n      }, null);\n    return result;\n  }\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n */\nCanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function(event) {\n  const layer = this.getLayer();\n  if (layer.getVisible() && this.replayGroup_) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {module:ol/events/Event} event Image style change event.\n * @private\n */\nCanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n  const vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n  const vectorSource = vectorLayer.getSource();\n\n  const animating = frameState.viewHints[ViewHint.ANIMATING];\n  const interacting = frameState.viewHints[ViewHint.INTERACTING];\n  const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n  const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n  if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)) {\n    return true;\n  }\n\n  const frameStateExtent = frameState.extent;\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const resolution = viewState.resolution;\n  const pixelRatio = frameState.pixelRatio;\n  const vectorLayerRevision = vectorLayer.getRevision();\n  const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n  let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n  if (vectorLayerRenderOrder === undefined) {\n    vectorLayerRenderOrder = defaultRenderOrder;\n  }\n\n  const extent = buffer(frameStateExtent,\n    vectorLayerRenderBuffer * resolution);\n  const projectionExtent = viewState.projection.getExtent();\n\n  if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)) {\n    // For the replay group, we need an extent that intersects the real world\n    // (-180° to +180°). To support geometries in a coordinate range from -540°\n    // to +540°, we add at least 1 world width on each side of the projection\n    // extent. If the viewport is wider than the world, we need to add half of\n    // the viewport width to make sure we cover the whole viewport.\n    const worldWidth = getWidth(projectionExtent);\n    const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n    extent[0] = projectionExtent[0] - gutter;\n    extent[2] = projectionExtent[2] + gutter;\n  }\n\n  if (!this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)) {\n    this.replayGroupChanged = false;\n    return true;\n  }\n\n  this.replayGroup_ = null;\n\n  this.dirty_ = false;\n\n  const replayGroup = new CanvasReplayGroup(\n    getRenderTolerance(resolution, pixelRatio), extent, resolution,\n    pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n  vectorSource.loadFeatures(extent, resolution, projection);\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @this {module:ol/renderer/canvas/VectorLayer}\n   */\n  const render = function(feature) {\n    let styles;\n    const styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n    if (styleFunction) {\n      styles = styleFunction(feature, resolution);\n    }\n    if (styles) {\n      const dirty = this.renderFeature(\n        feature, resolution, pixelRatio, styles, replayGroup);\n      this.dirty_ = this.dirty_ || dirty;\n    }\n  }.bind(this);\n  if (vectorLayerRenderOrder) {\n    /** @type {Array.<module:ol/Feature>} */\n    const features = [];\n    vectorSource.forEachFeatureInExtent(extent,\n      /**\n       * @param {module:ol/Feature} feature Feature.\n       */\n      function(feature) {\n        features.push(feature);\n      }, this);\n    features.sort(vectorLayerRenderOrder);\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n  } else {\n    vectorSource.forEachFeatureInExtent(extent, render, this);\n  }\n  replayGroup.finish();\n\n  this.renderedResolution_ = resolution;\n  this.renderedRevision_ = vectorLayerRevision;\n  this.renderedRenderOrder_ = vectorLayerRenderOrder;\n  this.renderedExtent_ = extent;\n  this.replayGroup_ = replayGroup;\n\n  this.replayGroupChanged = true;\n  return true;\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\nCanvasVectorLayerRenderer.prototype.renderFeature = function(feature, resolution, pixelRatio, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  let loading = false;\n  if (Array.isArray(styles)) {\n    for (let i = 0, ii = styles.length; i < ii; ++i) {\n      loading = renderFeature(\n        replayGroup, feature, styles[i],\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = renderFeature(\n      replayGroup, feature, styles,\n      getSquaredRenderTolerance(resolution, pixelRatio),\n      this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid, inherits} from '../../index.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from '../canvas/TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nconst VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/TileLayer}\n * @param {module:ol/layer/VectorTile} layer VectorTile layer.\n * @api\n */\nconst CanvasVectorTileLayerRenderer = function(layer) {\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = null;\n\n  CanvasTileLayerRenderer.call(this, layer);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedLayerRevision_;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.tmpTransform_ = createTransform();\n\n  // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n  this.zDirection = layer.getRenderMode() == VectorTileRenderType.VECTOR ? 1 : 0;\n\n  listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n};\n\ninherits(CanvasVectorTileLayerRenderer, CanvasTileLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorTileLayer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {module:ol/layer/VectorTile} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.disposeInternal = function() {\n  unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n  CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n  if (tile.getState() === TileState.LOADED) {\n    this.createReplayGroup_(tile, pixelRatio, projection);\n    if (this.context) {\n      this.renderTileImage_(tile, pixelRatio, projection);\n    }\n  }\n  return tile;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n  const layer = this.getLayer();\n  const layerRevision = layer.getRevision();\n  if (this.renderedLayerRevision_ != layerRevision) {\n    this.renderedTiles.length = 0;\n    const renderMode = layer.getRenderMode();\n    if (!this.context && renderMode != VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n    if (this.context && renderMode == VectorTileRenderType.VECTOR) {\n      this.context = null;\n    }\n  }\n  this.renderedLayerRevision_ = layerRevision;\n  return CanvasTileLayerRenderer.prototype.prepareFrame.apply(this, arguments);\n};\n\n\n/**\n * @param {module:ol/VectorImageTile} tile Tile.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function(tile, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const revision = layer.getRevision();\n  const renderOrder = /** @type {module:ol/render~OrderFunction} */ (layer.getRenderOrder()) || null;\n\n  const replayState = tile.getReplayState(layer);\n  if (!replayState.dirty && replayState.renderedRevision == revision &&\n      replayState.renderedRenderOrder == renderOrder) {\n    return;\n  }\n\n  const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n  const sourceTileGrid = source.getTileGrid();\n  const tileGrid = source.getTileGridForProjection(projection);\n  const resolution = tileGrid.getResolution(tile.tileCoord[0]);\n  const tileExtent = tile.extent;\n\n  const zIndexKeys = {};\n  for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n    const sourceTile = tile.getTile(tile.tileKeys[t]);\n    if (sourceTile.getState() != TileState.LOADED) {\n      continue;\n    }\n\n    const sourceTileCoord = sourceTile.tileCoord;\n    const sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n    const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n    const bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n      buffer(sharedExtent, layer.getRenderBuffer() * resolution, this.tmpExtent);\n    const tileProjection = sourceTile.getProjection();\n    let reproject = false;\n    if (!equivalentProjection(projection, tileProjection)) {\n      reproject = true;\n      sourceTile.setProjection(projection);\n    }\n    replayState.dirty = false;\n    const replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n      pixelRatio, source.getOverlaps(), this.declutterTree_, layer.getRenderBuffer());\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @this {module:ol/renderer/canvas/VectorTileLayer}\n     */\n    const render = function(feature) {\n      let styles;\n      const styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        const dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n        replayState.dirty = replayState.dirty || dirty;\n      }\n    };\n\n    const features = sourceTile.getFeatures();\n    if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n      features.sort(renderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (reproject) {\n        if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n          // projected tile extent\n          tileProjection.setWorldExtent(sourceTileExtent);\n          // tile extent in tile pixel space\n          tileProjection.setExtent(sourceTile.getExtent());\n        }\n        feature.getGeometry().transform(tileProjection, projection);\n      }\n      if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n        render.call(this, feature);\n      }\n    }\n    replayGroup.finish();\n    for (const r in replayGroup.getReplays()) {\n      zIndexKeys[r] = true;\n    }\n    sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n  }\n  replayState.renderedRevision = revision;\n  replayState.renderedRenderOrder = renderOrder;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const resolution = frameState.viewState.resolution;\n  const rotation = frameState.viewState.rotation;\n  hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n  const layer = this.getLayer();\n  /** @type {!Object.<string, boolean>} */\n  const features = {};\n\n  /** @type {Array.<module:ol/VectorImageTile>} */\n  const renderedTiles = this.renderedTiles;\n\n  let bufferedExtent, found;\n  let i, ii, replayGroup;\n  for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n    const tile = renderedTiles[i];\n    bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n    if (!containsCoordinate(bufferedExtent, coordinate)) {\n      continue;\n    }\n    for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      const sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          const key = getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n    }\n  }\n  return found;\n};\n\n\n/**\n * @param {module:ol/VectorTile} tile Tile.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {module:ol/transform~Transform} transform Transform.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function(tile, frameState) {\n  const layer = this.getLayer();\n  const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n  const tileGrid = source.getTileGrid();\n  const tileCoord = tile.tileCoord;\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  const viewState = frameState.viewState;\n  const pixelRatio = frameState.pixelRatio;\n  const renderResolution = viewState.resolution / pixelRatio;\n  const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n  const center = viewState.center;\n  const origin = getTopLeft(tileExtent);\n  const size = frameState.size;\n  const offsetX = Math.round(pixelRatio * size[0] / 2);\n  const offsetY = Math.round(pixelRatio * size[1] / 2);\n  return composeTransform(this.tmpTransform_,\n    offsetX, offsetY,\n    tileResolution / renderResolution, tileResolution / renderResolution,\n    viewState.rotation,\n    (origin[0] - center[0]) / tileResolution,\n    (center[1] - origin[1]) / tileResolution);\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n */\nCanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function(event) {\n  const layer = this.getLayer();\n  if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {module:ol/events/Event} event Image style change event.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.postCompose = function(context, frameState, layerState) {\n  const layer = this.getLayer();\n  const declutterReplays = layer.getDeclutter() ? {} : null;\n  const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n  const renderMode = layer.getRenderMode();\n  const replayTypes = VECTOR_REPLAYS[renderMode];\n  const pixelRatio = frameState.pixelRatio;\n  const rotation = frameState.viewState.rotation;\n  const size = frameState.size;\n  let offsetX, offsetY;\n  if (rotation) {\n    offsetX = Math.round(pixelRatio * size[0] / 2);\n    offsetY = Math.round(pixelRatio * size[1] / 2);\n    rotateAtOffset(context, -rotation, offsetX, offsetY);\n  }\n  if (declutterReplays) {\n    this.declutterTree_.clear();\n  }\n  const tiles = this.renderedTiles;\n  const tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n  const clips = [];\n  const zs = [];\n  for (let i = tiles.length - 1; i >= 0; --i) {\n    const tile = /** @type {module:ol/VectorImageTile} */ (tiles[i]);\n    if (tile.getState() == TileState.ABORT) {\n      continue;\n    }\n    const tileCoord = tile.tileCoord;\n    const worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n    let transform = undefined;\n    for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      const sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const replayGroup = sourceTile.getReplayGroup(layer, tileCoord.toString());\n      if (renderMode != VectorTileRenderType.VECTOR && !replayGroup.hasReplays(replayTypes)) {\n        continue;\n      }\n      if (!transform) {\n        transform = this.getTransform(frameState, worldOffset);\n      }\n      const currentZ = sourceTile.tileCoord[0];\n      const currentClip = replayGroup.getClipCoords(transform);\n      context.save();\n      context.globalAlpha = layerState.opacity;\n      // Create a clip mask for regions in this low resolution tile that are\n      // already filled by a higher resolution tile\n      for (let j = 0, jj = clips.length; j < jj; ++j) {\n        const clip = clips[j];\n        if (currentZ < zs[j]) {\n          context.beginPath();\n          // counter-clockwise (outer ring) for current tile\n          context.moveTo(currentClip[0], currentClip[1]);\n          context.lineTo(currentClip[2], currentClip[3]);\n          context.lineTo(currentClip[4], currentClip[5]);\n          context.lineTo(currentClip[6], currentClip[7]);\n          // clockwise (inner ring) for higher resolution tile\n          context.moveTo(clip[6], clip[7]);\n          context.lineTo(clip[4], clip[5]);\n          context.lineTo(clip[2], clip[3]);\n          context.lineTo(clip[0], clip[1]);\n          context.clip();\n        }\n      }\n      replayGroup.replay(context, transform, rotation, {}, replayTypes, declutterReplays);\n      context.restore();\n      clips.push(currentClip);\n      zs.push(currentZ);\n    }\n  }\n  if (declutterReplays) {\n    replayDeclutter(declutterReplays, context, rotation);\n  }\n  if (rotation) {\n    rotateAtOffset(context, rotation,\n      /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n  }\n  CanvasTileLayerRenderer.prototype.postCompose.apply(this, arguments);\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\nCanvasVectorTileLayerRenderer.prototype.renderFeature = function(feature, squaredTolerance, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  let loading = false;\n  if (Array.isArray(styles)) {\n    for (let i = 0, ii = styles.length; i < ii; ++i) {\n      loading = renderFeature(\n        replayGroup, feature, styles[i], squaredTolerance,\n        this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = renderFeature(\n      replayGroup, feature, styles, squaredTolerance,\n      this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\n\n\n/**\n * @param {module:ol/VectorImageTile} tile Tile.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function(\n  tile, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const replayState = tile.getReplayState(layer);\n  const revision = layer.getRevision();\n  const replays = IMAGE_REPLAYS[layer.getRenderMode()];\n  if (replays && replayState.renderedTileRevision !== revision) {\n    replayState.renderedTileRevision = revision;\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    const tileGrid = source.getTileGridForProjection(projection);\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    for (let i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n      const sourceTile = tile.getTile(tile.tileKeys[i]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const pixelScale = pixelRatio / resolution;\n      const transform = resetTransform(this.tmpTransform_);\n      scaleTransform(transform, pixelScale, -pixelScale);\n      translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n      const replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      replayGroup.replay(context, transform, 0, {}, replays);\n    }\n  }\n};\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/Map\n */\nimport {inherits} from './index.js';\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @constructor\n * @extends {module:ol/PluggableMap}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nconst Map = function(options) {\n  options = assign({}, options);\n  if (!options.controls) {\n    options.controls = defaultControls();\n  }\n  if (!options.interactions) {\n    options.interactions = defaultInteractions();\n  }\n\n  PluggableMap.call(this, options);\n};\n\ninherits(Map, PluggableMap);\n\nMap.prototype.createRenderer = function() {\n  const renderer = new CanvasMapRenderer(this);\n  renderer.registerLayerRenderers([\n    CanvasImageLayerRenderer,\n    CanvasTileLayerRenderer,\n    CanvasVectorLayerRenderer,\n    CanvasVectorTileLayerRenderer\n  ]);\n  return renderer;\n};\n\nexport default Map;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n","/**\n * @module ol/style/IconImage\n */\nimport {inherits} from '../index.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\n\n/**\n * @constructor\n * @param {Image|HTMLCanvasElement} image Image.\n * @param {string|undefined} src Src.\n * @param {module:ol/size~Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/ImageState} imageState Image state.\n * @param {module:ol/color~Color} color Color.\n * @extends {module:ol/events/EventTarget}\n */\nconst IconImage = function(image, src, size, crossOrigin, imageState, color) {\n\n  EventTarget.call(this);\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.hitDetectionImage_ = null;\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.image_ = !image ? new Image() : image;\n\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = color ?\n    /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS')) :\n    null;\n\n  /**\n   * @private\n   * @type {module:ol/color~Color}\n   */\n  this.color_ = color;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/ImageState}\n   */\n  this.imageState_ = imageState;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.size_ = size;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.tainting_ = false;\n  if (this.imageState_ == ImageState.LOADED) {\n    this.determineTainting_();\n  }\n\n};\n\ninherits(IconImage, EventTarget);\n\n\n/**\n * @param {Image|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {module:ol/size~Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/ImageState} imageState Image state.\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/style/IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\n/**\n * @private\n */\nIconImage.prototype.determineTainting_ = function() {\n  const context = createCanvasContext2D(1, 1);\n  try {\n    context.drawImage(this.image_, 0, 0);\n    context.getImageData(0, 0, 1, 1);\n  } catch (e) {\n    this.tainting_ = true;\n  }\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.dispatchChangeEvent_ = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.handleImageError_ = function() {\n  this.imageState_ = ImageState.ERROR;\n  this.unlistenImage_();\n  this.dispatchChangeEvent_();\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.handleImageLoad_ = function() {\n  this.imageState_ = ImageState.LOADED;\n  if (this.size_) {\n    this.image_.width = this.size_[0];\n    this.image_.height = this.size_[1];\n  }\n  this.size_ = [this.image_.width, this.image_.height];\n  this.unlistenImage_();\n  this.determineTainting_();\n  this.replaceColor_();\n  this.dispatchChangeEvent_();\n};\n\n\n/**\n * @param {number} pixelRatio Pixel ratio.\n * @return {Image|HTMLCanvasElement} Image or Canvas element.\n */\nIconImage.prototype.getImage = function(pixelRatio) {\n  return this.canvas_ ? this.canvas_ : this.image_;\n};\n\n\n/**\n * @return {module:ol/ImageState} Image state.\n */\nIconImage.prototype.getImageState = function() {\n  return this.imageState_;\n};\n\n\n/**\n * @param {number} pixelRatio Pixel ratio.\n * @return {Image|HTMLCanvasElement} Image element.\n */\nIconImage.prototype.getHitDetectionImage = function(pixelRatio) {\n  if (!this.hitDetectionImage_) {\n    if (this.tainting_) {\n      const width = this.size_[0];\n      const height = this.size_[1];\n      const context = createCanvasContext2D(width, height);\n      context.fillRect(0, 0, width, height);\n      this.hitDetectionImage_ = context.canvas;\n    } else {\n      this.hitDetectionImage_ = this.image_;\n    }\n  }\n  return this.hitDetectionImage_;\n};\n\n\n/**\n * @return {module:ol/size~Size} Image size.\n */\nIconImage.prototype.getSize = function() {\n  return this.size_;\n};\n\n\n/**\n * @return {string|undefined} Image src.\n */\nIconImage.prototype.getSrc = function() {\n  return this.src_;\n};\n\n\n/**\n * Load not yet loaded URI.\n */\nIconImage.prototype.load = function() {\n  if (this.imageState_ == ImageState.IDLE) {\n    this.imageState_ = ImageState.LOADING;\n    this.imageListenerKeys_ = [\n      listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    try {\n      this.image_.src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n  }\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.replaceColor_ = function() {\n  if (this.tainting_ || this.color_ === null) {\n    return;\n  }\n\n  this.canvas_.width = this.image_.width;\n  this.canvas_.height = this.image_.height;\n\n  const ctx = this.canvas_.getContext('2d');\n  ctx.drawImage(this.image_, 0, 0);\n\n  const imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n  const data = imgData.data;\n  const r = this.color_[0] / 255.0;\n  const g = this.color_[1] / 255.0;\n  const b = this.color_[2] / 255.0;\n\n  for (let i = 0, ii = data.length; i < ii; i += 4) {\n    data[i] *= r;\n    data[i + 1] *= g;\n    data[i + 2] *= b;\n  }\n  ctx.putImageData(imgData, 0, 0);\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\nIconImage.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default IconImage;\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/style/Icon\n */\nimport {getUid, inherits} from '../index.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport {get as getIconImage} from '../style/IconImage.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {module:ol/style/IconOrigin} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {module:ol/style/IconAnchorUnits} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {module:ol/style/IconAnchorUnits} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {module:ol/color~Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {Image|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array.<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {module:ol/style/IconOrigin} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the icon in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the icon's position is animated. Without it, the icon may jitter noticeably.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {module:ol/size~Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {module:ol/size~Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Icon~Options=} opt_options Options.\n * @extends {module:ol/style/Image}\n * @api\n */\nconst Icon = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.normalizedAnchor_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconOrigin}\n   */\n  this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n    options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconAnchorUnits}\n   */\n  this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n    options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconAnchorUnits}\n   */\n  this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n    options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @type {Image|HTMLCanvasElement}\n   */\n  const image = options.img !== undefined ? options.img : null;\n\n  /**\n   * @type {module:ol/size~Size}\n   */\n  const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n  /**\n   * @type {string|undefined}\n   */\n  let src = options.src;\n\n  assert(!(src !== undefined && image),\n    4); // `image` and `src` cannot be provided at the same time\n  assert(!image || (image && imgSize),\n    5); // `imgSize` must be set when `image` is provided\n\n  if ((src === undefined || src.length === 0) && image) {\n    src = image.src || getUid(image).toString();\n  }\n  assert(src !== undefined && src.length > 0,\n    6); // A defined and non-empty `src` or `image` must be provided\n\n  /**\n   * @type {module:ol/ImageState}\n   */\n  const imageState = options.src !== undefined ?\n    ImageState.IDLE : ImageState.LOADED;\n\n  /**\n   * @private\n   * @type {module:ol/color~Color}\n   */\n  this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconImage}\n   */\n  this.iconImage_ = getIconImage(\n    image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n  /**\n   * @private\n   * @type {module:ol/style/IconOrigin}\n   */\n  this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n    options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.origin_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.size_ = options.size !== undefined ? options.size : null;\n\n  /**\n   * @type {number}\n   */\n  const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n  /**\n   * @type {boolean}\n   */\n  const rotateWithView = options.rotateWithView !== undefined ?\n    options.rotateWithView : false;\n\n  /**\n   * @type {number}\n   */\n  const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n  /**\n   * @type {number}\n   */\n  const scale = options.scale !== undefined ? options.scale : 1;\n\n  /**\n   * @type {boolean}\n   */\n  const snapToPixel = options.snapToPixel !== undefined ?\n    options.snapToPixel : true;\n\n  ImageStyle.call(this, {\n    opacity: opacity,\n    rotation: rotation,\n    scale: scale,\n    snapToPixel: snapToPixel,\n    rotateWithView: rotateWithView\n  });\n\n};\n\ninherits(Icon, ImageStyle);\n\n\n/**\n * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n * @return {module:ol/style/Icon} The cloned style.\n * @api\n */\nIcon.prototype.clone = function() {\n  return new Icon({\n    anchor: this.anchor_.slice(),\n    anchorOrigin: this.anchorOrigin_,\n    anchorXUnits: this.anchorXUnits_,\n    anchorYUnits: this.anchorYUnits_,\n    crossOrigin: this.crossOrigin_,\n    color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n    src: this.getSrc(),\n    offset: this.offset_.slice(),\n    offsetOrigin: this.offsetOrigin_,\n    size: this.size_ !== null ? this.size_.slice() : undefined,\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    snapToPixel: this.getSnapToPixel(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nIcon.prototype.getAnchor = function() {\n  if (this.normalizedAnchor_) {\n    return this.normalizedAnchor_;\n  }\n  let anchor = this.anchor_;\n  const size = this.getSize();\n  if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n    if (!size) {\n      return null;\n    }\n    anchor = this.anchor_.slice();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n      anchor[0] *= size[0];\n    }\n    if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      anchor[1] *= size[1];\n    }\n  }\n\n  if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n    if (!size) {\n      return null;\n    }\n    if (anchor === this.anchor_) {\n      anchor = this.anchor_.slice();\n    }\n    if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      anchor[0] = -anchor[0] + size[0];\n    }\n    if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      anchor[1] = -anchor[1] + size[1];\n    }\n  }\n  this.normalizedAnchor_ = anchor;\n  return this.normalizedAnchor_;\n};\n\n\n/**\n * Get the icon color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nIcon.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Get the image icon.\n * @param {number} pixelRatio Pixel ratio.\n * @return {Image|HTMLCanvasElement} Image or Canvas element.\n * @override\n * @api\n */\nIcon.prototype.getImage = function(pixelRatio) {\n  return this.iconImage_.getImage(pixelRatio);\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getImageSize = function() {\n  return this.iconImage_.getSize();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getHitDetectionImageSize = function() {\n  return this.getImageSize();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getImageState = function() {\n  return this.iconImage_.getImageState();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getHitDetectionImage = function(pixelRatio) {\n  return this.iconImage_.getHitDetectionImage(pixelRatio);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nIcon.prototype.getOrigin = function() {\n  if (this.origin_) {\n    return this.origin_;\n  }\n  let offset = this.offset_;\n\n  if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n    const size = this.getSize();\n    const iconImageSize = this.iconImage_.getSize();\n    if (!size || !iconImageSize) {\n      return null;\n    }\n    offset = offset.slice();\n    if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      offset[0] = iconImageSize[0] - size[0] - offset[0];\n    }\n    if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      offset[1] = iconImageSize[1] - size[1] - offset[1];\n    }\n  }\n  this.origin_ = offset;\n  return this.origin_;\n};\n\n\n/**\n * Get the image URL.\n * @return {string|undefined} Image src.\n * @api\n */\nIcon.prototype.getSrc = function() {\n  return this.iconImage_.getSrc();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nIcon.prototype.getSize = function() {\n  return !this.size_ ? this.iconImage_.getSize() : this.size_;\n};\n\n\n/**\n * @override\n */\nIcon.prototype.listenImageChange = function(listener, thisArg) {\n  return listen(this.iconImage_, EventType.CHANGE,\n    listener, thisArg);\n};\n\n\n/**\n * Load not yet loaded URI.\n * When rendering a feature with an icon style, the vector renderer will\n * automatically call this method. However, you might want to call this\n * method yourself for preloading or other purposes.\n * @override\n * @api\n */\nIcon.prototype.load = function() {\n  this.iconImage_.load();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.unlistenImageChange = function(listener, thisArg) {\n  unlisten(this.iconImage_, EventType.CHANGE,\n    listener, thisArg);\n};\nexport default Icon;\n","/**\n * @module ol/layer/Heatmap\n */\nimport {listen} from '../events.js';\nimport {inherits} from '../index.js';\nimport {getChangeEventType} from '../Object.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport Icon from '../style/Icon.js';\nimport Style from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array.<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {number} [shadow=250] Shadow size in pixels.\n * @property {string|function(module:ol/Feature):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {module:ol/source/Vector} [source] Source.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius'\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Vector}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Heatmap~Options=} opt_options Options.\n * @api\n */\nconst Heatmap = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.gradient;\n  delete baseOptions.radius;\n  delete baseOptions.blur;\n  delete baseOptions.shadow;\n  delete baseOptions.weight;\n  VectorLayer.call(this, /** @type {module:ol/layer/Vector~Options} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {Uint8ClampedArray}\n   */\n  this.gradient_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.circleImage_ = undefined;\n\n  /**\n   * @private\n   * @type {Array.<Array.<module:ol/style/Style>>}\n   */\n  this.styleCache_ = null;\n\n  listen(this,\n    getChangeEventType(Property.GRADIENT),\n    this.handleGradientChanged_, this);\n\n  this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n  this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n  this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n  listen(this,\n    getChangeEventType(Property.BLUR),\n    this.handleStyleChanged_, this);\n  listen(this,\n    getChangeEventType(Property.RADIUS),\n    this.handleStyleChanged_, this);\n\n  this.handleStyleChanged_();\n\n  const weight = options.weight ? options.weight : 'weight';\n  let weightFunction;\n  if (typeof weight === 'string') {\n    weightFunction = function(feature) {\n      return feature.get(weight);\n    };\n  } else {\n    weightFunction = weight;\n  }\n\n  this.setStyle(function(feature, resolution) {\n    const weight = weightFunction(feature);\n    const opacity = weight !== undefined ? clamp(weight, 0, 1) : 1;\n    // cast to 8 bits\n    const index = (255 * opacity) | 0;\n    let style = this.styleCache_[index];\n    if (!style) {\n      style = [\n        new Style({\n          image: new Icon({\n            opacity: opacity,\n            src: this.circleImage_\n          })\n        })\n      ];\n      this.styleCache_[index] = style;\n    }\n    return style;\n  }.bind(this));\n\n  // For performance reasons, don't sort the features before rendering.\n  // The render order is not relevant for a heatmap representation.\n  this.setRenderOrder(null);\n\n  listen(this, RenderEventType.RENDER, this.handleRender_, this);\n};\n\ninherits(Heatmap, VectorLayer);\n\n\n/**\n * @param {Array.<string>} colors A list of colored.\n * @return {Uint8ClampedArray} An array.\n * @private\n */\nconst createGradient = function(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.getImageData(0, 0, width, height).data;\n};\n\n\n/**\n * @return {string} Data URL for a circle.\n * @private\n */\nHeatmap.prototype.createCircle_ = function() {\n  const radius = this.getRadius();\n  const blur = this.getBlur();\n  const halfSize = radius + blur + 1;\n  const size = 2 * halfSize;\n  const context = createCanvasContext2D(size, size);\n  context.shadowOffsetX = context.shadowOffsetY = this.shadow_;\n  context.shadowBlur = blur;\n  context.shadowColor = '#000';\n  context.beginPath();\n  const center = halfSize - this.shadow_;\n  context.arc(center, center, radius, 0, Math.PI * 2, true);\n  context.fill();\n  return context.canvas.toDataURL();\n};\n\n\n/**\n * Return the blur size in pixels.\n * @return {number} Blur size in pixels.\n * @api\n * @observable\n */\nHeatmap.prototype.getBlur = function() {\n  return /** @type {number} */ (this.get(Property.BLUR));\n};\n\n\n/**\n * Return the gradient colors as array of strings.\n * @return {Array.<string>} Colors.\n * @api\n * @observable\n */\nHeatmap.prototype.getGradient = function() {\n  return /** @type {Array.<string>} */ (this.get(Property.GRADIENT));\n};\n\n\n/**\n * Return the size of the radius in pixels.\n * @return {number} Radius size in pixel.\n * @api\n * @observable\n */\nHeatmap.prototype.getRadius = function() {\n  return /** @type {number} */ (this.get(Property.RADIUS));\n};\n\n\n/**\n * @private\n */\nHeatmap.prototype.handleGradientChanged_ = function() {\n  this.gradient_ = createGradient(this.getGradient());\n};\n\n\n/**\n * @private\n */\nHeatmap.prototype.handleStyleChanged_ = function() {\n  this.circleImage_ = this.createCircle_();\n  this.styleCache_ = new Array(256);\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/render/Event} event Post compose event\n * @private\n */\nHeatmap.prototype.handleRender_ = function(event) {\n  const context = event.context;\n  const canvas = context.canvas;\n  const image = context.getImageData(0, 0, canvas.width, canvas.height);\n  const view8 = image.data;\n  for (let i = 0, ii = view8.length; i < ii; i += 4) {\n    const alpha = view8[i + 3] * 4;\n    if (alpha) {\n      view8[i] = this.gradient_[alpha];\n      view8[i + 1] = this.gradient_[alpha + 1];\n      view8[i + 2] = this.gradient_[alpha + 2];\n    }\n  }\n  context.putImageData(image, 0, 0);\n};\n\n\n/**\n * Set the blur size in pixels.\n * @param {number} blur Blur size in pixels.\n * @api\n * @observable\n */\nHeatmap.prototype.setBlur = function(blur) {\n  this.set(Property.BLUR, blur);\n};\n\n\n/**\n * Set the gradient colors as array of strings.\n * @param {Array.<string>} colors Gradient.\n * @api\n * @observable\n */\nHeatmap.prototype.setGradient = function(colors) {\n  this.set(Property.GRADIENT, colors);\n};\n\n\n/**\n * Set the size of the radius in pixels.\n * @param {number} radius Radius size in pixel.\n * @api\n * @observable\n */\nHeatmap.prototype.setRadius = function(radius) {\n  this.set(Property.RADIUS, radius);\n};\n\nexport default Heatmap;\n","/**\n * @module ol/layer/Image\n */\nimport {inherits} from '../index.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {module:ol/source/Image} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Image~Options=} opt_options Layer options.\n * @api\n */\nconst ImageLayer = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n  Layer.call(this,  /** @type {module:ol/layer/Layer~Options} */ (options));\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.IMAGE;\n\n};\n\ninherits(ImageLayer, Layer);\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {module:ol/source/Image} Source.\n * @api\n */\nImageLayer.prototype.getSource;\nexport default ImageLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n","/**\n * @module ol/layer/Tile\n */\nimport {inherits} from '../index.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/source/Tile} [source] Source for this layer.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Tile~Options=} opt_options Tile layer options.\n * @api\n */\nconst TileLayer = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.preload;\n  delete baseOptions.useInterimTilesOnError;\n  Layer.call(this,  /** @type {module:ol/layer/Layer~Options} */ (baseOptions));\n\n  this.setPreload(options.preload !== undefined ? options.preload : 0);\n  this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n    options.useInterimTilesOnError : true);\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.TILE;\n\n};\n\ninherits(TileLayer, Layer);\n\n\n/**\n * Return the level as number to which we will preload tiles up to.\n * @return {number} The level to preload tiles up to.\n * @observable\n * @api\n */\nTileLayer.prototype.getPreload = function() {\n  return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n};\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {module:ol/source/Tile} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\n/**\n * Set the level as number to which we will preload tiles up to.\n * @param {number} preload The level to preload tiles up to.\n * @observable\n * @api\n */\nTileLayer.prototype.setPreload = function(preload) {\n  this.set(TileProperty.PRELOAD, preload);\n};\n\n\n/**\n * Whether we use interim tiles on error.\n * @return {boolean} Use interim tiles on error.\n * @observable\n * @api\n */\nTileLayer.prototype.getUseInterimTilesOnError = function() {\n  return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n};\n\n\n/**\n * Set whether we use interim tiles on error.\n * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n * @observable\n * @api\n */\nTileLayer.prototype.setUseInterimTilesOnError = function(useInterimTilesOnError) {\n  this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n};\nexport default TileLayer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport {inherits} from '../index.js';\nimport LayerType from '../LayerType.js';\nimport {assert} from '../asserts.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorTileRenderType from '../layer/VectorTileRenderType.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport const RenderType = {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {module:ol/layer/VectorTileRenderType|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance than the other options.\n *\n * When `declutter` is set to `true`, `'hybrid'` will be used instead of `'image'`.\n * @property {module:ol/source/VectorTile} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority. When set to `true`, a `renderMode` of `'image'` will be overridden with\n * `'hybrid'`.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load simultaneously.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created.\n * @property {(module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction)} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Vector}\n * @param {module:ol/layer/VectorTile~Options=} opt_options Options.\n * @api\n */\nconst VectorTileLayer = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  let renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n  assert(renderMode == undefined ||\n      renderMode == VectorTileRenderType.IMAGE ||\n      renderMode == VectorTileRenderType.HYBRID ||\n      renderMode == VectorTileRenderType.VECTOR,\n  28); // `renderMode` must be `'image'`, `'hybrid'` or `'vector'`\n  if (options.declutter && renderMode == VectorTileRenderType.IMAGE) {\n    renderMode = VectorTileRenderType.HYBRID;\n  }\n  options.renderMode = renderMode;\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.preload;\n  delete baseOptions.useInterimTilesOnError;\n  VectorLayer.call(this,  /** @type {module:ol/layer/Vector~Options} */ (baseOptions));\n\n  this.setPreload(options.preload ? options.preload : 0);\n  this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n    options.useInterimTilesOnError : true);\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.VECTOR_TILE;\n\n};\n\ninherits(VectorTileLayer, VectorLayer);\n\n\n/**\n * Return the level as number to which we will preload tiles up to.\n * @return {number} The level to preload tiles up to.\n * @observable\n * @api\n */\nVectorTileLayer.prototype.getPreload = function() {\n  return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n};\n\n\n/**\n * Whether we use interim tiles on error.\n * @return {boolean} Use interim tiles on error.\n * @observable\n * @api\n */\nVectorTileLayer.prototype.getUseInterimTilesOnError = function() {\n  return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n};\n\n\n/**\n * Set the level as number to which we will preload tiles up to.\n * @param {number} preload The level to preload tiles up to.\n * @observable\n * @api\n */\nVectorTileLayer.prototype.setPreload = function(preload) {\n  this.set(TileProperty.PRELOAD, preload);\n};\n\n\n/**\n * Set whether we use interim tiles on error.\n * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n * @observable\n * @api\n */\nVectorTileLayer.prototype.setUseInterimTilesOnError = function(useInterimTilesOnError) {\n  this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n};\n\n\n/**\n * Return the associated {@link module:ol/source/VectorTile vectortilesource} of the layer.\n * @function\n * @return {module:ol/source/VectorTile} Source.\n * @api\n */\nVectorTileLayer.prototype.getSource;\nexport default VectorTileLayer;\n","/**\n * @module ol/Tile\n */\nimport {inherits} from './index.js';\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments.\n *\n * @typedef {function(module:ol/Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(module:ol/tilecoord~TileCoord, number,\n *           module:ol/proj/Projection): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/events/EventTarget}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nconst Tile = function(tileCoord, state, opt_options) {\n  EventTarget.call(this);\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/tilecoord~TileCoord}\n   */\n  this.tileCoord = tileCoord;\n\n  /**\n   * @protected\n   * @type {module:ol/TileState}\n   */\n  this.state = state;\n\n  /**\n   * An \"interim\" tile for this tile. The interim tile may be used while this\n   * one is loading, for \"smooth\" transitions when changing params/dimensions\n   * on the source.\n   * @type {module:ol/Tile}\n   */\n  this.interimTile = null;\n\n  /**\n   * A key assigned to the tile. This is used by the tile source to determine\n   * if this tile can effectively be used, or if a new tile should be created\n   * and this one be used as an interim tile for this new tile.\n   * @type {string}\n   */\n  this.key = '';\n\n  /**\n   * The duration for the opacity transition.\n   * @type {number}\n   */\n  this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n  /**\n   * Lookup of start times for rendering transitions.  If the start time is\n   * equal to -1, the transition is complete.\n   * @type {Object.<number, number>}\n   */\n  this.transitionStarts_ = {};\n\n};\n\ninherits(Tile, EventTarget);\n\n\n/**\n * @protected\n */\nTile.prototype.changed = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @return {string} Key.\n */\nTile.prototype.getKey = function() {\n  return this.key + '/' + this.tileCoord;\n};\n\n/**\n * Get the interim tile most suitable for rendering using the chain of interim\n * tiles. This corresponds to the  most recent tile that has been loaded, if no\n * such tile exists, the original tile is returned.\n * @return {!module:ol/Tile} Best tile for rendering.\n */\nTile.prototype.getInterimTile = function() {\n  if (!this.interimTile) {\n    //empty chain\n    return this;\n  }\n  let tile = this.interimTile;\n\n  // find the first loaded tile and return it. Since the chain is sorted in\n  // decreasing order of creation time, there is no need to search the remainder\n  // of the list (all those tiles correspond to older requests and will be\n  // cleaned up by refreshInterimChain)\n  do {\n    if (tile.getState() == TileState.LOADED) {\n      return tile;\n    }\n    tile = tile.interimTile;\n  } while (tile);\n\n  // we can not find a better tile\n  return this;\n};\n\n/**\n * Goes through the chain of interim tiles and discards sections of the chain\n * that are no longer relevant.\n */\nTile.prototype.refreshInterimChain = function() {\n  if (!this.interimTile) {\n    return;\n  }\n\n  let tile = this.interimTile;\n  let prev = this;\n\n  do {\n    if (tile.getState() == TileState.LOADED) {\n      //we have a loaded tile, we can discard the rest of the list\n      //we would could abort any LOADING tile request\n      //older than this tile (i.e. any LOADING tile following this entry in the chain)\n      tile.interimTile = null;\n      break;\n    } else if (tile.getState() == TileState.LOADING) {\n      //keep this LOADING tile any loaded tiles later in the chain are\n      //older than this tile, so we're still interested in the request\n      prev = tile;\n    } else if (tile.getState() == TileState.IDLE) {\n      //the head of the list is the most current tile, we don't need\n      //to start any other requests for this chain\n      prev.interimTile = tile.interimTile;\n    } else {\n      prev = tile;\n    }\n    tile = prev.interimTile;\n  } while (tile);\n};\n\n/**\n * Get the tile coordinate for this tile.\n * @return {module:ol/tilecoord~TileCoord} The tile coordinate.\n * @api\n */\nTile.prototype.getTileCoord = function() {\n  return this.tileCoord;\n};\n\n\n/**\n * @return {module:ol/TileState} State.\n */\nTile.prototype.getState = function() {\n  return this.state;\n};\n\n/**\n * @param {module:ol/TileState} state State.\n */\nTile.prototype.setState = function(state) {\n  this.state = state;\n  this.changed();\n};\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @abstract\n * @api\n */\nTile.prototype.load = function() {};\n\n/**\n * Get the alpha value for rendering.\n * @param {number} id An id for the renderer.\n * @param {number} time The render frame time.\n * @return {number} A number between 0 and 1.\n */\nTile.prototype.getAlpha = function(id, time) {\n  if (!this.transition_) {\n    return 1;\n  }\n\n  let start = this.transitionStarts_[id];\n  if (!start) {\n    start = time;\n    this.transitionStarts_[id] = start;\n  } else if (start === -1) {\n    return 1;\n  }\n\n  const delta = time - start + (1000 / 60); // avoid rendering at 0\n  if (delta >= this.transition_) {\n    return 1;\n  }\n  return easeIn(delta / this.transition_);\n};\n\n/**\n * Determine if a tile is in an alpha transition.  A tile is considered in\n * transition if tile.getAlpha() has not yet been called or has been called\n * and returned 1.\n * @param {number} id An id for the renderer.\n * @return {boolean} The tile is in transition.\n */\nTile.prototype.inTransition = function(id) {\n  if (!this.transition_) {\n    return false;\n  }\n  return this.transitionStarts_[id] !== -1;\n};\n\n/**\n * Mark a transition as complete.\n * @param {number} id An id for the renderer.\n */\nTile.prototype.endTransition = function(id) {\n  if (this.transition_) {\n    this.transitionStarts_[id] = -1;\n  }\n};\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport {inherits} from './index.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @typedef {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nconst ImageTile = function(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n  Tile.call(this, tileCoord, state, opt_options);\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ = crossOrigin;\n\n  /**\n   * Image URI\n   *\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/Tile~LoadFunction}\n   */\n  this.tileLoadFunction_ = tileLoadFunction;\n\n};\n\ninherits(ImageTile, Tile);\n\n\n/**\n * @inheritDoc\n */\nImageTile.prototype.disposeInternal = function() {\n  if (this.state == TileState.LOADING) {\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n  }\n  if (this.interimTile) {\n    this.interimTile.dispose();\n  }\n  this.state = TileState.ABORT;\n  this.changed();\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n * @api\n */\nImageTile.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageTile.prototype.getKey = function() {\n  return this.src_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\nImageTile.prototype.handleImageError_ = function() {\n  this.state = TileState.ERROR;\n  this.unlistenImage_();\n  this.image_ = getBlankImage();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\nImageTile.prototype.handleImageLoad_ = function() {\n  if (this.image_.naturalWidth && this.image_.naturalHeight) {\n    this.state = TileState.LOADED;\n  } else {\n    this.state = TileState.EMPTY;\n  }\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nImageTile.prototype.load = function() {\n  if (this.state == TileState.ERROR) {\n    this.state = TileState.IDLE;\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.tileLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\nImageTile.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array.<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Tile coordinate.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {module:ol/tilecoord~TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {module:ol/tilecoord~TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {!module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const extent = tileGrid.getExtent();\n  let tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport {inherits} from './index.js';\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\n/**\n * @constructor\n * @extends {module:ol/structs/LRUCache.<module:ol/Tile>}\n * @param {number=} opt_highWaterMark High water mark.\n * @struct\n */\nconst TileCache = function(opt_highWaterMark) {\n\n  LRUCache.call(this, opt_highWaterMark);\n\n};\n\ninherits(TileCache, LRUCache);\n\n\n/**\n * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n */\nTileCache.prototype.expireCache = function(usedTiles) {\n  while (this.canExpireCache()) {\n    const tile = this.peekLast();\n    const zKey = tile.tileCoord[0].toString();\n    if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n      break;\n    } else {\n      this.pop().dispose();\n    }\n  }\n};\n\n\n/**\n * Prune all tiles from the cache that don't have the same z as the newest tile.\n */\nTileCache.prototype.pruneExceptNewestZ = function() {\n  if (this.getCount() === 0) {\n    return;\n  }\n  const key = this.peekFirstKey();\n  const tileCoord = fromKey(key);\n  const z = tileCoord[0];\n  this.forEach(function(tile) {\n    if (tile.tileCoord[0] !== z) {\n      this.remove(getKey(tile.tileCoord));\n      tile.dispose();\n    }\n  }, this);\n};\nexport default TileCache;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/coordinate~Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {module:ol/coordinate~Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  const dX = x - centroidX;\n  const dY = y - centroidY;\n  const distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {module:ol/extent~Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {module:ol/extent~Extent} targetExtent Target extent.\n * @param {module:ol/reproj/Triangulation} triangulation\n * Calculated triangulation.\n * @param {Array.<{extent: module:ol/extent~Extent,\n *                 image: (HTMLCanvasElement|Image|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  const context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0], y0 = source[0][1];\n    let x1 = source[1][0], y1 = source[1][1];\n    let x2 = source[2][0], y2 = source[2][1];\n    const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    const centroidX = (u0 + u1 + u2) / 3;\n    const centroidY = (v0 + v1 + v2) / 3;\n    const p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    const p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    const p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array.<module:ol/coordinate~Coordinate>} source\n * @property {Array.<module:ol/coordinate~Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/extent~Extent} targetExtent Target extent to triangulate.\n * @param {module:ol/extent~Extent} maxSourceExtent Maximal source extent that can be used.\n * @param {number} errorThreshold Acceptable error (in source units).\n * @constructor\n */\nconst Triangulation = function(sourceProj, targetProj, targetExtent,\n  maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object.<string, module:ol/coordinate~Coordinate>} */\n  let transformInvCache = {};\n  const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} c A coordinate.\n   * @return {module:ol/coordinate~Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    const key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array.<module:ol/reproj/Triangulation~Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  const destinationTopLeft = getTopLeft(targetExtent);\n  const destinationTopRight = getTopRight(targetExtent);\n  const destinationBottomRight = getBottomRight(targetExtent);\n  const destinationBottomLeft = getBottomLeft(targetExtent);\n  const sourceTopLeft = this.transformInv_(destinationTopLeft);\n  const sourceTopRight = this.transformInv_(destinationTopRight);\n  const sourceBottomRight = this.transformInv_(destinationBottomRight);\n  const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    let leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        const newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        const minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        const maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n\n/**\n * Adds triangle to the triangulation.\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function(a, b, c,\n  aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} d The target d coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @param {module:ol/coordinate~Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function(a, b, c, d,\n  aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  const sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  const wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  let needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      const targetQuadExtent = boundingExtent([a, b, c, d]);\n      const targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision |=\n          targetCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision |=\n          sourceCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      const centerSrc = this.transformInv_(center);\n\n      let dx;\n      if (wrapsX) {\n        const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      const centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        const bcSrc = this.transformInv_(bc);\n        const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        const daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        const abSrc = this.transformInv_(ab);\n        const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        const cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {module:ol/extent~Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function() {\n  const extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    const src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n\n/**\n * @return {Array.<module:ol/reproj/Triangulation~Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function() {\n  return this.triangles_;\n};\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\nimport {inherits} from '../index.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : module:ol/Tile} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/tilegrid/TileGrid} sourceTileGrid Source tile grid.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/tilegrid/TileGrid} targetTileGrid Target tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Coordinate of the tile.\n * @param {module:ol/tilecoord~TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} gutter Gutter of the source tiles.\n * @param {module:ol/reproj/Tile~FunctionType} getTileFunction\n *     Function returning source tiles (z, x, y, pixelRatio).\n * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n */\nconst ReprojTile = function(sourceProj, sourceTileGrid,\n  targetProj, targetTileGrid, tileCoord, wrappedTileCoord,\n  pixelRatio, gutter, getTileFunction,\n  opt_errorThreshold, opt_renderEdges) {\n  Tile.call(this, tileCoord, TileState.IDLE);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = gutter;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.sourceTileGrid_ = sourceTileGrid;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.targetTileGrid_ = targetTileGrid;\n\n  /**\n   * @private\n   * @type {module:ol/tilecoord~TileCoord}\n   */\n  this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n  /**\n   * @private\n   * @type {!Array.<module:ol/Tile>}\n   */\n  this.sourceTiles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.sourcesListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.sourceZ_ = 0;\n\n  const targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n  const maxTargetExtent = this.targetTileGrid_.getExtent();\n  let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n  const limitedTargetExtent = maxTargetExtent ?\n    getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n  if (getArea(limitedTargetExtent) === 0) {\n    // Tile is completely outside range -> EMPTY\n    // TODO: is it actually correct that the source even creates the tile ?\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  const sourceProjExtent = sourceProj.getExtent();\n  if (sourceProjExtent) {\n    if (!maxSourceExtent) {\n      maxSourceExtent = sourceProjExtent;\n    } else {\n      maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n    }\n  }\n\n  const targetResolution = targetTileGrid.getResolution(\n    this.wrappedTileCoord_[0]);\n\n  const targetCenter = getCenter(limitedTargetExtent);\n  const sourceResolution = calculateSourceResolution(\n    sourceProj, targetProj, targetCenter, targetResolution);\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    // invalid sourceResolution -> EMPTY\n    // probably edges of the projections when no extent is defined\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  const errorThresholdInPixels = opt_errorThreshold !== undefined ?\n    opt_errorThreshold : ERROR_THRESHOLD;\n\n  /**\n   * @private\n   * @type {!module:ol/reproj/Triangulation}\n   */\n  this.triangulation_ = new Triangulation(\n    sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n    sourceResolution * errorThresholdInPixels);\n\n  if (this.triangulation_.getTriangles().length === 0) {\n    // no valid triangles -> EMPTY\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n  let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n  if (maxSourceExtent) {\n    if (sourceProj.canWrapX()) {\n      sourceExtent[1] = clamp(\n        sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n      sourceExtent[3] = clamp(\n        sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n    } else {\n      sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n    }\n  }\n\n  if (!getArea(sourceExtent)) {\n    this.state = TileState.EMPTY;\n  } else {\n    const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n      sourceExtent, this.sourceZ_);\n\n    for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n      for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n        const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n        if (tile) {\n          this.sourceTiles_.push(tile);\n        }\n      }\n    }\n\n    if (this.sourceTiles_.length === 0) {\n      this.state = TileState.EMPTY;\n    }\n  }\n};\n\ninherits(ReprojTile, Tile);\n\n\n/**\n * @inheritDoc\n */\nReprojTile.prototype.disposeInternal = function() {\n  if (this.state == TileState.LOADING) {\n    this.unlistenSources_();\n  }\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the HTML Canvas element for this tile.\n * @return {HTMLCanvasElement} Canvas.\n */\nReprojTile.prototype.getImage = function() {\n  return this.canvas_;\n};\n\n\n/**\n * @private\n */\nReprojTile.prototype.reproject_ = function() {\n  const sources = [];\n  this.sourceTiles_.forEach(function(tile, i, arr) {\n    if (tile && tile.getState() == TileState.LOADED) {\n      sources.push({\n        extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n        image: tile.getImage()\n      });\n    }\n  }.bind(this));\n  this.sourceTiles_.length = 0;\n\n  if (sources.length === 0) {\n    this.state = TileState.ERROR;\n  } else {\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const width = typeof size === 'number' ? size : size[0];\n    const height = typeof size === 'number' ? size : size[1];\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_);\n    this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n      sourceResolution, this.sourceTileGrid_.getExtent(),\n      targetResolution, targetExtent, this.triangulation_, sources,\n      this.gutter_, this.renderEdges_);\n\n    this.state = TileState.LOADED;\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nReprojTile.prototype.load = function() {\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      const state = tile.getState();\n      if (state == TileState.IDLE || state == TileState.LOADING) {\n        leftToLoad++;\n\n        const sourceListenKey = listen(tile, EventType.CHANGE,\n          function(e) {\n            const state = tile.getState();\n            if (state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          }, this);\n        this.sourcesListenerKeys_.push(sourceListenKey);\n      }\n    }.bind(this));\n\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      const state = tile.getState();\n      if (state == TileState.IDLE) {\n        tile.load();\n      }\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    }\n  }\n};\n\n\n/**\n * @private\n */\nReprojTile.prototype.unlistenSources_ = function() {\n  this.sourcesListenerKeys_.forEach(unlistenByKey);\n  this.sourcesListenerKeys_ = null;\n};\nexport default ReprojTile;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            const y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array.<string>} templates Templates.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array.<module:ol/Tile~UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array.<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array.<module:ol/coordinate~Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array.<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array.<module:ol/size~Size>} [sizes] Sizes.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array.<module:ol/size~Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n *\n * @constructor\n * @param {module:ol/tilegrid/TileGrid~Options} options Tile grid options.\n * @struct\n * @api\n */\nconst TileGrid = function(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array.<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  let zoomFactor;\n  if (!options.origins) {\n    for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/coordinate~Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  const extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array.<number|module:ol/size~Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|module:ol/size~Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array.<module:ol/TileRange>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      const tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n\n/**\n * @private\n * @type {module:ol/tilecoord~TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(module:ol/tilecoord~TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function(extent, zoom, callback) {\n  const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, module:ol/TileRange): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function(tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  let tileRange, x, y;\n  let tileCoordExtent = null;\n  let z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function() {\n  return this.maxZoom;\n};\n\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function() {\n  return this.minZoom;\n};\n\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {module:ol/coordinate~Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function(z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function(z) {\n  return this.resolutions_[z];\n};\n\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array.<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function(tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      const minX = tileCoord[1] * 2;\n      const minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function(z, tileRange, opt_extent) {\n  const origin = this.getOrigin(z);\n  const resolution = this.getResolution(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange=} opt_tileRange Temporary tile range object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function(extent, z, opt_tileRange) {\n  const tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  const minX = tileCoord[1];\n  const minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {module:ol/coordinate~Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function(tileCoord) {\n  const origin = this.getOrigin(tileCoord[0]);\n  const resolution = this.getResolution(tileCoord[0]);\n  const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Temporary extent object.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function(tileCoord, opt_extent) {\n  const origin = this.getOrigin(tileCoord[0]);\n  const resolution = this.getResolution(tileCoord[0]);\n  const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  const minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  const maxX = minX + tileSize[0] * resolution;\n  const maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.  This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function(coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *     intersections go to the higher tile coordinate, let edge intersections\n *     go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function(\n  x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  const z = this.getZForResolution(resolution);\n  const scale = resolution / this.getResolution(z);\n  const origin = this.getOrigin(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  let tileCoordX = scale * xFromOrigin / tileSize[0];\n  let tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.  This method is for integer zoom\n * levels.  The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *     intersections go to the higher tile coordinate, let edge intersections\n *     go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  const origin = this.getOrigin(z);\n  const resolution = this.getResolution(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  let tileCoordX = xFromOrigin / tileSize[0];\n  let tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function(coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function(tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `module:ol/size~Size`, run the result through `module:ol/size~Size.toSize()`.\n * @param {number} z Z.\n * @return {number|module:ol/size~Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function(z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n\n/**\n * @param {number} z Zoom level.\n * @return {module:ol/TileRange} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function(z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *     If 1, the nearest lower resolution will be used. If -1, the nearest\n *     higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function(resolution, opt_direction) {\n  const z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n\n/**\n * @param {!module:ol/extent~Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function(extent) {\n  const length = this.resolutions_.length;\n  const fullTileRanges = new Array(length);\n  for (let z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {assign} from './obj.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {module:ol/tilegrid~XYZOptions=} opt_options Tile grid options.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const options = /** @type {module:ol/tilegrid/TileGrid~Options} */ ({});\n  assign(options, opt_options !== undefined ?\n    opt_options : /** @type {module:ol/tilegrid~XYZOptions} */ ({}));\n  if (options.extent === undefined) {\n    options.extent = getProjection('EPSG:3857').getExtent();\n  }\n  options.resolutions = resolutionsFromExtent(\n    options.extent, options.maxZoom, options.tileSize);\n  delete options.maxZoom;\n\n  return new TileGrid(options);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array.<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  const maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  const maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport {inherits} from '../index.js';\nimport {UNDEFINED} from '../functions.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from '../source/Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/source/Source}\n * @param {module:ol/source/Tile~Options=} options SourceTile source options.\n * @api\n */\nconst TileSource = function(options) {\n\n  Source.call(this, {\n    attributions: options.attributions,\n    extent: options.extent,\n    projection: options.projection,\n    state: options.state,\n    wrapX: options.wrapX\n  });\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n    options.tilePixelRatio : 1;\n\n  /**\n   * @protected\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n  /**\n   * @protected\n   * @type {module:ol/TileCache}\n   */\n  this.tileCache = new TileCache(options.cacheSize);\n\n  /**\n   * @protected\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize = [0, 0];\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.key_ = '';\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~Options}\n   */\n  this.tileOptions = {transition: options.transition};\n\n};\n\ninherits(TileSource, Source);\n\n\n/**\n * @return {boolean} Can expire cache.\n */\nTileSource.prototype.canExpireCache = function() {\n  return this.tileCache.canExpireCache();\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n */\nTileSource.prototype.expireCache = function(projection, usedTiles) {\n  const tileCache = this.getTileCacheForProjection(projection);\n  if (tileCache) {\n    tileCache.expireCache(usedTiles);\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} z Zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {function(module:ol/Tile):(boolean|undefined)} callback Called with each\n *     loaded tile.  If the callback returns `false`, the tile will not be\n *     considered loaded.\n * @return {boolean} The tile range is fully covered with loaded tiles.\n */\nTileSource.prototype.forEachLoadedTile = function(projection, z, tileRange, callback) {\n  const tileCache = this.getTileCacheForProjection(projection);\n  if (!tileCache) {\n    return false;\n  }\n\n  let covered = true;\n  let tile, tileCoordKey, loaded;\n  for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n    for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n      tileCoordKey = getKeyZXY(z, x, y);\n      loaded = false;\n      if (tileCache.containsKey(tileCoordKey)) {\n        tile = /** @type {!module:ol/Tile} */ (tileCache.get(tileCoordKey));\n        loaded = tile.getState() === TileState.LOADED;\n        if (loaded) {\n          loaded = (callback(tile) !== false);\n        }\n      }\n      if (!loaded) {\n        covered = false;\n      }\n    }\n  }\n  return covered;\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {number} Gutter.\n */\nTileSource.prototype.getGutter = function(projection) {\n  return 0;\n};\n\n\n/**\n * Return the key to be used for all tiles in the source.\n * @return {string} The key for all tiles.\n * @protected\n */\nTileSource.prototype.getKey = function() {\n  return this.key_;\n};\n\n\n/**\n * Set the value to be used as the key for all tiles in the source.\n * @param {string} key The key for tiles.\n * @protected\n */\nTileSource.prototype.setKey = function(key) {\n  if (this.key_ !== key) {\n    this.key_ = key;\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {boolean} Opaque.\n */\nTileSource.prototype.getOpaque = function(projection) {\n  return this.opaque_;\n};\n\n\n/**\n * @inheritDoc\n */\nTileSource.prototype.getResolutions = function() {\n  return this.tileGrid.getResolutions();\n};\n\n\n/**\n * @abstract\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n */\nTileSource.prototype.getTile = function(z, x, y, pixelRatio, projection) {};\n\n\n/**\n * Return the tile grid of the tile source.\n * @return {module:ol/tilegrid/TileGrid} Tile grid.\n * @api\n */\nTileSource.prototype.getTileGrid = function() {\n  return this.tileGrid;\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid.\n */\nTileSource.prototype.getTileGridForProjection = function(projection) {\n  if (!this.tileGrid) {\n    return getTileGridForProjection(projection);\n  } else {\n    return this.tileGrid;\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/TileCache} Tile cache.\n * @protected\n */\nTileSource.prototype.getTileCacheForProjection = function(projection) {\n  const thisProj = this.getProjection();\n  if (thisProj && !equivalent(thisProj, projection)) {\n    return null;\n  } else {\n    return this.tileCache;\n  }\n};\n\n\n/**\n * Get the tile pixel ratio for this source. Subclasses may override this\n * method, which is meant to return a supported pixel ratio that matches the\n * provided `pixelRatio` as close as possible.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Tile pixel ratio.\n */\nTileSource.prototype.getTilePixelRatio = function(pixelRatio) {\n  return this.tilePixelRatio_;\n};\n\n\n/**\n * @param {number} z Z.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/size~Size} Tile size.\n */\nTileSource.prototype.getTilePixelSize = function(z, pixelRatio, projection) {\n  const tileGrid = this.getTileGridForProjection(projection);\n  const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n  const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n  if (tilePixelRatio == 1) {\n    return tileSize;\n  } else {\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n};\n\n\n/**\n * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n * is outside the resolution and extent range of the tile grid, `null` will be\n * returned.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection=} opt_projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n *     null if no tile URL should be created for the passed `tileCoord`.\n */\nTileSource.prototype.getTileCoordForTileUrlFunction = function(tileCoord, opt_projection) {\n  const projection = opt_projection !== undefined ?\n    opt_projection : this.getProjection();\n  const tileGrid = this.getTileGridForProjection(projection);\n  if (this.getWrapX() && projection.isGlobal()) {\n    tileCoord = wrapX(tileGrid, tileCoord, projection);\n  }\n  return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n};\n\n\n/**\n * @inheritDoc\n */\nTileSource.prototype.refresh = function() {\n  this.tileCache.clear();\n  this.changed();\n};\n\n\n/**\n * Marks a tile coord as being used, without triggering a load.\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nTileSource.prototype.useTile = UNDEFINED;\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/Tile} tile The tile.\n */\nexport const TileSourceEvent = function(type, tile) {\n\n  Event.call(this, type);\n\n  /**\n   * The tile related to the event.\n   * @type {module:ol/Tile}\n   * @api\n   */\n  this.tile = tile;\n\n};\ninherits(TileSourceEvent, Event);\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n","/**\n * @module ol/source/UrlTile\n */\nimport {getUid, inherits} from '../index.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from '../source/Tile.js';\nimport TileEventType from '../source/TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {module:ol/Tile~LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array.<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @constructor\n * @abstract\n * @fires module:ol/source/TileEvent\n * @extends {module:ol/source/Tile}\n * @param {module:ol/source/UrlTile~Options=} options Image tile options.\n */\nconst UrlTile = function(options) {\n\n  TileSource.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    extent: options.extent,\n    opaque: options.opaque,\n    projection: options.projection,\n    state: options.state,\n    tileGrid: options.tileGrid,\n    tilePixelRatio: options.tilePixelRatio,\n    wrapX: options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~LoadFunction}\n   */\n  this.tileLoadFunction = options.tileLoadFunction;\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~UrlFunction}\n   */\n  this.tileUrlFunction = this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) : nullTileUrlFunction;\n\n  /**\n   * @protected\n   * @type {!Array.<string>|null}\n   */\n  this.urls = null;\n\n  if (options.urls) {\n    this.setUrls(options.urls);\n  } else if (options.url) {\n    this.setUrl(options.url);\n  }\n  if (options.tileUrlFunction) {\n    this.setTileUrlFunction(options.tileUrlFunction);\n  }\n\n  /**\n   * @private\n   * @type {!Object.<number, boolean>}\n   */\n  this.tileLoadingKeys_ = {};\n\n};\n\ninherits(UrlTile, TileSource);\n\n\n/**\n * @type {module:ol/Tile~UrlFunction|undefined}\n * @protected\n */\nUrlTile.prototype.fixedTileUrlFunction;\n\n/**\n * Return the tile load function of the source.\n * @return {module:ol/Tile~LoadFunction} TileLoadFunction\n * @api\n */\nUrlTile.prototype.getTileLoadFunction = function() {\n  return this.tileLoadFunction;\n};\n\n\n/**\n * Return the tile URL function of the source.\n * @return {module:ol/Tile~UrlFunction} TileUrlFunction\n * @api\n */\nUrlTile.prototype.getTileUrlFunction = function() {\n  return this.tileUrlFunction;\n};\n\n\n/**\n * Return the URLs used for this source.\n * When a tileUrlFunction is used instead of url or urls,\n * null will be returned.\n * @return {!Array.<string>|null} URLs.\n * @api\n */\nUrlTile.prototype.getUrls = function() {\n  return this.urls;\n};\n\n\n/**\n * Handle tile change events.\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nUrlTile.prototype.handleTileChange = function(event) {\n  const tile = /** @type {module:ol/Tile} */ (event.target);\n  const uid = getUid(tile);\n  const tileState = tile.getState();\n  let type;\n  if (tileState == TileState.LOADING) {\n    this.tileLoadingKeys_[uid] = true;\n    type = TileEventType.TILELOADSTART;\n  } else if (uid in this.tileLoadingKeys_) {\n    delete this.tileLoadingKeys_[uid];\n    type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n      (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n        TileEventType.TILELOADEND : undefined;\n  }\n  if (type != undefined) {\n    this.dispatchEvent(new TileSourceEvent(type, tile));\n  }\n};\n\n\n/**\n * Set the tile load function of the source.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @api\n */\nUrlTile.prototype.setTileLoadFunction = function(tileLoadFunction) {\n  this.tileCache.clear();\n  this.tileLoadFunction = tileLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the tile URL function of the source.\n * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile URL function.\n * @param {string=} opt_key Optional new tile key for the source.\n * @api\n */\nUrlTile.prototype.setTileUrlFunction = function(tileUrlFunction, opt_key) {\n  this.tileUrlFunction = tileUrlFunction;\n  this.tileCache.pruneExceptNewestZ();\n  if (typeof opt_key !== 'undefined') {\n    this.setKey(opt_key);\n  } else {\n    this.changed();\n  }\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string} url URL.\n * @api\n */\nUrlTile.prototype.setUrl = function(url) {\n  const urls = this.urls = expandUrl(url);\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTemplates(urls, this.tileGrid), url);\n};\n\n\n/**\n * Set the URLs to use for requests.\n * @param {Array.<string>} urls URLs.\n * @api\n */\nUrlTile.prototype.setUrls = function(urls) {\n  this.urls = urls;\n  const key = urls.join('\\n');\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTemplates(urls, this.tileGrid), key);\n};\n\n\n/**\n * @inheritDoc\n */\nUrlTile.prototype.useTile = function(z, x, y) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    this.tileCache.get(tileCoordKey);\n  }\n};\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid, inherits} from '../index.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from '../source/UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/State} [state] Source state.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @constructor\n * @fires module:ol/source/Tile~TileSourceEvent\n * @extends {module:ol/source/UrlTile}\n * @param {module:ol/source/TileImage~Options=} options Image tile options.\n * @api\n */\nconst TileImage = function(options) {\n\n  UrlTile.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    extent: options.extent,\n    opaque: options.opaque,\n    projection: options.projection,\n    state: options.state,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction ?\n      options.tileLoadFunction : defaultTileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @protected\n   * @type {?string}\n   */\n  this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @protected\n   * @type {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n   *        ?string, module:ol/Tile~LoadFunction, module:ol/Tile~Options=)}\n   */\n  this.tileClass = options.tileClass !== undefined ?\n    options.tileClass : ImageTile;\n\n  /**\n   * @protected\n   * @type {!Object.<string, module:ol/TileCache>}\n   */\n  this.tileCacheForProjection = {};\n\n  /**\n   * @protected\n   * @type {!Object.<string, module:ol/tilegrid/TileGrid>}\n   */\n  this.tileGridForProjection = {};\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderReprojectionEdges_ = false;\n};\n\ninherits(TileImage, UrlTile);\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.canExpireCache = function() {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.canExpireCache.call(this);\n  }\n  if (this.tileCache.canExpireCache()) {\n    return true;\n  } else {\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.expireCache = function(projection, usedTiles) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n    return;\n  }\n  const usedTileCache = this.getTileCacheForProjection(projection);\n\n  this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n  for (const id in this.tileCacheForProjection) {\n    const tileCache = this.tileCacheForProjection[id];\n    tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getGutter = function(projection) {\n  if (ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n    return 0;\n  } else {\n    return this.getGutterInternal();\n  }\n};\n\n\n/**\n * @protected\n * @return {number} Gutter.\n */\nTileImage.prototype.getGutterInternal = function() {\n  return 0;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getOpaque = function(projection) {\n  if (ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n    return false;\n  } else {\n    return UrlTile.prototype.getOpaque.call(this, projection);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTileGridForProjection = function(projection) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n  }\n  const thisProj = this.getProjection();\n  if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n    return this.tileGrid;\n  } else {\n    const projKey = getUid(projection).toString();\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n    }\n    return (\n      /** @type {!module:ol/tilegrid/TileGrid} */ (this.tileGridForProjection[projKey])\n    );\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTileCacheForProjection = function(projection) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n  }\n  const thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n    return this.tileCache;\n  } else {\n    const projKey = getUid(projection).toString();\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {string} key The key set on the tile.\n * @return {!module:ol/Tile} Tile.\n * @private\n */\nTileImage.prototype.createTile_ = function(z, x, y, pixelRatio, projection, key) {\n  const tileCoord = [z, x, y];\n  const urlTileCoord = this.getTileCoordForTileUrlFunction(\n    tileCoord, projection);\n  const tileUrl = urlTileCoord ?\n    this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n  const tile = new this.tileClass(\n    tileCoord,\n    tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n    tileUrl !== undefined ? tileUrl : '',\n    this.crossOrigin,\n    this.tileLoadFunction,\n    this.tileOptions);\n  tile.key = key;\n  listen(tile, EventType.CHANGE,\n    this.handleTileChange, this);\n  return tile;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const sourceProjection = /** @type {!module:ol/proj/Projection} */ (this.getProjection());\n  if (!ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n  } else {\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = /** @type {!module:ol/Tile} */ (cache.get(tileCoordKey));\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    } else {\n      const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n      const targetTileGrid = this.getTileGridForProjection(projection);\n      const wrappedTileCoord =\n          this.getTileCoordForTileUrlFunction(tileCoord, projection);\n      const newTile = new ReprojTile(\n        sourceProjection, sourceTileGrid,\n        projection, targetTileGrid,\n        tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n        this.getGutterInternal(),\n        function(z, x, y, pixelRatio) {\n          return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n        }.bind(this), this.reprojectionErrorThreshold_,\n        this.renderReprojectionEdges_);\n      newTile.key = key;\n\n      if (tile) {\n        newTile.interimTile = tile;\n        newTile.refreshInterimChain();\n        cache.replace(tileCoordKey, newTile);\n      } else {\n        cache.set(tileCoordKey, newTile);\n      }\n      return newTile;\n    }\n  }\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {!module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n * @protected\n */\nTileImage.prototype.getTileInternal = function(z, x, y, pixelRatio, projection) {\n  let tile = null;\n  const tileCoordKey = getKeyZXY(z, x, y);\n  const key = this.getKey();\n  if (!this.tileCache.containsKey(tileCoordKey)) {\n    tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n    this.tileCache.set(tileCoordKey, tile);\n  } else {\n    tile = this.tileCache.get(tileCoordKey);\n    if (tile.key != key) {\n      // The source's params changed. If the tile has an interim tile and if we\n      // can use it then we use it. Otherwise we create a new tile.  In both\n      // cases we attempt to assign an interim tile to the new tile.\n      const interimTile = tile;\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n      //make the new tile the head of the list,\n      if (interimTile.getState() == TileState.IDLE) {\n        //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n        tile.interimTile = interimTile.interimTile;\n      } else {\n        tile.interimTile = interimTile;\n      }\n      tile.refreshInterimChain();\n      this.tileCache.replace(tileCoordKey, tile);\n    }\n  }\n  return tile;\n};\n\n\n/**\n * Sets whether to render reprojection edges or not (usually for debugging).\n * @param {boolean} render Render the edges.\n * @api\n */\nTileImage.prototype.setRenderReprojectionEdges = function(render) {\n  if (!ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render) {\n    return;\n  }\n  this.renderReprojectionEdges_ = render;\n  for (const id in this.tileCacheForProjection) {\n    this.tileCacheForProjection[id].clear();\n  }\n  this.changed();\n};\n\n\n/**\n * Sets the tile grid to use when reprojecting the tiles to the given\n * projection instead of the default tile grid for the projection.\n *\n * This can be useful when the default tile grid cannot be created\n * (e.g. projection has no extent defined) or\n * for optimization reasons (custom tile size, resolutions, ...).\n *\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {module:ol/tilegrid/TileGrid} tilegrid Tile grid to use for the projection.\n * @api\n */\nTileImage.prototype.setTileGridForProjection = function(projection, tilegrid) {\n  if (ENABLE_RASTER_REPROJECTION) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj).toString();\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  imageTile.getImage().src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/XYZ~Options=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    createXYZ({\n      extent: extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {module:ol/source/XYZ}\n * @param {module:ol/source/OSM~Options=} [opt_options] Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\nexport default OSM;\n","/**\n * @module ol/control/FullScreen\n */\nimport {inherits} from '../index.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @return {string} Change type.\n */\nconst getChangeType = (function() {\n  let changeType;\n  return function() {\n    if (!changeType) {\n      const body = document.body;\n      if (body.webkitRequestFullscreen) {\n        changeType = 'webkitfullscreenchange';\n      } else if (body.mozRequestFullScreen) {\n        changeType = 'mozfullscreenchange';\n      } else if (body.msRequestFullscreen) {\n        changeType = 'MSFullscreenChange';\n      } else if (body.requestFullscreen) {\n        changeType = 'fullscreenchange';\n      }\n    }\n    return changeType;\n  };\n})();\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Element} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Element} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {Element|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {Element|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/FullScreen~Options=} opt_options Options.\n * @api\n */\nconst FullScreen = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.cssClassName_ = options.className !== undefined ? options.className :\n    'ol-full-screen';\n\n  const label = options.label !== undefined ? options.label : '\\u2922';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.labelNode_ = typeof label === 'string' ?\n    document.createTextNode(label) : label;\n\n  const labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.labelActiveNode_ = typeof labelActive === 'string' ?\n    document.createTextNode(labelActive) : labelActive;\n\n  const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n  const button = document.createElement('button');\n  button.className = this.cssClassName_ + '-' + isFullScreen();\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(this.labelNode_);\n\n  listen(button, EventType.CLICK,\n    this.handleClick_, this);\n\n  const cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n      ' ' + CLASS_CONTROL + ' ' +\n      (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    target: options.target\n  });\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.keys_ = options.keys !== undefined ? options.keys : false;\n\n  /**\n   * @private\n   * @type {Element|string|undefined}\n   */\n  this.source_ = options.source;\n\n};\n\ninherits(FullScreen, Control);\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nFullScreen.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleFullScreen_();\n};\n\n\n/**\n * @private\n */\nFullScreen.prototype.handleFullScreen_ = function() {\n  if (!isFullScreenSupported()) {\n    return;\n  }\n  const map = this.getMap();\n  if (!map) {\n    return;\n  }\n  if (isFullScreen()) {\n    exitFullScreen();\n  } else {\n    let element;\n    if (this.source_) {\n      element = typeof this.source_ === 'string' ?\n        document.getElementById(this.source_) :\n        this.source_;\n    } else {\n      element = map.getTargetElement();\n    }\n    if (this.keys_) {\n      requestFullScreenWithKeys(element);\n\n    } else {\n      requestFullScreen(element);\n    }\n  }\n};\n\n\n/**\n * @private\n */\nFullScreen.prototype.handleFullScreenChange_ = function() {\n  const button = this.element.firstElementChild;\n  const map = this.getMap();\n  if (isFullScreen()) {\n    button.className = this.cssClassName_ + '-true';\n    replaceNode(this.labelActiveNode_, this.labelNode_);\n  } else {\n    button.className = this.cssClassName_ + '-false';\n    replaceNode(this.labelNode_, this.labelActiveNode_);\n  }\n  if (map) {\n    map.updateSize();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nFullScreen.prototype.setMap = function(map) {\n  Control.prototype.setMap.call(this, map);\n  if (map) {\n    this.listenerKeys.push(listen(document,\n      getChangeType(),\n      this.handleFullScreenChange_, this)\n    );\n  }\n};\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  const body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.mozFullScreen ||\n    document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {Element} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {Element} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.mozRequestFullScreenWithKeys) {\n    element.mozRequestFullScreenWithKeys();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/Overlay\n */\nimport {inherits} from './index.js';\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {Element} [element] The overlay element.\n * @property {Array.<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {module:ol/coordinate~Coordinate} [position] The overlay position\n * in map projection.\n * @property {module:ol/OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name `ol-overlaycontainer`.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {module:ol/Overlay~PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/Overlay~Options} options Overlay options.\n * @api\n */\nconst Overlay = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/Overlay~Options}\n   */\n  this.options = options;\n\n  /**\n   * @protected\n   * @type {number|string|undefined}\n   */\n  this.id = options.id;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.insertFirst = options.insertFirst !== undefined ?\n    options.insertFirst : true;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n  /**\n   * @protected\n   * @type {Element}\n   */\n  this.element = document.createElement('DIV');\n  this.element.className = options.className !== undefined ?\n    options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n  this.element.style.position = 'absolute';\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n  /**\n   * @protected\n   * @type {module:ol/Overlay~PanOptions}\n   */\n  this.autoPanAnimation = options.autoPanAnimation || /** @type {module:ol/Overlay~PanOptions} */ ({});\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.autoPanMargin = options.autoPanMargin !== undefined ?\n    options.autoPanMargin : 20;\n\n  /**\n   * @protected\n   * @type {{bottom_: string,\n   *         left_: string,\n   *         right_: string,\n   *         top_: string,\n   *         visible: boolean}}\n   */\n  this.rendered = {\n    bottom_: '',\n    left_: '',\n    right_: '',\n    top_: '',\n    visible: true\n  };\n\n  /**\n   * @protected\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapPostrenderListenerKey = null;\n\n  listen(\n    this, getChangeEventType(Property.ELEMENT),\n    this.handleElementChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.MAP),\n    this.handleMapChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.OFFSET),\n    this.handleOffsetChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.POSITION),\n    this.handlePositionChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.POSITIONING),\n    this.handlePositioningChanged, this);\n\n  if (options.element !== undefined) {\n    this.setElement(options.element);\n  }\n\n  this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n  this.setPositioning(options.positioning !== undefined ?\n    /** @type {module:ol/OverlayPositioning} */ (options.positioning) :\n    OverlayPositioning.TOP_LEFT);\n\n  if (options.position !== undefined) {\n    this.setPosition(options.position);\n  }\n\n};\n\ninherits(Overlay, BaseObject);\n\n\n/**\n * Get the DOM element of this overlay.\n * @return {Element|undefined} The Element containing the overlay.\n * @observable\n * @api\n */\nOverlay.prototype.getElement = function() {\n  return /** @type {Element|undefined} */ (this.get(Property.ELEMENT));\n};\n\n\n/**\n * Get the overlay identifier which is set on constructor.\n * @return {number|string|undefined} Id.\n * @api\n */\nOverlay.prototype.getId = function() {\n  return this.id;\n};\n\n\n/**\n * Get the map associated with this overlay.\n * @return {module:ol/PluggableMap|undefined} The map that the\n * overlay is part of.\n * @observable\n * @api\n */\nOverlay.prototype.getMap = function() {\n  return (\n    /** @type {module:ol/PluggableMap|undefined} */ (this.get(Property.MAP))\n  );\n};\n\n\n/**\n * Get the offset of this overlay.\n * @return {Array.<number>} The offset.\n * @observable\n * @api\n */\nOverlay.prototype.getOffset = function() {\n  return /** @type {Array.<number>} */ (this.get(Property.OFFSET));\n};\n\n\n/**\n * Get the current position of this overlay.\n * @return {module:ol/coordinate~Coordinate|undefined} The spatial point that the overlay is\n *     anchored at.\n * @observable\n * @api\n */\nOverlay.prototype.getPosition = function() {\n  return (\n    /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(Property.POSITION))\n  );\n};\n\n\n/**\n * Get the current positioning of this overlay.\n * @return {module:ol/OverlayPositioning} How the overlay is positioned\n *     relative to its point on the map.\n * @observable\n * @api\n */\nOverlay.prototype.getPositioning = function() {\n  return (\n    /** @type {module:ol/OverlayPositioning} */ (this.get(Property.POSITIONING))\n  );\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handleElementChanged = function() {\n  removeChildren(this.element);\n  const element = this.getElement();\n  if (element) {\n    this.element.appendChild(element);\n  }\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handleMapChanged = function() {\n  if (this.mapPostrenderListenerKey) {\n    removeNode(this.element);\n    unlistenByKey(this.mapPostrenderListenerKey);\n    this.mapPostrenderListenerKey = null;\n  }\n  const map = this.getMap();\n  if (map) {\n    this.mapPostrenderListenerKey = listen(map,\n      MapEventType.POSTRENDER, this.render, this);\n    this.updatePixelPosition();\n    const container = this.stopEvent ?\n      map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n    if (this.insertFirst) {\n      container.insertBefore(this.element, container.childNodes[0] || null);\n    } else {\n      container.appendChild(this.element);\n    }\n  }\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.render = function() {\n  this.updatePixelPosition();\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handleOffsetChanged = function() {\n  this.updatePixelPosition();\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handlePositionChanged = function() {\n  this.updatePixelPosition();\n  if (this.get(Property.POSITION) && this.autoPan) {\n    this.panIntoView();\n  }\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handlePositioningChanged = function() {\n  this.updatePixelPosition();\n};\n\n\n/**\n * Set the DOM element to be associated with this overlay.\n * @param {Element|undefined} element The Element containing the overlay.\n * @observable\n * @api\n */\nOverlay.prototype.setElement = function(element) {\n  this.set(Property.ELEMENT, element);\n};\n\n\n/**\n * Set the map to be associated with this overlay.\n * @param {module:ol/PluggableMap|undefined} map The map that the\n * overlay is part of.\n * @observable\n * @api\n */\nOverlay.prototype.setMap = function(map) {\n  this.set(Property.MAP, map);\n};\n\n\n/**\n * Set the offset for this overlay.\n * @param {Array.<number>} offset Offset.\n * @observable\n * @api\n */\nOverlay.prototype.setOffset = function(offset) {\n  this.set(Property.OFFSET, offset);\n};\n\n\n/**\n * Set the position for this overlay. If the position is `undefined` the\n * overlay is hidden.\n * @param {module:ol/coordinate~Coordinate|undefined} position The spatial point that the overlay\n *     is anchored at.\n * @observable\n * @api\n */\nOverlay.prototype.setPosition = function(position) {\n  this.set(Property.POSITION, position);\n};\n\n\n/**\n * Pan the map so that the overlay is entirely visible in the current viewport\n * (if necessary).\n * @protected\n */\nOverlay.prototype.panIntoView = function() {\n  const map = this.getMap();\n\n  if (!map || !map.getTargetElement()) {\n    return;\n  }\n\n  const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n  const element = /** @type {!Element} */ (this.getElement());\n  const overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n  const margin = this.autoPanMargin;\n  if (!containsExtent(mapRect, overlayRect)) {\n    // the overlay is not completely inside the viewport, so pan the map\n    const offsetLeft = overlayRect[0] - mapRect[0];\n    const offsetRight = mapRect[2] - overlayRect[2];\n    const offsetTop = overlayRect[1] - mapRect[1];\n    const offsetBottom = mapRect[3] - overlayRect[3];\n\n    const delta = [0, 0];\n    if (offsetLeft < 0) {\n      // move map to the left\n      delta[0] = offsetLeft - margin;\n    } else if (offsetRight < 0) {\n      // move map to the right\n      delta[0] = Math.abs(offsetRight) + margin;\n    }\n    if (offsetTop < 0) {\n      // move map up\n      delta[1] = offsetTop - margin;\n    } else if (offsetBottom < 0) {\n      // move map down\n      delta[1] = Math.abs(offsetBottom) + margin;\n    }\n\n    if (delta[0] !== 0 || delta[1] !== 0) {\n      const center = /** @type {module:ol/coordinate~Coordinate} */ (map.getView().getCenter());\n      const centerPx = map.getPixelFromCoordinate(center);\n      const newCenterPx = [\n        centerPx[0] + delta[0],\n        centerPx[1] + delta[1]\n      ];\n\n      map.getView().animate({\n        center: map.getCoordinateFromPixel(newCenterPx),\n        duration: this.autoPanAnimation.duration,\n        easing: this.autoPanAnimation.easing\n      });\n    }\n  }\n};\n\n\n/**\n * Get the extent of an element relative to the document\n * @param {Element|undefined} element The element.\n * @param {module:ol/size~Size|undefined} size The size of the element.\n * @return {module:ol/extent~Extent} The extent.\n * @protected\n */\nOverlay.prototype.getRect = function(element, size) {\n  const box = element.getBoundingClientRect();\n  const offsetX = box.left + window.pageXOffset;\n  const offsetY = box.top + window.pageYOffset;\n  return [\n    offsetX,\n    offsetY,\n    offsetX + size[0],\n    offsetY + size[1]\n  ];\n};\n\n\n/**\n * Set the positioning for this overlay.\n * @param {module:ol/OverlayPositioning} positioning how the overlay is\n *     positioned relative to its point on the map.\n * @observable\n * @api\n */\nOverlay.prototype.setPositioning = function(positioning) {\n  this.set(Property.POSITIONING, positioning);\n};\n\n\n/**\n * Modify the visibility of the element.\n * @param {boolean} visible Element visibility.\n * @protected\n */\nOverlay.prototype.setVisible = function(visible) {\n  if (this.rendered.visible !== visible) {\n    this.element.style.display = visible ? '' : 'none';\n    this.rendered.visible = visible;\n  }\n};\n\n\n/**\n * Update pixel position.\n * @protected\n */\nOverlay.prototype.updatePixelPosition = function() {\n  const map = this.getMap();\n  const position = this.getPosition();\n  if (!map || !map.isRendered() || !position) {\n    this.setVisible(false);\n    return;\n  }\n\n  const pixel = map.getPixelFromCoordinate(position);\n  const mapSize = map.getSize();\n  this.updateRenderedPosition(pixel, mapSize);\n};\n\n\n/**\n * @param {module:ol~Pixel} pixel The pixel location.\n * @param {module:ol/size~Size|undefined} mapSize The map size.\n * @protected\n */\nOverlay.prototype.updateRenderedPosition = function(pixel, mapSize) {\n  const style = this.element.style;\n  const offset = this.getOffset();\n\n  const positioning = this.getPositioning();\n\n  this.setVisible(true);\n\n  let offsetX = offset[0];\n  let offsetY = offset[1];\n  if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT) {\n    if (this.rendered.left_ !== '') {\n      this.rendered.left_ = style.left = '';\n    }\n    const right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n    if (this.rendered.right_ != right) {\n      this.rendered.right_ = style.right = right;\n    }\n  } else {\n    if (this.rendered.right_ !== '') {\n      this.rendered.right_ = style.right = '';\n    }\n    if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.CENTER_CENTER ||\n        positioning == OverlayPositioning.TOP_CENTER) {\n      offsetX -= this.element.offsetWidth / 2;\n    }\n    const left = Math.round(pixel[0] + offsetX) + 'px';\n    if (this.rendered.left_ != left) {\n      this.rendered.left_ = style.left = left;\n    }\n  }\n  if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT) {\n    if (this.rendered.top_ !== '') {\n      this.rendered.top_ = style.top = '';\n    }\n    const bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n    if (this.rendered.bottom_ != bottom) {\n      this.rendered.bottom_ = style.bottom = bottom;\n    }\n  } else {\n    if (this.rendered.bottom_ !== '') {\n      this.rendered.bottom_ = style.bottom = '';\n    }\n    if (positioning == OverlayPositioning.CENTER_LEFT ||\n        positioning == OverlayPositioning.CENTER_CENTER ||\n        positioning == OverlayPositioning.CENTER_RIGHT) {\n      offsetY -= this.element.offsetHeight / 2;\n    }\n    const top = Math.round(pixel[1] + offsetY) + 'px';\n    if (this.rendered.top_ != top) {\n      this.rendered.top_ = style.top = top;\n    }\n  }\n};\n\n\n/**\n * returns the options this Overlay has been created with\n * @return {module:ol/Overlay~Options} overlay options\n */\nOverlay.prototype.getOptions = function() {\n  return this.options;\n};\n\nexport default Overlay;\n","/**\n * @module ol/control/OverviewMap\n */\nimport {inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from '../control/Control.js';\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen, listenOnce, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\n\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|Element} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|Element} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array.<module:ol/layer/Layer>|module:ol/Collection.<module:ol/layer/Layer>} [layers]\n * Layers for the overview map. If not set, then all main map layers are used\n * instead.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {Element|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {module:ol/View} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n\n\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/OverviewMap~Options=} opt_options OverviewMap options.\n * @api\n */\nconst OverviewMap = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsible_ = options.collapsible !== undefined ?\n    options.collapsible : true;\n\n  if (!this.collapsible_) {\n    this.collapsed_ = false;\n  }\n\n  const className = options.className !== undefined ? options.className : 'ol-overviewmap';\n\n  const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n  const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n  if (typeof collapseLabel === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.collapseLabel_ = document.createElement('span');\n    this.collapseLabel_.textContent = collapseLabel;\n  } else {\n    this.collapseLabel_ = collapseLabel;\n  }\n\n  const label = options.label !== undefined ? options.label : '\\u00BB';\n\n\n  if (typeof label === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.label_ = document.createElement('span');\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n  }\n\n  const activeLabel = (this.collapsible_ && !this.collapsed_) ?\n    this.collapseLabel_ : this.label_;\n  const button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(activeLabel);\n\n  listen(button, EventType.CLICK,\n    this.handleClick_, this);\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  this.ovmapDiv_ = document.createElement('DIV');\n  this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n  /**\n   * @type {module:ol/Map}\n   * @private\n   */\n  this.ovmap_ = new Map({\n    controls: new Collection(),\n    interactions: new Collection(),\n    view: options.view\n  });\n  const ovmap = this.ovmap_;\n\n  if (options.layers) {\n    options.layers.forEach(\n      /**\n       * @param {module:ol/layer/Layer} layer Layer.\n       */\n      (function(layer) {\n        ovmap.addLayer(layer);\n      }).bind(this));\n  }\n\n  const box = document.createElement('DIV');\n  box.className = 'ol-overviewmap-box';\n  box.style.boxSizing = 'border-box';\n\n  /**\n   * @type {module:ol/Overlay}\n   * @private\n   */\n  this.boxOverlay_ = new Overlay({\n    position: [0, 0],\n    positioning: OverlayPositioning.BOTTOM_LEFT,\n    element: box\n  });\n  this.ovmap_.addOverlay(this.boxOverlay_);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(this.ovmapDiv_);\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  /* Interactive map */\n\n  const scope = this;\n\n  const overlay = this.boxOverlay_;\n  const overlayBox = this.boxOverlay_.getElement();\n\n  /* Functions definition */\n\n  const computeDesiredMousePosition = function(mousePosition) {\n    return {\n      clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n      clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n    };\n  };\n\n  const move = function(event) {\n    const coordinates = ovmap.getEventCoordinate(computeDesiredMousePosition(event));\n\n    overlay.setPosition(coordinates);\n  };\n\n  const endMoving = function(event) {\n    const coordinates = ovmap.getEventCoordinate(event);\n\n    scope.getMap().getView().setCenter(coordinates);\n\n    window.removeEventListener('mousemove', move);\n    window.removeEventListener('mouseup', endMoving);\n  };\n\n  /* Binding */\n\n  overlayBox.addEventListener('mousedown', function() {\n    window.addEventListener('mousemove', move);\n    window.addEventListener('mouseup', endMoving);\n  });\n};\n\ninherits(OverviewMap, Control);\n\n\n/**\n * @inheritDoc\n * @api\n */\nOverviewMap.prototype.setMap = function(map) {\n  const oldMap = this.getMap();\n  if (map === oldMap) {\n    return;\n  }\n  if (oldMap) {\n    const oldView = oldMap.getView();\n    if (oldView) {\n      this.unbindView_(oldView);\n    }\n    this.ovmap_.setTarget(null);\n  }\n  Control.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.ovmap_.setTarget(this.ovmapDiv_);\n    this.listenerKeys.push(listen(\n      map, ObjectEventType.PROPERTYCHANGE,\n      this.handleMapPropertyChange_, this));\n\n    // TODO: to really support map switching, this would need to be reworked\n    if (this.ovmap_.getLayers().getLength() === 0) {\n      this.ovmap_.setLayerGroup(map.getLayerGroup());\n    }\n\n    const view = map.getView();\n    if (view) {\n      this.bindView_(view);\n      if (view.isDef()) {\n        this.ovmap_.updateSize();\n        this.resetExtent_();\n      }\n    }\n  }\n};\n\n\n/**\n * Handle map property changes.  This only deals with changes to the map's view.\n * @param {module:ol/Object~ObjectEvent} event The propertychange event.\n * @private\n */\nOverviewMap.prototype.handleMapPropertyChange_ = function(event) {\n  if (event.key === MapProperty.VIEW) {\n    const oldView = /** @type {module:ol/View} */ (event.oldValue);\n    if (oldView) {\n      this.unbindView_(oldView);\n    }\n    const newView = this.getMap().getView();\n    this.bindView_(newView);\n  }\n};\n\n\n/**\n * Register listeners for view property changes.\n * @param {module:ol/View} view The view.\n * @private\n */\nOverviewMap.prototype.bindView_ = function(view) {\n  listen(view,\n    getChangeEventType(ViewProperty.ROTATION),\n    this.handleRotationChanged_, this);\n};\n\n\n/**\n * Unregister listeners for view property changes.\n * @param {module:ol/View} view The view.\n * @private\n */\nOverviewMap.prototype.unbindView_ = function(view) {\n  unlisten(view,\n    getChangeEventType(ViewProperty.ROTATION),\n    this.handleRotationChanged_, this);\n};\n\n\n/**\n * Handle rotation changes to the main map.\n * TODO: This should rotate the extent rectrangle instead of the\n * overview map's view.\n * @private\n */\nOverviewMap.prototype.handleRotationChanged_ = function() {\n  this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n};\n\n\n/**\n * Update the overview map element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n  this.validateExtent_();\n  this.updateBox_();\n}\n\n\n/**\n * Reset the overview map extent if the box size (width or\n * height) is less than the size of the overview map size times minRatio\n * or is greater than the size of the overview size times maxRatio.\n *\n * If the map extent was not reset, the box size can fits in the defined\n * ratio sizes. This method then checks if is contained inside the overview\n * map current extent. If not, recenter the overview map to the current\n * main map center location.\n * @private\n */\nOverviewMap.prototype.validateExtent_ = function() {\n  const map = this.getMap();\n  const ovmap = this.ovmap_;\n\n  if (!map.isRendered() || !ovmap.isRendered()) {\n    return;\n  }\n\n  const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n  const view = map.getView();\n  const extent = view.calculateExtent(mapSize);\n\n  const ovmapSize = /** @type {module:ol/size~Size} */ (ovmap.getSize());\n\n  const ovview = ovmap.getView();\n  const ovextent = ovview.calculateExtent(ovmapSize);\n\n  const topLeftPixel =\n      ovmap.getPixelFromCoordinate(getTopLeft(extent));\n  const bottomRightPixel =\n      ovmap.getPixelFromCoordinate(getBottomRight(extent));\n\n  const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n  const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n  const ovmapWidth = ovmapSize[0];\n  const ovmapHeight = ovmapSize[1];\n\n  if (boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO) {\n    this.resetExtent_();\n  } else if (!containsExtent(ovextent, extent)) {\n    this.recenter_();\n  }\n};\n\n\n/**\n * Reset the overview map extent to half calculated min and max ratio times\n * the extent of the main map.\n * @private\n */\nOverviewMap.prototype.resetExtent_ = function() {\n  if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n    return;\n  }\n\n  const map = this.getMap();\n  const ovmap = this.ovmap_;\n\n  const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n  const view = map.getView();\n  const extent = view.calculateExtent(mapSize);\n\n  const ovview = ovmap.getView();\n\n  // get how many times the current map overview could hold different\n  // box sizes using the min and max ratio, pick the step in the middle used\n  // to calculate the extent from the main map to set it to the overview map,\n  const steps = Math.log(\n    MAX_RATIO / MIN_RATIO) / Math.LN2;\n  const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n  scaleFromCenter(extent, ratio);\n  ovview.fit(extent);\n};\n\n\n/**\n * Set the center of the overview map to the map center without changing its\n * resolution.\n * @private\n */\nOverviewMap.prototype.recenter_ = function() {\n  const map = this.getMap();\n  const ovmap = this.ovmap_;\n\n  const view = map.getView();\n\n  const ovview = ovmap.getView();\n\n  ovview.setCenter(view.getCenter());\n};\n\n\n/**\n * Update the box using the main map extent\n * @private\n */\nOverviewMap.prototype.updateBox_ = function() {\n  const map = this.getMap();\n  const ovmap = this.ovmap_;\n\n  if (!map.isRendered() || !ovmap.isRendered()) {\n    return;\n  }\n\n  const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n  const view = map.getView();\n\n  const ovview = ovmap.getView();\n\n  const rotation = view.getRotation();\n\n  const overlay = this.boxOverlay_;\n  const box = this.boxOverlay_.getElement();\n  const extent = view.calculateExtent(mapSize);\n  const ovresolution = ovview.getResolution();\n  const bottomLeft = getBottomLeft(extent);\n  const topRight = getTopRight(extent);\n\n  // set position using bottom left coordinates\n  const rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n  overlay.setPosition(rotateBottomLeft);\n\n  // set box size calculated from map extent size and overview map resolution\n  if (box) {\n    box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n    box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n  }\n};\n\n\n/**\n * @param {number} rotation Target rotation.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {module:ol/coordinate~Coordinate|undefined} Coordinate for rotation and center anchor.\n * @private\n */\nOverviewMap.prototype.calculateCoordinateRotate_ = function(\n  rotation, coordinate) {\n  let coordinateRotate;\n\n  const map = this.getMap();\n  const view = map.getView();\n\n  const currentCenter = view.getCenter();\n\n  if (currentCenter) {\n    coordinateRotate = [\n      coordinate[0] - currentCenter[0],\n      coordinate[1] - currentCenter[1]\n    ];\n    rotateCoordinate(coordinateRotate, rotation);\n    addCoordinate(coordinateRotate, currentCenter);\n  }\n  return coordinateRotate;\n};\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nOverviewMap.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleToggle_();\n};\n\n\n/**\n * @private\n */\nOverviewMap.prototype.handleToggle_ = function() {\n  this.element.classList.toggle(CLASS_COLLAPSED);\n  if (this.collapsed_) {\n    replaceNode(this.collapseLabel_, this.label_);\n  } else {\n    replaceNode(this.label_, this.collapseLabel_);\n  }\n  this.collapsed_ = !this.collapsed_;\n\n  // manage overview map if it had not been rendered before and control\n  // is expanded\n  const ovmap = this.ovmap_;\n  if (!this.collapsed_ && !ovmap.isRendered()) {\n    ovmap.updateSize();\n    this.resetExtent_();\n    listenOnce(ovmap, MapEventType.POSTRENDER,\n      function(event) {\n        this.updateBox_();\n      },\n      this);\n  }\n};\n\n\n/**\n * Return `true` if the overview map is collapsible, `false` otherwise.\n * @return {boolean} True if the widget is collapsible.\n * @api\n */\nOverviewMap.prototype.getCollapsible = function() {\n  return this.collapsible_;\n};\n\n\n/**\n * Set whether the overview map should be collapsible.\n * @param {boolean} collapsible True if the widget is collapsible.\n * @api\n */\nOverviewMap.prototype.setCollapsible = function(collapsible) {\n  if (this.collapsible_ === collapsible) {\n    return;\n  }\n  this.collapsible_ = collapsible;\n  this.element.classList.toggle('ol-uncollapsible');\n  if (!collapsible && this.collapsed_) {\n    this.handleToggle_();\n  }\n};\n\n\n/**\n * Collapse or expand the overview map according to the passed parameter. Will\n * not do anything if the overview map isn't collapsible or if the current\n * collapsed state is already the one requested.\n * @param {boolean} collapsed True if the widget is collapsed.\n * @api\n */\nOverviewMap.prototype.setCollapsed = function(collapsed) {\n  if (!this.collapsible_ || this.collapsed_ === collapsed) {\n    return;\n  }\n  this.handleToggle_();\n};\n\n\n/**\n * Determine if the overview map is collapsed.\n * @return {boolean} The overview map is collapsed.\n * @api\n */\nOverviewMap.prototype.getCollapsed = function() {\n  return this.collapsed_;\n};\n\n\n/**\n * Return the overview map.\n * @return {module:ol/PluggableMap} Overview map.\n * @api\n */\nOverviewMap.prototype.getOverviewMap = function() {\n  return this.ovmap_;\n};\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport {inherits} from '../index.js';\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from '../control/Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport const Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {Element|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {module:ol/control/ScaleLine~Units|string} [units='metric'] Units.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/ScaleLine~Options=} opt_options Scale line options.\n * @api\n */\nconst ScaleLine = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.innerElement_ = document.createElement('DIV');\n  this.innerElement_.className = className + '-inner';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.element_ = document.createElement('DIV');\n  this.element_.className = className + ' ' + CLASS_UNSELECTABLE;\n  this.element_.appendChild(this.innerElement_);\n\n  /**\n   * @private\n   * @type {?module:ol/View~State}\n   */\n  this.viewState_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = false;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.renderedWidth_ = undefined;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.renderedHTML_ = '';\n\n  Control.call(this, {\n    element: this.element_,\n    render: options.render || render,\n    target: options.target\n  });\n\n  listen(\n    this, getChangeEventType(UNITS_PROP),\n    this.handleUnitsChanged_, this);\n\n  this.setUnits(/** @type {module:ol/control/ScaleLine~Units} */ (options.units) ||\n      Units.METRIC);\n\n};\n\ninherits(ScaleLine, Control);\n\n\n/**\n * Return the units to use in the scale line.\n * @return {module:ol/control/ScaleLine~Units|undefined} The units\n * to use in the scale line.\n * @observable\n * @api\n */\nScaleLine.prototype.getUnits = function() {\n  return (\n    /** @type {module:ol/control/ScaleLine~Units|undefined} */ (this.get(UNITS_PROP))\n  );\n};\n\n\n/**\n * Update the scale line element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\n/**\n * @private\n */\nScaleLine.prototype.handleUnitsChanged_ = function() {\n  this.updateElement_();\n};\n\n\n/**\n * Set the units to use in the scale line.\n * @param {module:ol/control/ScaleLine~Units} units The units to use in the scale line.\n * @observable\n * @api\n */\nScaleLine.prototype.setUnits = function(units) {\n  this.set(UNITS_PROP, units);\n};\n\n\n/**\n * @private\n */\nScaleLine.prototype.updateElement_ = function() {\n  const viewState = this.viewState_;\n\n  if (!viewState) {\n    if (this.renderedVisible_) {\n      this.element_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const center = viewState.center;\n  const projection = viewState.projection;\n  const units = this.getUnits();\n  const pointResolutionUnits = units == Units.DEGREES ?\n    ProjUnits.DEGREES :\n    ProjUnits.METERS;\n  let pointResolution =\n      getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n  if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n    && pointResolutionUnits == ProjUnits.METERS) {\n    pointResolution *= projection.getMetersPerUnit();\n  }\n\n  let nominalCount = this.minWidth_ * pointResolution;\n  let suffix = '';\n  if (units == Units.DEGREES) {\n    const metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n    if (projection.getUnits() == ProjUnits.DEGREES) {\n      nominalCount *= metersPerDegree;\n    } else {\n      pointResolution /= metersPerDegree;\n    }\n    if (nominalCount < metersPerDegree / 60) {\n      suffix = '\\u2033'; // seconds\n      pointResolution *= 3600;\n    } else if (nominalCount < metersPerDegree) {\n      suffix = '\\u2032'; // minutes\n      pointResolution *= 60;\n    } else {\n      suffix = '\\u00b0'; // degrees\n    }\n  } else if (units == Units.IMPERIAL) {\n    if (nominalCount < 0.9144) {\n      suffix = 'in';\n      pointResolution /= 0.0254;\n    } else if (nominalCount < 1609.344) {\n      suffix = 'ft';\n      pointResolution /= 0.3048;\n    } else {\n      suffix = 'mi';\n      pointResolution /= 1609.344;\n    }\n  } else if (units == Units.NAUTICAL) {\n    pointResolution /= 1852;\n    suffix = 'nm';\n  } else if (units == Units.METRIC) {\n    if (nominalCount < 0.001) {\n      suffix = 'μm';\n      pointResolution *= 1000000;\n    } else if (nominalCount < 1) {\n      suffix = 'mm';\n      pointResolution *= 1000;\n    } else if (nominalCount < 1000) {\n      suffix = 'm';\n    } else {\n      suffix = 'km';\n      pointResolution /= 1000;\n    }\n  } else if (units == Units.US) {\n    if (nominalCount < 0.9144) {\n      suffix = 'in';\n      pointResolution *= 39.37;\n    } else if (nominalCount < 1609.344) {\n      suffix = 'ft';\n      pointResolution /= 0.30480061;\n    } else {\n      suffix = 'mi';\n      pointResolution /= 1609.3472;\n    }\n  } else {\n    assert(false, 33); // Invalid units\n  }\n\n  let i = 3 * Math.floor(\n    Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n  let count, width;\n  while (true) {\n    count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n        Math.pow(10, Math.floor(i / 3));\n    width = Math.round(count / pointResolution);\n    if (isNaN(width)) {\n      this.element_.style.display = 'none';\n      this.renderedVisible_ = false;\n      return;\n    } else if (width >= this.minWidth_) {\n      break;\n    }\n    ++i;\n  }\n\n  const html = count + ' ' + suffix;\n  if (this.renderedHTML_ != html) {\n    this.innerElement_.innerHTML = html;\n    this.renderedHTML_ = html;\n  }\n\n  if (this.renderedWidth_ != width) {\n    this.innerElement_.style.width = width + 'px';\n    this.renderedWidth_ = width;\n  }\n\n  if (!this.renderedVisible_) {\n    this.element_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n};\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\nimport {inherits} from '../index.js';\nimport ViewHint from '../ViewHint.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {clamp} from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\n\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/ZoomSlider~Options=} opt_options Zoom slider options.\n * @api\n */\nconst ZoomSlider = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * Will hold the current resolution of the view.\n   *\n   * @type {number|undefined}\n   * @private\n   */\n  this.currentResolution_ = undefined;\n\n  /**\n   * The direction of the slider. Will be determined from actual display of the\n   * container and defaults to Direction.VERTICAL.\n   *\n   * @type {Direction}\n   * @private\n   */\n  this.direction_ = Direction.VERTICAL;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.dragging_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.heightLimit_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.widthLimit_ = 0;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.previousX_;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.previousY_;\n\n  /**\n   * The calculated thumb size (border box plus margins).  Set when initSlider_\n   * is called.\n   * @type {module:ol/size~Size}\n   * @private\n   */\n  this.thumbSize_ = null;\n\n  /**\n   * Whether the slider is initialized.\n   * @type {boolean}\n   * @private\n   */\n  this.sliderInitialized_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n  const className = options.className !== undefined ? options.className : 'ol-zoomslider';\n  const thumbElement = document.createElement('button');\n  thumbElement.setAttribute('type', 'button');\n  thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n  const containerElement = document.createElement('div');\n  containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  containerElement.appendChild(thumbElement);\n  /**\n   * @type {module:ol/pointer/PointerEventHandler}\n   * @private\n   */\n  this.dragger_ = new PointerEventHandler(containerElement);\n\n  listen(this.dragger_, PointerEventType.POINTERDOWN,\n    this.handleDraggerStart_, this);\n  listen(this.dragger_, PointerEventType.POINTERMOVE,\n    this.handleDraggerDrag_, this);\n  listen(this.dragger_, PointerEventType.POINTERUP,\n    this.handleDraggerEnd_, this);\n\n  listen(containerElement, EventType.CLICK, this.handleContainerClick_, this);\n  listen(thumbElement, EventType.CLICK, stopPropagation);\n\n  Control.call(this, {\n    element: containerElement,\n    render: options.render || render\n  });\n};\n\ninherits(ZoomSlider, Control);\n\n\n/**\n * @inheritDoc\n */\nZoomSlider.prototype.disposeInternal = function() {\n  this.dragger_.dispose();\n  Control.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nZoomSlider.prototype.setMap = function(map) {\n  Control.prototype.setMap.call(this, map);\n  if (map) {\n    map.render();\n  }\n};\n\n\n/**\n * Initializes the slider element. This will determine and set this controls\n * direction_ and also constrain the dragging of the thumb to always be within\n * the bounds of the container.\n *\n * @private\n */\nZoomSlider.prototype.initSlider_ = function() {\n  const container = this.element;\n  const containerSize = {\n    width: container.offsetWidth, height: container.offsetHeight\n  };\n\n  const thumb = container.firstElementChild;\n  const computedStyle = getComputedStyle(thumb);\n  const thumbWidth = thumb.offsetWidth +\n      parseFloat(computedStyle['marginRight']) +\n      parseFloat(computedStyle['marginLeft']);\n  const thumbHeight = thumb.offsetHeight +\n      parseFloat(computedStyle['marginTop']) +\n      parseFloat(computedStyle['marginBottom']);\n  this.thumbSize_ = [thumbWidth, thumbHeight];\n\n  if (containerSize.width > containerSize.height) {\n    this.direction_ = Direction.HORIZONTAL;\n    this.widthLimit_ = containerSize.width - thumbWidth;\n  } else {\n    this.direction_ = Direction.VERTICAL;\n    this.heightLimit_ = containerSize.height - thumbHeight;\n  }\n  this.sliderInitialized_ = true;\n};\n\n\n/**\n * Update the zoomslider element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/ZoomSlider}\n * @api\n */\nexport function render(mapEvent) {\n  if (!mapEvent.frameState) {\n    return;\n  }\n  if (!this.sliderInitialized_) {\n    this.initSlider_();\n  }\n  const res = mapEvent.frameState.viewState.resolution;\n  if (res !== this.currentResolution_) {\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\n\n/**\n * @param {Event} event The browser event to handle.\n * @private\n */\nZoomSlider.prototype.handleContainerClick_ = function(event) {\n  const view = this.getMap().getView();\n\n  const relativePosition = this.getRelativePosition_(\n    event.offsetX - this.thumbSize_[0] / 2,\n    event.offsetY - this.thumbSize_[1] / 2);\n\n  const resolution = this.getResolutionForPosition_(relativePosition);\n\n  view.animate({\n    resolution: view.constrainResolution(resolution),\n    duration: this.duration_,\n    easing: easeOut\n  });\n};\n\n\n/**\n * Handle dragger start events.\n * @param {module:ol/pointer/PointerEvent} event The drag event.\n * @private\n */\nZoomSlider.prototype.handleDraggerStart_ = function(event) {\n  if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\n    this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    this.previousX_ = event.clientX;\n    this.previousY_ = event.clientY;\n    this.dragging_ = true;\n  }\n};\n\n\n/**\n * Handle dragger drag events.\n *\n * @param {module:ol/pointer/PointerEvent|Event} event The drag event.\n * @private\n */\nZoomSlider.prototype.handleDraggerDrag_ = function(event) {\n  if (this.dragging_) {\n    const element = this.element.firstElementChild;\n    const deltaX = event.clientX - this.previousX_ + parseInt(element.style.left, 10);\n    const deltaY = event.clientY - this.previousY_ + parseInt(element.style.top, 10);\n    const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n    this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n    this.getMap().getView().setResolution(this.currentResolution_);\n    this.setThumbPosition_(this.currentResolution_);\n    this.previousX_ = event.clientX;\n    this.previousY_ = event.clientY;\n  }\n};\n\n\n/**\n * Handle dragger end events.\n * @param {module:ol/pointer/PointerEvent|Event} event The drag event.\n * @private\n */\nZoomSlider.prototype.handleDraggerEnd_ = function(event) {\n  if (this.dragging_) {\n    const view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n\n    view.animate({\n      resolution: view.constrainResolution(this.currentResolution_),\n      duration: this.duration_,\n      easing: easeOut\n    });\n\n    this.dragging_ = false;\n    this.previousX_ = undefined;\n    this.previousY_ = undefined;\n  }\n};\n\n\n/**\n * Positions the thumb inside its container according to the given resolution.\n *\n * @param {number} res The res.\n * @private\n */\nZoomSlider.prototype.setThumbPosition_ = function(res) {\n  const position = this.getPositionForResolution_(res);\n  const thumb = this.element.firstElementChild;\n\n  if (this.direction_ == Direction.HORIZONTAL) {\n    thumb.style.left = this.widthLimit_ * position + 'px';\n  } else {\n    thumb.style.top = this.heightLimit_ * position + 'px';\n  }\n};\n\n\n/**\n * Calculates the relative position of the thumb given x and y offsets.  The\n * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n * in pixel units within the dragger limits.\n *\n * @param {number} x Pixel position relative to the left of the slider.\n * @param {number} y Pixel position relative to the top of the slider.\n * @return {number} The relative position of the thumb.\n * @private\n */\nZoomSlider.prototype.getRelativePosition_ = function(x, y) {\n  let amount;\n  if (this.direction_ === Direction.HORIZONTAL) {\n    amount = x / this.widthLimit_;\n  } else {\n    amount = y / this.heightLimit_;\n  }\n  return clamp(amount, 0, 1);\n};\n\n\n/**\n * Calculates the corresponding resolution of the thumb given its relative\n * position (where 0 is the minimum and 1 is the maximum).\n *\n * @param {number} position The relative position of the thumb.\n * @return {number} The corresponding resolution.\n * @private\n */\nZoomSlider.prototype.getResolutionForPosition_ = function(position) {\n  const fn = this.getMap().getView().getResolutionForValueFunction();\n  return fn(1 - position);\n};\n\n\n/**\n * Determines the relative position of the slider for the given resolution.  A\n * relative position of 0 corresponds to the minimum view resolution.  A\n * relative position of 1 corresponds to the maximum view resolution.\n *\n * @param {number} res The resolution.\n * @return {number} The relative position value (between 0 and 1).\n * @private\n */\nZoomSlider.prototype.getPositionForResolution_ = function(res) {\n  const fn = this.getMap().getView().getValueForResolutionFunction();\n  return 1 - fn(res);\n};\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport {inherits} from '../index.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {Element|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|Element} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {module:ol/extent~Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/ZoomToExtent~Options=} opt_options Options.\n * @api\n */\nconst ZoomToExtent = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @protected\n   */\n  this.extent = options.extent ? options.extent : null;\n\n  const className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n  const label = options.label !== undefined ? options.label : 'E';\n  const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n  const button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(\n    typeof label === 'string' ? document.createTextNode(label) : label\n  );\n\n  listen(button, EventType.CLICK, this.handleClick_, this);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    target: options.target\n  });\n};\n\ninherits(ZoomToExtent, Control);\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nZoomToExtent.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleZoomToExtent();\n};\n\n\n/**\n * @protected\n */\nZoomToExtent.prototype.handleZoomToExtent = function() {\n  const map = this.getMap();\n  const view = map.getView();\n  const extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n  view.fit(extent);\n};\nexport default ZoomToExtent;\n","/**\n * @module ol/style/Atlas\n */\nimport {createCanvasContext2D} from '../dom.js';\n\n\n/**\n * @typedef {Object} AtlasBlock\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Provides information for an image inside an atlas.\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\n * @typedef {Object} AtlasInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n */\n\n/**\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @constructor\n * @struct\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nconst Atlas = function(size, space) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.space_ = space;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas~AtlasBlock>}\n   */\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/style/Atlas~AtlasInfo>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D(size, size);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n};\n\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The atlas info.\n */\nAtlas.prototype.get = function(id) {\n  return this.entries_[id] || null;\n};\n\n\n/**\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry.\n */\nAtlas.prototype.add = function(id, width, height, renderCallback, opt_this) {\n  for (let i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n    const block = this.emptyBlocks_[i];\n    if (block.width >= width + this.space_ &&\n        block.height >= height + this.space_) {\n      // we found a block that is big enough for our entry\n      const entry = {\n        offsetX: block.x + this.space_,\n        offsetY: block.y + this.space_,\n        image: this.canvas_\n      };\n      this.entries_[id] = entry;\n\n      // render the image on the atlas image\n      renderCallback.call(opt_this, this.context_,\n        block.x + this.space_, block.y + this.space_);\n\n      // split the block after the insertion, either horizontally or vertically\n      this.split_(i, block, width + this.space_, height + this.space_);\n\n      return entry;\n    }\n  }\n\n  // there is no space for the new entry in this atlas\n  return null;\n};\n\n\n/**\n * @private\n * @param {number} index The index of the block.\n * @param {module:ol/style/Atlas~AtlasBlock} block The block to split.\n * @param {number} width The width of the entry to insert.\n * @param {number} height The height of the entry to insert.\n */\nAtlas.prototype.split_ = function(index, block, width, height) {\n  const deltaWidth = block.width - width;\n  const deltaHeight = block.height - height;\n\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  let newBlock1;\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  let newBlock2;\n\n  if (deltaWidth > deltaHeight) {\n    // split vertically\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: block.height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  } else {\n    // split horizontally\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: block.width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  }\n};\n\n\n/**\n * Remove the old block and insert new blocks at the same array position.\n * The new blocks are inserted at the same position, so that splitted\n * blocks (that are potentially smaller) are filled first.\n * @private\n * @param {number} index The index of the block to remove.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock1 The 1st block to add.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock2 The 2nd block to add.\n */\nAtlas.prototype.updateBlocks_ = function(index, newBlock1, newBlock2) {\n  const args = [index, 1];\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\n    args.push(newBlock1);\n  }\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\n    args.push(newBlock2);\n  }\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n};\nexport default Atlas;\n","/**\n * @module ol/style/AtlasManager\n */\nimport {WEBGL_MAX_TEXTURE_SIZE} from '../index.js';\nimport {UNDEFINED} from '../functions.js';\nimport Atlas from '../style/Atlas.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\n * `WEBGL_MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\n * @property {number} [space=1] The space in pixels between images.\n */\n\n\n/**\n * Provides information for an image inside an atlas manager.\n * `offsetX` and `offsetY` is the position of the image inside\n * the atlas image `image` and the position of the hit-detection image\n * inside the hit-detection atlas image `hitImage`.\n * @typedef {Object} AtlasManagerInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n * @property {HTMLCanvasElement} hitImage\n */\n\n\n/**\n * The size in pixels of the first atlas image.\n * @type {number}\n */\nconst INITIAL_ATLAS_SIZE = 256;\n\n/**\n * The maximum size in pixels of atlas images.\n * @type {number}\n */\nconst MAX_ATLAS_SIZE = -1;\n\n\n/**\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n *\n * @constructor\n * @struct\n * @api\n * @param {module:ol/style/AtlasManager~Options=} opt_options Options.\n */\nconst AtlasManager = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * The size in pixels of the latest atlas image.\n   * @private\n   * @type {number}\n   */\n  this.currentSize_ = options.initialSize !== undefined ?\n    options.initialSize : INITIAL_ATLAS_SIZE;\n\n  /**\n   * The maximum size in pixels of atlas images.\n   * @private\n   * @type {number}\n   */\n  this.maxSize_ = options.maxSize !== undefined ?\n    options.maxSize : MAX_ATLAS_SIZE != -1 ?\n      MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n        WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n  /**\n   * The size in pixels between images.\n   * @private\n   * @type {number}\n   */\n  this.space_ = options.space !== undefined ? options.space : 1;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas>}\n   */\n  this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\n\n  /**\n   * The size in pixels of the latest atlas image for hit-detection images.\n   * @private\n   * @type {number}\n   */\n  this.currentHitSize_ = this.currentSize_;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas>}\n   */\n  this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\n};\n\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *    entry, or `null` if the entry is not part of the atlas manager.\n */\nAtlasManager.prototype.getInfo = function(id) {\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  const info = this.getInfo_(this.atlases_, id);\n\n  if (!info) {\n    return null;\n  }\n  const hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n\n/**\n * @private\n * @param {Array.<module:ol/style/Atlas>} atlases The atlases to search.\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry,\n *    or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.getInfo_ = function(atlases, id) {\n  for (let i = 0, ii = atlases.length; i < ii; ++i) {\n    const atlas = atlases[i];\n    const info = atlas.get(id);\n    if (info) {\n      return info;\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n * @param {module:ol/style/Atlas~AtlasInfo} info The info for the real image.\n * @param {module:ol/style/Atlas~AtlasInfo} hitInfo The info for the hit-detection\n *    image.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *    entry, or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.mergeInfos_ = function(info, hitInfo) {\n  return (\n    /** @type {module:ol/style/AtlasManager~AtlasManagerInfo} */ ({\n      offsetX: info.offsetX,\n      offsetY: info.offsetY,\n      image: info.image,\n      hitImage: hitInfo.image\n    })\n  );\n};\n\n\n/**\n * Add an image to the atlas manager.\n *\n * If an entry for the given id already exists, the entry will\n * be overridden (but the space on the atlas graphic will not be freed).\n *\n * If `renderHitCallback` is provided, the image (or the hit-detection version\n * of the image) will be rendered into a separate hit-detection atlas image.\n *\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {function(CanvasRenderingContext2D, number, number)=}\n *    opt_renderHitCallback Called to render a hit-detection image onto a hit\n *    detection atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo}  The position and atlas image for the\n *    entry, or `null` if the image is too big.\n */\nAtlasManager.prototype.add = function(id, width, height,\n  renderCallback, opt_renderHitCallback, opt_this) {\n  if (width + this.space_ > this.maxSize_ ||\n      height + this.space_ > this.maxSize_) {\n    return null;\n  }\n\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  const info = this.add_(false, id, width, height, renderCallback, opt_this);\n  if (!info) {\n    return null;\n  }\n\n  // even if no hit-detection entry is requested, we insert a fake entry into\n  // the hit-detection atlas, to make sure that the offset is the same for\n  // the original image and the hit-detection image.\n  const renderHitCallback = opt_renderHitCallback !== undefined ?\n    opt_renderHitCallback : UNDEFINED;\n\n  const hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.add_(true,\n    id, width, height, renderHitCallback, opt_this));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n\n/**\n * @private\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo}  The position and atlas image for the entry,\n *    or `null` if the image is too big.\n */\nAtlasManager.prototype.add_ = function(isHitAtlas, id, width, height, renderCallback, opt_this) {\n  const atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n  let atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.add(id, width, height, renderCallback, opt_this);\n    if (info) {\n      return info;\n    } else if (!info && i === ii - 1) {\n      // the entry could not be added to one of the existing atlases,\n      // create a new atlas that is twice as big and try to add to this one.\n      let size;\n      if (isHitAtlas) {\n        size = Math.min(this.currentHitSize_ * 2, this.maxSize_);\n        this.currentHitSize_ = size;\n      } else {\n        size = Math.min(this.currentSize_ * 2, this.maxSize_);\n        this.currentSize_ = size;\n      }\n      atlas = new Atlas(size, this.space_);\n      atlases.push(atlas);\n      // run the loop another time\n      ++ii;\n    }\n  }\n  return null;\n};\nexport default AtlasManager;\n","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font}. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {module:ol/style/TextPlacement|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {module:ol/style/Fill} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Fill} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {module:ol/style/Stroke} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array.<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Text~Options=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {module:ol/style/TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {module:ol/style/TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {module:ol/style/TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n","/**\n * @module ol/GeolocationProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions'\n};\n","/**\n * @module ol/Geolocation\n */\nimport {inherits} from './index.js';\nimport GeolocationProperty from './GeolocationProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport {listen} from './events.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {GEOLOCATION} from './has.js';\nimport {toRadians} from './math.js';\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {GeolocationPositionOptions} [trackingOptions] Tracking options.\n * See {@link http://www.w3.org/TR/geolocation-API/#position_options_interface}.\n * @property {module:ol/proj~ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires error\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/Geolocation~Options=} opt_options Options.\n * @api\n */\nconst Geolocation = function(opt_options) {\n\n  BaseObject.call(this);\n\n  const options = opt_options || {};\n\n  /**\n   * The unprojected (EPSG:4326) device position.\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.position_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/proj~TransformFunction}\n   */\n  this.transform_ = identityTransform;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.watchId_ = undefined;\n\n  listen(\n    this, getChangeEventType(GeolocationProperty.PROJECTION),\n    this.handleProjectionChanged_, this);\n  listen(\n    this, getChangeEventType(GeolocationProperty.TRACKING),\n    this.handleTrackingChanged_, this);\n\n  if (options.projection !== undefined) {\n    this.setProjection(options.projection);\n  }\n  if (options.trackingOptions !== undefined) {\n    this.setTrackingOptions(options.trackingOptions);\n  }\n\n  this.setTracking(options.tracking !== undefined ? options.tracking : false);\n\n};\n\ninherits(Geolocation, BaseObject);\n\n\n/**\n * @inheritDoc\n */\nGeolocation.prototype.disposeInternal = function() {\n  this.setTracking(false);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @private\n */\nGeolocation.prototype.handleProjectionChanged_ = function() {\n  const projection = this.getProjection();\n  if (projection) {\n    this.transform_ = getTransformFromProjections(\n      getProjection('EPSG:4326'), projection);\n    if (this.position_) {\n      this.set(GeolocationProperty.POSITION, this.transform_(this.position_));\n    }\n  }\n};\n\n\n/**\n * @private\n */\nGeolocation.prototype.handleTrackingChanged_ = function() {\n  if (GEOLOCATION) {\n    const tracking = this.getTracking();\n    if (tracking && this.watchId_ === undefined) {\n      this.watchId_ = navigator.geolocation.watchPosition(\n        this.positionChange_.bind(this),\n        this.positionError_.bind(this),\n        this.getTrackingOptions());\n    } else if (!tracking && this.watchId_ !== undefined) {\n      navigator.geolocation.clearWatch(this.watchId_);\n      this.watchId_ = undefined;\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {GeolocationPosition} position position event.\n */\nGeolocation.prototype.positionChange_ = function(position) {\n  const coords = position.coords;\n  this.set(GeolocationProperty.ACCURACY, coords.accuracy);\n  this.set(GeolocationProperty.ALTITUDE,\n    coords.altitude === null ? undefined : coords.altitude);\n  this.set(GeolocationProperty.ALTITUDE_ACCURACY,\n    coords.altitudeAccuracy === null ?\n      undefined : coords.altitudeAccuracy);\n  this.set(GeolocationProperty.HEADING, coords.heading === null ?\n    undefined : toRadians(coords.heading));\n  if (!this.position_) {\n    this.position_ = [coords.longitude, coords.latitude];\n  } else {\n    this.position_[0] = coords.longitude;\n    this.position_[1] = coords.latitude;\n  }\n  const projectedPosition = this.transform_(this.position_);\n  this.set(GeolocationProperty.POSITION, projectedPosition);\n  this.set(GeolocationProperty.SPEED,\n    coords.speed === null ? undefined : coords.speed);\n  const geometry = circularPolygon(this.position_, coords.accuracy);\n  geometry.applyTransform(this.transform_);\n  this.set(GeolocationProperty.ACCURACY_GEOMETRY, geometry);\n  this.changed();\n};\n\n/**\n * Triggered when the Geolocation returns an error.\n * @event error\n * @api\n */\n\n/**\n * @private\n * @param {GeolocationPositionError} error error object.\n */\nGeolocation.prototype.positionError_ = function(error) {\n  error.type = EventType.ERROR;\n  this.setTracking(false);\n  this.dispatchEvent(/** @type {{type: string, target: undefined}} */ (error));\n};\n\n\n/**\n * Get the accuracy of the position in meters.\n * @return {number|undefined} The accuracy of the position measurement in\n *     meters.\n * @observable\n * @api\n */\nGeolocation.prototype.getAccuracy = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.ACCURACY));\n};\n\n\n/**\n * Get a geometry of the position accuracy.\n * @return {?module:ol/geom/Polygon} A geometry of the position accuracy.\n * @observable\n * @api\n */\nGeolocation.prototype.getAccuracyGeometry = function() {\n  return (\n    /** @type {?module:ol/geom/Polygon} */ (this.get(GeolocationProperty.ACCURACY_GEOMETRY) || null)\n  );\n};\n\n\n/**\n * Get the altitude associated with the position.\n * @return {number|undefined} The altitude of the position in meters above mean\n *     sea level.\n * @observable\n * @api\n */\nGeolocation.prototype.getAltitude = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE));\n};\n\n\n/**\n * Get the altitude accuracy of the position.\n * @return {number|undefined} The accuracy of the altitude measurement in\n *     meters.\n * @observable\n * @api\n */\nGeolocation.prototype.getAltitudeAccuracy = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE_ACCURACY));\n};\n\n\n/**\n * Get the heading as radians clockwise from North.\n * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n * is set to `true` in the tracking options.\n * @return {number|undefined} The heading of the device in radians from north.\n * @observable\n * @api\n */\nGeolocation.prototype.getHeading = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.HEADING));\n};\n\n\n/**\n * Get the position of the device.\n * @return {module:ol/coordinate~Coordinate|undefined} The current position of the device reported\n *     in the current projection.\n * @observable\n * @api\n */\nGeolocation.prototype.getPosition = function() {\n  return (\n    /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(GeolocationProperty.POSITION))\n  );\n};\n\n\n/**\n * Get the projection associated with the position.\n * @return {module:ol/proj/Projection|undefined} The projection the position is\n *     reported in.\n * @observable\n * @api\n */\nGeolocation.prototype.getProjection = function() {\n  return (\n    /** @type {module:ol/proj/Projection|undefined} */ (this.get(GeolocationProperty.PROJECTION))\n  );\n};\n\n\n/**\n * Get the speed in meters per second.\n * @return {number|undefined} The instantaneous speed of the device in meters\n *     per second.\n * @observable\n * @api\n */\nGeolocation.prototype.getSpeed = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.SPEED));\n};\n\n\n/**\n * Determine if the device location is being tracked.\n * @return {boolean} The device location is being tracked.\n * @observable\n * @api\n */\nGeolocation.prototype.getTracking = function() {\n  return /** @type {boolean} */ (this.get(GeolocationProperty.TRACKING));\n};\n\n\n/**\n * Get the tracking options.\n * @see http://www.w3.org/TR/geolocation-API/#position-options\n * @return {GeolocationPositionOptions|undefined} PositionOptions as defined by\n *     the [HTML5 Geolocation spec\n *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n * @observable\n * @api\n */\nGeolocation.prototype.getTrackingOptions = function() {\n  return /** @type {GeolocationPositionOptions|undefined} */ (this.get(GeolocationProperty.TRACKING_OPTIONS));\n};\n\n\n/**\n * Set the projection to use for transforming the coordinates.\n * @param {module:ol/proj~ProjectionLike} projection The projection the position is\n *     reported in.\n * @observable\n * @api\n */\nGeolocation.prototype.setProjection = function(projection) {\n  this.set(GeolocationProperty.PROJECTION, getProjection(projection));\n};\n\n\n/**\n * Enable or disable tracking.\n * @param {boolean} tracking Enable tracking.\n * @observable\n * @api\n */\nGeolocation.prototype.setTracking = function(tracking) {\n  this.set(GeolocationProperty.TRACKING, tracking);\n};\n\n\n/**\n * Set the tracking options.\n * @see http://www.w3.org/TR/geolocation-API/#position-options\n * @param {GeolocationPositionOptions} options PositionOptions as defined by the\n *     [HTML5 Geolocation spec\n *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n * @observable\n * @api\n */\nGeolocation.prototype.setTrackingOptions = function(options) {\n  this.set(GeolocationProperty.TRACKING_OPTIONS, options);\n};\nexport default Geolocation;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport {inherits} from '../index.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport Control from '../control/Control.js';\nimport {getTransformFromProjections, identityTransform, get as getProjection} from '../proj.js';\n\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {module:ol/coordinate~CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {function(module:ol/MapEvent)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {Element|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&nbsp;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&nbsp;'` when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/MousePosition~Options=} opt_options Mouse position\n *     options.\n * @api\n */\nconst MousePosition = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const element = document.createElement('DIV');\n  element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  listen(this,\n    getChangeEventType(PROJECTION),\n    this.handleProjectionChanged_, this);\n\n  if (options.coordinateFormat) {\n    this.setCoordinateFormat(options.coordinateFormat);\n  }\n  if (options.projection) {\n    this.setProjection(options.projection);\n  }\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.undefinedHTML_ = 'undefinedHTML' in options ? options.undefinedHTML : '&nbsp;';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderOnMouseOut_ = !!this.undefinedHTML_;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.renderedHTML_ = element.innerHTML;\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.mapProjection_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/proj~TransformFunction}\n   */\n  this.transform_ = null;\n\n  /**\n   * @private\n   * @type {module:ol~Pixel}\n   */\n  this.lastMouseMovePixel_ = null;\n\n};\n\ninherits(MousePosition, Control);\n\n\n/**\n * Update the mouseposition element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/MousePosition}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.mapProjection_ = null;\n  } else {\n    if (this.mapProjection_ != frameState.viewState.projection) {\n      this.mapProjection_ = frameState.viewState.projection;\n      this.transform_ = null;\n    }\n  }\n  this.updateHTML_(this.lastMouseMovePixel_);\n}\n\n\n/**\n * @private\n */\nMousePosition.prototype.handleProjectionChanged_ = function() {\n  this.transform_ = null;\n};\n\n\n/**\n * Return the coordinate format type used to render the current position or\n * undefined.\n * @return {module:ol/coordinate~CoordinateFormat|undefined} The format to render the current\n *     position in.\n * @observable\n * @api\n */\nMousePosition.prototype.getCoordinateFormat = function() {\n  return (\n    /** @type {module:ol/coordinate~CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT))\n  );\n};\n\n\n/**\n * Return the projection that is used to report the mouse position.\n * @return {module:ol/proj/Projection|undefined} The projection to report mouse\n *     position in.\n * @observable\n * @api\n */\nMousePosition.prototype.getProjection = function() {\n  return (\n    /** @type {module:ol/proj/Projection|undefined} */ (this.get(PROJECTION))\n  );\n};\n\n\n/**\n * @param {Event} event Browser event.\n * @protected\n */\nMousePosition.prototype.handleMouseMove = function(event) {\n  const map = this.getMap();\n  this.lastMouseMovePixel_ = map.getEventPixel(event);\n  this.updateHTML_(this.lastMouseMovePixel_);\n};\n\n\n/**\n * @param {Event} event Browser event.\n * @protected\n */\nMousePosition.prototype.handleMouseOut = function(event) {\n  this.updateHTML_(null);\n  this.lastMouseMovePixel_ = null;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMousePosition.prototype.setMap = function(map) {\n  Control.prototype.setMap.call(this, map);\n  if (map) {\n    const viewport = map.getViewport();\n    this.listenerKeys.push(\n      listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this)\n    );\n    if (this.renderOnMouseOut_) {\n      this.listenerKeys.push(\n        listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this)\n      );\n    }\n  }\n};\n\n\n/**\n * Set the coordinate format type used to render the current position.\n * @param {module:ol/coordinate~CoordinateFormat} format The format to render the current\n *     position in.\n * @observable\n * @api\n */\nMousePosition.prototype.setCoordinateFormat = function(format) {\n  this.set(COORDINATE_FORMAT, format);\n};\n\n\n/**\n * Set the projection that is used to report the mouse position.\n * @param {module:ol/proj~ProjectionLike} projection The projection to report mouse\n *     position in.\n * @observable\n * @api\n */\nMousePosition.prototype.setProjection = function(projection) {\n  this.set(PROJECTION, getProjection(projection));\n};\n\n\n/**\n * @param {?module:ol~Pixel} pixel Pixel.\n * @private\n */\nMousePosition.prototype.updateHTML_ = function(pixel) {\n  let html = this.undefinedHTML_;\n  if (pixel && this.mapProjection_) {\n    if (!this.transform_) {\n      const projection = this.getProjection();\n      if (projection) {\n        this.transform_ = getTransformFromProjections(\n          this.mapProjection_, projection);\n      } else {\n        this.transform_ = identityTransform;\n      }\n    }\n    const map = this.getMap();\n    const coordinate = map.getCoordinateFromPixel(pixel);\n    if (coordinate) {\n      this.transform_(coordinate, coordinate);\n      const coordinateFormat = this.getCoordinateFormat();\n      if (coordinateFormat) {\n        html = coordinateFormat(coordinate);\n      } else {\n        html = coordinate.toString();\n      }\n    }\n  }\n  if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n    this.element.innerHTML = html;\n    this.renderedHTML_ = html;\n  }\n};\n\n\nexport default MousePosition;\n","'use strict';\r\n\r\nconst Notify = function(ElementId) {\r\n    this.ElementId = ElementId\r\n\r\n    this.set = function(text, type='info', time=2) {\r\n        let ele = document.getElementById(this.ElementId)\r\n        ele.innerHTML = text\r\n        ele.className = 'notify-' + type\r\n        setTimeout(()=>{\r\n            ele.className = 'notify-hidden'\r\n            ele.innerHTML = ''\r\n        }, time * 1000);\r\n    }\r\n}\r\n\r\nexport default Notify\r\n","'use strict';\r\n\r\nimport 'ol/ol.css';\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer.js';\r\nimport OSM from 'ol/source/OSM';\r\nimport {defaults as defaultControls, ScaleLine} from 'ol/control.js'; //ScaleLine\r\nimport {defaults as defaultInteractions, DragRotateAndZoom} from 'ol/interaction.js'; //Rotate\r\n\r\nimport {fromLonLat} from 'ol/proj.js';\r\n\r\n//import LineString from 'ol/geom/LineString.js';\r\n\r\nimport VectorSource from 'ol/source/Vector.js';\r\nimport {Circle as CircleStyle, Fill, Stroke, Style, Icon} from 'ol/style.js';\r\n\r\nimport Feature from 'ol/Feature.js';\r\nimport Point from 'ol/geom/Point.js';\r\nimport LineString  from 'ol/geom/LineString.js';\r\nimport Overlay from 'ol/Overlay.js';\r\nimport Geolocation from 'ol/Geolocation.js';\r\n\r\nimport MousePosition from 'ol/control/MousePosition.js';\r\nimport {createStringXY} from 'ol/coordinate.js';\r\n\r\n//import unByKey from 'ol/Observable.js';\r\nimport {getLength, getDistance} from 'ol/sphere.js';\r\n\r\n//import Draw from 'ol/interaction/Draw.js';\r\n\r\n//import {Draw, Modify, Snap} from 'ol/interaction.js';\r\nimport {Draw, Modify} from 'ol/interaction.js';\r\nimport { notEqual } from 'assert';\r\n//import {click, pointerMove, altKeyOnly} from 'ol/events/condition.js';\r\n//import GeoJSON from 'ol/format/GeoJSON.js';\r\nimport {Projection} from 'ol/proj/Projection.js';\r\n\r\nimport Notify from './notify.js'\r\n\r\nconst GPS = function(container_id='map-container', Lon=0, Lat=0, Zoom=12) {\r\n\tvar keep_center = true\r\n\tvar rotate_map = true\r\n\tvar track_recording = false\r\n\tvar track_name = ''\r\n\tvar mode = 'drag'  // drag measuring point route\r\n\r\n\tvar prev_coordinates = null\r\n\r\n\tvar start_point = fromLonLat([Lon, Lat])\r\n\t/*\r\n\tvar track_point = fromLonLat([Lon, Lat])\r\n\tvar start_track_point = {lon: Lon, lat: Lat}\r\n\tvar last_track_point = {lon: Lon, lat: Lat}\r\n\t*/\r\n\t\r\n\tvar scaleLineControl = new ScaleLine()\r\n\r\n\tvar notify = new Notify('notify')\r\n\t\r\n\t// Pointer Style\r\n\tfunction createStyle(src, img) {\r\n\t  return new Style({\r\n\t\timage: new Icon({\r\n\t\t  opacity: 1.0,\r\n\t\t  rotation: 0,\r\n\t\t  crossOrigin: 'anonymous',\r\n\t\t  src: src,\r\n\t\t  img: img,\r\n\t\t  imgSize: img ? [img.width, img.height] : undefined\r\n\t\t})\r\n\t  });\r\n\t}\r\n\t\r\n\t// Создаем Pointer\r\n\tvar iconFeature = new Feature(new Point(start_point));\r\n\ticonFeature.set('style', createStyle('poiner.png', undefined));\r\n\t/*var pointer_angle = 0*/\r\n\tvar pointer_heading = 0\r\n\tvar pointer = new VectorLayer({\r\n\t  style: function(feature) {\r\n\t\treturn feature.get('style');\r\n\t  },\r\n\t  source: new VectorSource({features: [iconFeature]})\r\n\t})\r\n\t\r\n\t// Стили для треков (точек и линий)\r\n\tvar style = {\r\n\t  'Point': new Style({\r\n\t\timage: new CircleStyle({\r\n\t\t  fill: new Fill({\r\n\t\t\tcolor: 'blue'\r\n\t\t  }),\r\n\t\t  radius: 0,\r\n\t\t  stroke: new Stroke({\r\n\t\t\tcolor: 'blue',\r\n\t\t\twidth: 1\r\n\t\t  })\r\n\t\t})\r\n\t  }),\r\n\t  'LineString': new Style({\r\n\t\tstroke: new Stroke({\r\n\t\t  color: 'blue',\r\n\t\t  width: 2\r\n\t\t})\r\n\t  }),\r\n\t  'MultiLineString': new Style({\r\n\t\tstroke: new Stroke({\r\n\t\t  color: 'blue',\r\n\t\t  width: 2\r\n\t\t})\r\n\t  })\r\n\t};\r\n\t\r\n\t// Первоначальный вью\r\n\tvar view = new View({\r\n\t\tcenter: start_point,\r\n\t\trotation: 0,\r\n\t  zoom: Zoom\r\n\t})\r\n\t\r\n\tview.on('propertychange', function(e) \r\n\t{\r\n\t\tif (e.key == 'rotation') {\r\n\t\t\t/*rotate_pointer(pointer_angle)*/\r\n\t\t\trotate_pointer(pointer_heading)\r\n\t\t}\r\n\t});\r\n\r\n\tvar raster = new TileLayer({source: new OSM()}) // Источник карты OSM\r\n\r\n\tvar trackSource = new VectorSource();\r\n\tvar track = new VectorLayer({\r\n\t  source: trackSource,\r\n\t  style: function(feature) {\r\n\t\treturn style[feature.getGeometry().getType()];\r\n\t  }\r\n\t});\r\n\t\r\n\tvar mousePositionControl = new MousePosition({\r\n\t\tcoordinateFormat: createStringXY(4),\r\n\t\tprojection: 'EPSG:4326',\r\n\t\t// comment the following two lines to have the mouse position\r\n\t\t// be placed within the map.\r\n\t\tclassName: 'custom-mouse-position',\r\n\t\t//target: document.getElementById('map-info'),\r\n\t\ttarget: document.getElementById('map-info-top'),\r\n\t\tundefinedHTML: '&nbsp;'\r\n\t});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t////////////////////\r\n\t// Measurement\r\n\t////////////////////\r\n\tvar measurementSource = new VectorSource();\r\n\r\n\tvar vector = new VectorLayer({\r\n\t\tsource: measurementSource,\r\n\t\tstyle: new Style({\r\n\t\t\tfill: new Fill({\r\n\t\t\t\tcolor: 'rgba(255, 255, 255, 0.2)'\r\n\t\t\t}),\r\n\t\t\tstroke: new Stroke({\r\n\t\t\t\t/*\r\n\t\t\t\tcolor: '#ff9100',\r\n\t\t\t\twidth: 2\r\n\t\t\t\t*/\r\n\t\t\t\tcolor: 'rgba(0, 0, 0, 0.5)',\r\n\t\t\t\tlineDash: [10, 10],\r\n\t\t\t\twidth: 2\r\n\t\t\t}),\r\n\t\t\timage: new CircleStyle({\r\n\t\t\t\tradius: 7,\r\n\t\t\t\tfill: new Fill({\r\n\t\t\t\t\tcolor: '#ffbf00'\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t})\r\n\t});\r\n\r\n\tvar sketch;\r\n\tvar measureTooltipElement;\r\n\tvar measureTooltip;\r\n\tvar drawMeasurement; // global so we can remove it later\r\n\t////////////////////\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t////////////////////\r\n\t// Points and Routes\r\n\t////////////////////\r\n\tvar prSource = new VectorSource(); \r\n\r\n\tvar prVector = new VectorLayer({\r\n\t\tsource: prSource,\r\n\t\tstyle: new Style({\r\n\t\t\tfill: new Fill({\r\n\t\t\t\tcolor: 'rgba(255, 255, 255, 0.2)'\r\n\t\t\t}),\r\n\t\t\tstroke: new Stroke({\r\n\t\t\t\tcolor: '#ff6333',\r\n\t\t\t\twidth: 2\r\n\t\t\t}),\r\n\t\t\timage: new CircleStyle({\r\n\t\t\t\tradius: 7,\r\n\t\t\t\tfill: new Fill({\r\n\t\t\t\t\tcolor: '#ffbf00'\r\n\t\t\t\t}),\r\n\t\t\t\tstroke: new Stroke({\r\n\t\t\t\t\tcolor: 'white',\r\n\t\t\t\t\twidth: 1\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t})\r\n\t});\r\n\r\n\tvar modify = new Modify({source: prSource});\r\n\tmodify.on('modifyend',\r\n\tfunction(evt) {\r\n\t\t// Move Point/Route title (name) after drag\r\n\t\tlet features = evt.features.getArray();\r\n\t\tfor (let i = 0; i < features.length; i++) {\r\n\t\t\tlet rev = features[i].getRevision();\r\n\t\t\tif (rev > 1) {\r\n\t\t\t\tlet lastCoordinates = features[i].getGeometry().getLastCoordinate()\r\n\t\t\t\tfeatures[i].nameTooltip.setPosition(lastCoordinates);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}, this);\r\n\r\n\tvar drawRoute;//, snap; // global so we can remove them later\r\n\t////////////////////\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t//===========\r\n\tvar map = new Map({\r\n\t  controls: defaultControls({\r\n\t\tattributionOptions: {\r\n\t\t  collapsible: true\r\n\t\t}\r\n\t  }).extend([\r\n\t\tscaleLineControl, mousePositionControl\r\n\t\t]),\r\n\t\tinteractions: defaultInteractions().extend([\r\n\t\t\tnew DragRotateAndZoom()\r\n\t\t]),\r\n\t  target: container_id,\r\n\t  //layers: [raster, vectorGPX, track, pointer],\r\n\t\t//layers: [raster, track, pointer, vector, prVector],\r\n\t\tlayers: [raster, track, pointer, vector, prVector],\r\n\t  view: view\r\n\t});\r\n\t//============\r\n\r\n\tvar geolocation = new Geolocation({\r\n\t\t// enableHighAccuracy must be set to true to have the heading value.\r\n\t\ttrackingOptions: {\r\n\t\t\tenableHighAccuracy: true\r\n\t\t},\r\n\t\tprojection: view.getProjection()\r\n\t});\r\n\r\n\tgeolocation.setTracking(true);\r\n\t// update the HTML page when the position changes.\r\n\t/*\r\n\tgeolocation.on('change', function() {\r\n\t\tlet mapInfo = document.getElementById('map-info-body')\r\n\t\tmapInfo.innerHTML = '<br>Alt: ' +  geolocation.getAltitude() + ' m' +\r\n\t\t\t\t\t\t\t '<br>Speed: ' + geolocation.getSpeed() + 'm/s'+\r\n\t\t\t\t\t\t\t '<br>Heading: '+ geolocation.getHeading() + 'rad';\r\n\t\t\r\n\t\t//el('accuracy').innerText = geolocation.getAccuracy() + ' [m]';\r\n\t\t//el('altitude').innerText = geolocation.getAltitude() + ' [m]';\r\n\t\t//el('altitudeAccuracy').innerText = geolocation.getAltitudeAccuracy() + ' [m]';\r\n\t\t//el('heading').innerText = geolocation.getHeading() + ' [rad]';\r\n\t\t//el('speed').innerText = geolocation.getSpeed() + ' [m/s]';\r\n\r\n\t\tgeolocation.getPosition\r\n\t\tconsole.log(geolocation)\r\n\t});\r\n\t*/\r\n\r\n  // handle geolocation error.\r\n  geolocation.on('error', function(error) {\r\n\t\t/*\r\n    var info = document.getElementById('info');\r\n    info.innerHTML = error.message;\r\n\t\tinfo.style.display = '';\r\n\t\t*/\r\n\t});\r\n\t\r\n\tvar accuracyFeature = new Feature();\r\n    geolocation.on('change:accuracyGeometry', function() {\r\n    accuracyFeature.setGeometry(geolocation.getAccuracyGeometry());\r\n  });\r\n\t\r\n\tvar positionFeature = new Feature();\r\n\t/*\r\n\tpositionFeature.setStyle(new Style({\r\n\t\timage: new CircleStyle({\r\n\t\t\tradius: 6,\r\n\t\t\tfill: new Fill({\r\n\t\t\t\tcolor: '#3399CC'\r\n\t\t\t}),\r\n\t\t\tstroke: new Stroke({\r\n\t\t\t\tcolor: '#fff',\r\n\t\t\t\twidth: 2\r\n\t\t\t})\r\n\t\t})\r\n\t}));\r\n\t*/\r\n\r\n\tgeolocation.on('change:position', function() {\r\n\t\tlet coordinates = geolocation.getPosition();\r\n\t\tpositionFeature.setGeometry(coordinates ?\r\n\t\t\tnew Point(coordinates) : null);\r\n\t\t\t//console.log('change:position')\r\n\t\t\t//console.log(coordinates)\r\n\r\n\t\t\t// Keep center\r\n\t\t\tif (keep_center) {\r\n\t\t\t\tview.animate({\r\n\t\t\t\t\tcenter: coordinates,\r\n\t\t\t\t\tduration: 500\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Rotate Map / Pointer\r\n\t\t\tlet heading = geolocation.getHeading()\r\n\t\t\tif (typeof(heading) != 'undefined') {\r\n\t\t\t\tif (rotate_map) {\r\n\t\t\t\t\trotate_pointer(heading)\r\n\r\n\t\t\t\t\tview.animate({\r\n\t\t\t\t\t\tduration: 100,\r\n\t\t\t\t\t\trotation: -1*heading,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\trotate_pointer(heading)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t  // change Pointer position\r\n\t\t  iconFeature.getGeometry().setCoordinates(coordinates)\r\n\t\t  /*markerInfo.setPosition(coordinates)*/\r\n\t\t\tpointer.getSource().dispatchEvent('change');\r\n\r\n\t\t  // Info panel\r\n\t\t  let mapInfo = document.getElementById('map-info-body')\r\n\t\t  mapInfo.innerHTML = ''\r\n\t\t  let speed = geolocation.getSpeed()\r\n\t\t  let altitude = geolocation.getAltitude()\r\n\t\t  if (typeof(speed) != 'undefined') {\r\n\t\t\t  //mapInfo.innerHTML = 'Speed: ' + Math.round(speed*3.6) + ' km/h'\r\n\t\t\t  mapInfo.innerHTML = 'Speed: ' + Math.round(speed*3.6)\r\n\t\t  }\r\n\t\t  if (typeof(altitude) != 'undefined') {\r\n\t\t\t//mapInfo.innerHTML += '<br>Alt: ' +  Math.round(altitude) + ' m'\r\n\t\t\tmapInfo.innerHTML += '<br>Alt: ' +  Math.round(altitude)\r\n\t\t  }\r\n\r\n\t\t  // Track Draw\r\n\t\t  //add_track_point(coordinates[0], coordinates[1])\r\n\t\t  //if (prev_coordinates != null) {\r\n\t\t\tif (track_recording) {\r\n\t\t\t\tif (prev_coordinates == null) {\r\n\t\t\t\t\tprev_coordinates = coordinates\r\n\t\t\t\t}\r\n\t\t\t\tlet a1 = new Point(prev_coordinates)\r\n\t\t\t\tlet a2 = new Point(coordinates)\r\n\t\t\t\tlet distance = getDistance(a1.transform(\"EPSG:900913\", \"EPSG:4326\").getCoordinates(), a2.transform(\"EPSG:900913\", \"EPSG:4326\").getCoordinates())\r\n\r\n\t\t\t\t// Отладочная инфа том убрать\r\n\t\t\t\tmapInfo.innerHTML += '<br>Dist: ' + distance\r\n\t\t\t\t// Отладочная инфа том убрать\r\n\r\n\t\t\t\t// Add to track if distance more then 3 meters\r\n\t\t\t\tif( distance > 3.0 ) {\r\n\t\t  \t\t\ttrackSource.addFeature(new Feature({\r\n\t\t\t\t\t\t'geometry': new LineString([prev_coordinates, coordinates])\r\n\t\t\t\t\t  }));\r\n\t\t\t\t\tprev_coordinates = coordinates\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t  //}\r\n\t\t  //prev_coordinates = coordinates\r\n\r\n\t});\r\n\r\n\tnew VectorLayer({\r\n\t\tmap: map,\r\n\t\tsource: new VectorSource({\r\n\t\t\tfeatures: [accuracyFeature, positionFeature]\r\n\t\t})\r\n\t});\r\n\r\n\r\n\t// Marker Info\r\n\t/*\r\n\tvar markerInfo = new Overlay({\r\n\t\tposition: start_point,\r\n\t\telement: document.getElementById('marker-info')\r\n\t});\r\n\tmap.addOverlay(markerInfo);\r\n\t*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t////////////////////\r\n\t// Measurement\r\n\t////////////////////\r\n\tvar formatLength = function(line) {\r\n\t\tvar length = getLength(line);\r\n\t\tvar output;\r\n\t\tif (length > 100) {\r\n\t\t\toutput = (Math.round(length / 1000 * 100) / 100) +\r\n\t\t\t\t\t' ' + 'km';\r\n\t\t} else {\r\n\t\t\toutput = (Math.round(length * 100) / 100) +\r\n\t\t\t\t\t' ' + 'm';\r\n\t\t}\r\n\t\treturn output;\r\n\t};\r\n\r\n\tfunction createInteraction() {\r\n\t\tdrawMeasurement = new Draw({\r\n\t\t\tsource: measurementSource,\r\n\t\t\ttype: 'LineString',\r\n\t\t\tstyle: new Style({\r\n\t\t\t\tfill: new Fill({\r\n\t\t\t\t\tcolor: 'rgba(255, 255, 255, 0.2)'\r\n\t\t\t\t}),\r\n\t\t\t\tstroke: new Stroke({\r\n\t\t\t\t\tcolor: 'rgba(0, 0, 0, 0.5)',\r\n\t\t\t\t\tlineDash: [10, 10],\r\n\t\t\t\t\twidth: 2\r\n\t\t\t\t}),\r\n\t\t\t\timage: new CircleStyle({\r\n\t\t\t\t\tradius: 5,\r\n\t\t\t\t\tstroke: new Stroke({\r\n\t\t\t\t\t\tcolor: 'rgba(0, 0, 0, 0.7)'\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tfill: new Fill({\r\n\t\t\t\t\t\tcolor: 'rgba(255, 255, 255, 0.2)'\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\tcreateMeasureTooltip();\r\n\r\n\t\tvar listener;\r\n\t\tdrawMeasurement.on('drawstart',\r\n\t\t\tfunction(evt) {\r\n\t\t\t\tmeasurementSource.clear() // Clear prev meashuring lines\r\n\t\t\t\tmeasureTooltipElement.className = 'tooltip tooltip-measure';\r\n\t\t\t\t// set sketch\r\n\t\t\t\tsketch = evt.feature;\r\n\t\t\t\t/** @type {module:ol/coordinate~Coordinate|undefined} */\r\n\t\t\t\tvar tooltipCoord = evt.coordinate;\r\n\r\n\t\t\t\tlistener = sketch.getGeometry().on('change', function(evt) {\r\n\t\t\t\t\tvar geom = evt.target;\r\n\t\t\t\t\tvar output;\r\n\t\t\t\t\toutput = formatLength(geom);\r\n\t\t\t\t\ttooltipCoord = geom.getLastCoordinate();\r\n\t\t\t\t\tmeasureTooltipElement.innerHTML = output;\r\n\t\t\t\t\tmeasureTooltip.setPosition(tooltipCoord);\r\n\t\t\t\t});\r\n\t\t\t}, this);\r\n\r\n\t\tdrawMeasurement.on('drawend',\r\n\t\t\tfunction() {\r\n\t\t\t\t//measureTooltipElement.className = 'tooltip tooltip-static';\r\n\t\t\t\tmeasureTooltip.setOffset([0, -7]);\r\n\t\t\t\tsketch = null;\r\n\t\t\t}, this);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new measure tooltip\r\n\t */\r\n\tfunction createMeasureTooltip() {\r\n\t\tif (measureTooltipElement) {\r\n\t\t\tmeasureTooltipElement.parentNode.removeChild(measureTooltipElement);\r\n\t\t}\r\n\t\tmeasureTooltipElement = document.createElement('div');\r\n\t\t//measureTooltipElement.className = 'tooltip tooltip-measure';\r\n\r\n\t\tmap.removeOverlay()\r\n\t\tmeasureTooltip = new Overlay({\r\n\t\t\telement: measureTooltipElement,\r\n\t\t\toffset: [0, -15],\r\n\t\t\tpositioning: 'bottom-center'\r\n\t\t});\r\n\t\tmap.addOverlay(measureTooltip);\r\n\t}\r\n\r\n\tcreateInteraction();\r\n\t\r\n\tfunction enableMeasuring() {\r\n\t\tif (getMeasuringStatus() == -1) {\r\n\t\t\tmap.addInteraction(drawMeasurement)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction disableMeasuring() {\r\n\t\tif (getMeasuringStatus() > -1) {\r\n\t\t\tmap.removeInteraction(drawMeasurement)\r\n\t\t\tmeasurementSource.clear()\r\n\t\t\tmeasureTooltipElement.innerHTML = ''\r\n\t\t\tmeasureTooltipElement.className = 'hidden'\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction getMeasuringStatus() {\r\n\t\treturn map.interactions.array_.indexOf(drawMeasurement)\r\n\t}\r\n\t////////////////////\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t////////////////////\r\n\t// Points and Routes\r\n\t////////////////////\r\n\t//map.addInteraction(modify);\r\n\r\n\tfunction addPointTitle(feature) {\r\n\t\tlet nameTooltipElement = document.createElement('div');\r\n\t\tnameTooltipElement.className = 'tooltip tooltip-static';\r\n\t\tnameTooltipElement.innerHTML = feature._title_;\r\n\t\tnameTooltipElement._feature_ = feature\r\n\t\tnameTooltipElement.addEventListener('click', function() {\r\n\t\t\tlet newTitle = prompt('Name:', this._feature_._title_)\r\n\t\t\tif (newTitle) {\r\n\t\t\t\tif (this._feature_._title_ != newTitle) {\r\n\t\t\t\t\tthis._feature_._title_ = newTitle\r\n\t\t\t\t\tthis.innerHTML = this._feature_._title_\r\n\t\t\t\t\tsaveRoutesAndPoints()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (confirm(\"Do you want to DELETE \\\"\"+ this._feature_._title_ +\"\\\" ?\")) {\r\n\t\t\t\t\t// DELETE point or Route\r\n\t\t\t\t\tmap.removeOverlay(this._feature_.nameTooltip)\r\n\t\t\t\t\tprSource.removeFeature(this._feature_)\r\n\t\t\t\t\t//saveRoutesAndPoints()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tlet nameTooltip = new Overlay({\r\n\t\t\telement: nameTooltipElement,\r\n\t\t\toffset: [0, -15],\r\n\t\t\tpositioning: 'bottom-center'\r\n\t\t});\r\n\r\n\t\tlet lastCoordinates = feature.getGeometry().getLastCoordinate()\r\n\t\tnameTooltip.setPosition(lastCoordinates);\r\n\t\tmap.addOverlay(nameTooltip);\r\n\t\tfeature.nameTooltip = nameTooltip\r\n\t\t//saveRoutesAndPoints()\r\n\t}\r\n\r\n\tfunction enableRoutesAndPoints(type) {\r\n        drawRoute = new Draw({\r\n          source: prSource,\r\n\t\t  type: type\r\n\t\t});\r\n\t\t\r\n\t\tdrawRoute.on('drawend',\r\n\t\t\tfunction(evt) {\r\n\t\t\t\tevt.feature._title_ = prompt('Name', 'MyName')\r\n\t\t\t\t\taddPointTitle(evt.feature)\r\n\t\t\t}, this);\r\n\r\n\t\tmap.addInteraction(drawRoute);\r\n\t\tmap.addInteraction(modify);\r\n      }\r\n\r\n\t  function disableRoutesAndPoints() {\r\n\t\tif (map.interactions.array_.indexOf(drawRoute) > -1) {\r\n\t\t\tmap.removeInteraction(drawRoute)\r\n\t\t}\r\n\t\tif (map.interactions.array_.indexOf(modify) > -1) {\r\n\t\t\tmap.removeInteraction(modify)\r\n\t\t}\r\n      }\r\n\r\n\t  function sourceClear(source) {\r\n\t\tlet features = source.getFeatures()\r\n\t\tfor (let i = 0; i < features.length; i++) {\r\n\t\t\tmap.removeOverlay(features[i].nameTooltip)\r\n\t\t}\r\n\t\tsource.clear();\r\n\t  }\r\n\r\n\t  // Save Routes And Points\r\n\t  function saveRoutesAndPoints() {\r\n\t\tconsole.log('SAVE')\r\n\t\tlet features = prSource.getFeatures()\r\n\t\tlet geom = []\r\n\t\tif (features.length > 0) {\r\n\t\t\tfor (let i = 0; i < features.length; i++) {\r\n\t\t\t\tlet obj = {}\r\n\t\t\t\tobj.title = features[i]._title_\r\n\t\t\t\tobj.coordinates = features[i].getGeometry().getCoordinates()\r\n\t\t\t\tgeom.push(obj)\r\n\t\t\t}\r\n\t\t}\r\n\t\tlocalStorage.setItem('RoutesAndPoints', JSON.stringify(geom))\r\n\t  }\r\n\r\n\t  // Load Routes And Points\r\n\t  function loadRoutesAndPoints() {\r\n\t\tlet routesAndPoints = localStorage.getItem('RoutesAndPoints')\r\n\t\tif (routesAndPoints != null) {\r\n\t\t\tlet geom = JSON.parse(localStorage.getItem('RoutesAndPoints'))\r\n\t\t\tif (geom.length > 0) {\r\n\t\t\t\tsourceClear(prSource)\r\n\t\t\t\tlet feature\r\n\t\t\t\tfor (let i = 0; i < geom.length; i++) {\r\n\t\t\t\t\tif(typeof(geom[i].coordinates[0]) == 'number') {\r\n\t\t\t\t\t\tfeature = new Feature(new Point(geom[i].coordinates))\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tfeature = new Feature(new LineString(geom[i].coordinates))\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfeature._title_ = geom[i].title\r\n\t\t\t\t\taddPointTitle(feature)\r\n\t\t\t\t\tprSource.addFeature(feature)\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t}\r\n\t  }\r\n\t  ////////////////////\r\n\t  loadRoutesAndPoints()\r\n\r\n\t  prSource.on('change',\r\n\t  function () {\r\n\t\t  console.log('change')\r\n\t\t  saveRoutesAndPoints()\r\n  \t  });\r\n\r\n\r\n\t  function saveTrack(trackName) {\r\n\t\t// Track Save\r\n\t\tlet features = trackSource.getFeatures()\r\n\t\tif (features.length > 0) {\r\n\t\t\tlet geom = []\r\n\t\t\tfor (let i = 0; i < features.length; i++) {\r\n\t\t\t\t//geom.push(features[i].getGeometry().getCoordinates()[1])\r\n\t\t\t\tgeom.push(features[i].getGeometry().getCoordinates())\r\n\t\t\t}\r\n\t\t\tlocalStorage.setItem(trackName , JSON.stringify(geom))\r\n\t\t\treturn true\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false\r\n\t\t}\r\n\t  }\r\n\r\n\r\n\t  function loadTrack(trackName) {\r\n\t\tif (track_recording) {\r\n\t\t\tnotify.set(\"Can't load track while track recording\", 'error', 3)\r\n\t\t\treturn\r\n\t\t}\r\n\t\ttrackSource.clear()\r\n\r\n\t\tlet points = JSON.parse(localStorage.getItem(trackName))\r\n\t\t//let prev_point = null\r\n\t\tfor (let i in points) {\r\n\t\t\t//if (prev_point != null) {\r\n\t\t\t\ttrackSource.addFeature(new Feature({\r\n\t\t\t\t\t//'geometry': new LineString([prev_point, points[i]])\r\n\t\t\t\t\t'geometry': new LineString(points[i])\r\n\t\t\t\t}));\r\n\t\t\t//}\r\n\t\t\t//prev_point = points[i]\r\n\t\t}\r\n\t\t// Zoom To track\r\n\t\tmap.getView().fit(trackSource.getExtent(), map.getSize()); \r\n\t  }\r\n\r\n/*\r\n\tfunction gps_distance (lonA, latA, lonB, latB) {\r\n\t\tconst EATH_RADIUS = 6372795\r\n\t\tfunction gps_convert_to_rad (value) {\r\n\t\t\t\treturn value*Math.PI/180\r\n\t\t}\r\n\r\n\t\tlet lat1 = gps_convert_to_rad(latA)\r\n\t\tlet lon1 = gps_convert_to_rad(lonA)\r\n\t\tlet lat2 = gps_convert_to_rad(latB)\r\n\t\tlet lon2 = gps_convert_to_rad(lonB)\r\n\r\n\t\tlet lat1_cos = Math.cos(lat1)\r\n\t\tlet lat2_cos = Math.cos(lat2)\r\n\t\tlet lat1_sin = Math.sin(lat1)\r\n\t\tlet lat2_sin = Math.sin(lat2)\r\n\r\n\t\tlet sin_delta_lon = Math.sin(lon2-lon1)\r\n\t\tlet cos_delta_lon = Math.cos(lon2-lon1)\r\n\r\n\t\tlet y = Math.sqrt(Math.pow(lat2_cos*sin_delta_lon, 2) + Math.pow(lat1_cos*lat2_sin - lat1_sin*lat2_cos*cos_delta_lon,2))\r\n\t\tlet x = lat1_sin*lat2_sin + lat1_cos*lat2_cos*cos_delta_lon\r\n\r\n\t\treturn Math.round((Math.atan2(y, x) * EATH_RADIUS))\r\n\t}\r\n*/\r\n\r\n//var Geographic  = new OpenLayers.Projection(\"EPSG:4326\"); \r\n//var Mercator = new OpenLayers.Projection(\"EPSG:900913\");\r\n/*\r\n\tmap.on('click', function(evt) {\r\n\t\tvar coordinate = evt.coordinate;\r\n\t\t//var hdms = toStringHDMS(toLonLat(coordinate));\r\n\t\tconsole.log('Clck');\r\n\t\tlet curcor = positionFeature.getGeometry().getCoordinates()\r\n\t\tconsole.log(coordinate);\r\n\t\tconsole.log(curcor);\r\n\t\tconsole.log(gps_distance(coordinate[0]/10000, coordinate[1]/10000, curcor[0]/10000,curcor[1]/10000))\r\n\r\n\t\t//var point1 = new Geometry.Point(latlng1.lon, latlng1.lat).transform(Geographic, Mercator);\r\n\t//console.log(point1)\r\n\r\n\t\t//var point2 = new OpenLayers.Geometry.Point(latlng2.lon, latlng2.lat).transform(Geographic, Mercator);       \r\n\t\t//console.log(point1.distanceTo(point2))\r\n\r\n\t});\r\n\t*/\r\n\r\n\t/*\r\n\tfunction rotate_pointer (angle) {\r\n\t\tpointer_angle = angle\r\n\t\tvar style = iconFeature.get('style').getImage()\r\n\t\tstyle.setRotation(view.get('rotation') + angle * Math.PI / 180)\r\n\t}\r\n\t*/\r\n\r\n\tfunction rotate_pointer (heading) {\r\n\t\tpointer_heading = heading\r\n\t\tvar style = iconFeature.get('style').getImage()\r\n\t\tstyle.setRotation(view.get('rotation') + heading )\r\n\t}\r\n\r\n\r\n/*\r\n\tthis.viewTo = function(Lon, Lat) {\r\n\t\tview.animate({\r\n\t\t\tcenter: fromLonLat([Lon, Lat]),\r\n\t\t\tduration: 500\r\n\t\t});\t\t\r\n\t}\r\n\r\n\tthis.zoom = function(Zoom) {\r\n\t\tview.animate({\r\n\t\t\tzoom: Zoom,\r\n\t\t\tduration: 500\r\n\t\t});\r\n\t}\r\n\r\n\tthis.add_track_point = function(Lon, Lat) {\r\n\t\tlet new_track_point = fromLonLat([Lon, Lat])\r\n\r\n        if (( last_track_point.lon != start_track_point.lon ) && ( last_track_point.lat != start_track_point.lat )) {\r\n    \t\ttrackSource.addFeature(new Feature({\r\n\t    \t\t'geometry': new LineString([track_point, new_track_point])\r\n\t    \t}));\r\n        }\r\n\r\n\t\ttrack_point = new_track_point\r\n        last_track_point = {lon: Lon, lat: Lat}\r\n\t}\r\n    \r\n    this.get_track_point = function() {\r\n        return last_track_point\r\n    }\r\n\r\n\tthis.move_pointer = function(Lon, Lat) {\r\n\t\t// change Pointer position\r\n\t\ticonFeature.getGeometry().setCoordinates(fromLonLat([Lon, Lat]))\r\n\t\tmarkerInfo.setPosition(fromLonLat([Lon, Lat]))\r\n\r\n\t\tpointer.getSource().dispatchEvent('change');\r\n\t}\r\n\r\n\tthis.rotate_pointer = function(angle) {\r\n\t\trotate_pointer (angle)\r\n\t}\r\n\r\n\tthis.rotate_map = function(angle) {\r\n\t\tview.animate({\r\n\t\t\tduration: 100,\r\n\t\t\trotation: angle * Math.PI / 180,\r\n\t\t});\r\n\t\trotate_pointer(pointer_angle)\r\n\t}\r\n\r\n    this.gps_distance = function(lonA, latA, lonB, latB) {\r\n        const EATH_RADIUS = 6372795\r\n        function gps_convert_to_rad (value) {\r\n            return value*Math.PI/180\r\n        }\r\n\r\n        let lat1 = gps_convert_to_rad(latA)\r\n        let lon1 = gps_convert_to_rad(lonA)\r\n        let lat2 = gps_convert_to_rad(latB)\r\n        let lon2 = gps_convert_to_rad(lonB)\r\n\r\n        let lat1_cos = Math.cos(lat1)\r\n        let lat2_cos = Math.cos(lat2)\r\n        let lat1_sin = Math.sin(lat1)\r\n        let lat2_sin = Math.sin(lat2)\r\n\r\n        let sin_delta_lon = Math.sin(lon2-lon1)\r\n        let cos_delta_lon = Math.cos(lon2-lon1)\r\n\r\n        let y = Math.sqrt(Math.pow(lat2_cos*sin_delta_lon, 2) + Math.pow(lat1_cos*lat2_sin - lat1_sin*lat2_cos*cos_delta_lon,2))\r\n        let x = lat1_sin*lat2_sin + lat1_cos*lat2_cos*cos_delta_lon\r\n\r\n        return Math.round((Math.atan2(y, x) * EATH_RADIUS))\r\n\t} */\r\n\r\n\r\n\r\n\tthis.enableKeepCenter = function() {\r\n\t\tkeep_center = true\r\n\t}\r\n\tthis.disableKeepCenter = function() {\r\n\t\tkeep_center = false\r\n\t}\r\n\tthis.toggleKeepCenter = function() {\r\n\t\tkeep_center = !keep_center\t\r\n\t}\r\n\tthis.getKeepCenterStatus = function() {\r\n\t\treturn keep_center\r\n\t}\r\n\r\n\r\n\tthis.enableRotateMap = function() {\r\n\t\trotate_map = true\r\n\t}\r\n\tthis.disableRotateMap = function() {\r\n\t\trotate_map = false\r\n\t}\r\n\tthis.toggleRotateMap = function() {\r\n\t\trotate_map = !rotate_map\t\r\n\t}\r\n\tthis.getRotateMapStatus = function() {\r\n\t\treturn rotate_map\r\n\t}\t\r\n\r\n\tthis.toggleTrackRecording = function() {\r\n\t\tif (track_recording) {\r\n\t\t\t// Strop Track Recording\r\n\t\t\tif (confirm(\"Do you want to STOP track recording?\")) {\r\n\t\t\t\ttrack_recording = false\r\n\t\t\t\tif (saveTrack(track_name)) {\r\n\t\t\t\t\tnotify.set('Track saved as ' + track_name, 'info', 3)\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnotify.set('Track is empty' , 'warning', 3)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Start Track Recording\r\n\t\t\tlet now = new Date();\r\n\t\t\tlet name = now.getFullYear() + '-' + (now.getMonth()+1) + '-' + now.getDate() + '-' + now.getHours() + '-' + now.getMinutes() + '-' + now.getSeconds()\r\n\t\t\tlet newTrackName = prompt('Track name:', name)\r\n\t\t\tif (newTrackName != null) {\r\n\t\t\t\ttrack_name = 'Track_' + newTrackName\r\n\t\t\t\ttrackSource.clear()\r\n\t\t\t\ttrack_recording = true\r\n\t\t\t\tnotify.set('Recording started.<br>GPS Track will saved after you stop recording.', 'info', 7)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tthis.getTrackRecording = function() {\r\n\t\treturn track_recording\r\n\t}\r\n\t\r\n\r\n\tthis.loadTrack = function(trackName) {\r\n\t\tloadTrack(trackName)\r\n\t}\r\n\r\n\r\n\tthis.setMode = function(newMode) {\r\n\t\tmode = newMode\r\n\r\n\t\tswitch (mode) {\r\n\t\t\tcase 'drag':\r\n\t\t\t\tdisableMeasuring()\r\n\t\t\t\tdisableRoutesAndPoints()\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'measuring':\r\n\t\t\t\tdisableRoutesAndPoints()\r\n\t\t\t\tenableMeasuring()\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'point':\r\n\t\t\t\tdisableMeasuring()\r\n\t\t\t\tdisableRoutesAndPoints()\r\n\t\t\t\tenableRoutesAndPoints('Point')\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'route':\r\n\t\t\t\tdisableMeasuring()\r\n\t\t\t\tdisableRoutesAndPoints()\r\n\t\t\t\tenableRoutesAndPoints('LineString')\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tthis.getMode = function(newMode) {\r\n\t\treturn mode\r\n\t}\r\n\r\n}\r\n\r\nexport default GPS;\r\n","/*import 'ol/ol.css'*/\r\n\r\n/* TODO:\r\n- просмотр треков\r\n- Подумать надо ли настройки (settings / localStorage settings)\r\n\r\n\r\nhttps://openlayers.org/en/latest/examples/mouse-position.html\r\nhttps://openlayers.org/en/latest/examples/mobile-full-screen.html\r\nhttps://openlayers.org/en/latest/examples/line-arrows.html\r\n\r\nhttps://openlayers.org/en/latest/examples/snap.html\r\n\r\nhttps://openlayers.org/en/latest/examples/measure.html\r\n\r\n\r\nhttps://openlayers.org/en/latest/examples/snap.html\r\nhttps://openlayers.org/en/latest/examples/draw-and-modify-features.html\r\n\r\n*/\r\n\r\nimport GPS from './gps.js'\r\n//import FullScreen from './fullscreen.js'\r\nimport Notify from './notify.js'\r\n\r\n\r\nwindow.addEventListener(\"beforeunload\", function (event) {\r\n  // Cancel the event as stated by the standard.\r\n  event.preventDefault();\r\n  // Chrome requires returnValue to be set.\r\n  event.returnValue = '';\r\n});\r\n\r\n//////////////////////\r\n// Settings\r\n//////////////////////\r\nvar settings = default_settings\r\nsettings = Object.assign(default_settings, JSON.parse(localStorage.getItem('settings')))\r\n//////////////////////\r\n\r\n//var mapRoot = document.getElementById('map-root')\r\n//var mapContainer = document.getElementById('map-container')\r\n//var markerInfo = document.getElementById('marker-info')\r\n//var mapInfo = document.getElementById('map-info')\r\nvar controlPanel = document.getElementById('control-panel')\r\n\r\n//mapContainer.style.height = window.innerHeight + 'px'\r\n\r\nvar gps = new GPS(\"map-container\", settings.gpsStartLon, settings.gpsStartLat, settings.gpsStartZoom)\r\n\r\n//function fullScreenReSize() {\r\n//  //mapContainer.style.height = window.innerHeight + 'px'\r\n//  console.log('!')\r\n//}\r\n\r\n//var fullScreen = new FullScreen()\r\n\r\nvar notify = new Notify('notify')\r\n//notify.set('YAAAA')\r\n\r\n/*\r\nvar Notify = function(text, type='info', time=2) {\r\n  console.log(text)\r\n  let ele = document.getElementById('notify')\r\n  ele.innerHTML = text\r\n  ele.className = 'notify-' + type //'notify-info-' + type\r\n  setTimeout(()=>{\r\n    ele.className = 'notify-hidden'\r\n    ele.innerHTML = ''\r\n  }, time * 1000);\r\n}*/\r\n\r\n//var resizeEvent = window.document.createEvent('UIEvents') \r\n//resizeEvent .initUIEvent('resize', true, false, window, 0)\r\n\r\nfunction onClick(id, callback) {\r\n  document.getElementById(id).addEventListener('click', callback)\r\n}\r\n\r\nwindow.addEventListener(\"load\", function(event) {\r\n\r\n}, false)\r\n\r\n//window.addEventListener(\"resize\", function(event) {\r\n//  //mapContainer.style.height = window.innerHeight + 'px'\r\n//})\r\n\r\nfunction HideToolBar() {\r\n  controlPanel.className = ''\r\n}\r\n\r\nfunction onButtonsClick() {\r\n  let ele\r\n  let mode = gps.getMode()\r\n\r\n  ele = document.getElementById('mode-drag')\r\n  if (mode == 'drag')\r\n    ele.className='active'\r\n  else\r\n    ele.className=''\r\n\r\n  ele = document.getElementById('mode-measuring')\r\n  if (mode == 'measuring')\r\n    ele.className='active'\r\n  else\r\n    ele.className=''\r\n\r\n  ele = document.getElementById('mode-point')\r\n  if (mode == 'point')\r\n    ele.className='active'\r\n  else\r\n    ele.className=''\r\n    \r\n  ele = document.getElementById('mode-route')\r\n  if (mode == 'route')\r\n    ele.className='active'\r\n  else\r\n    ele.className=''  \r\n\r\n  HideToolBar()\r\n}\r\n\r\n/*\r\nonClick('full-screen', function() {\r\n  fullScreen.enterFullscreen('bodyTag')\r\n  HideToolBar()\r\n});\r\n*/\r\n\r\nonClick('mode-keep-center', function() {\r\n  gps.toggleKeepCenter()\r\n  let ele = document.getElementById('mode-keep-center')\r\n  if (gps.getKeepCenterStatus())\r\n    ele.className='active'\r\n  else\r\n    ele.className=''\r\n  //HideToolBar()\r\n  let notify_text = 'Keep Center mode '\r\n  ele.className==''? notify_text += 'disabled': notify_text += 'enabled'\r\n  notify.set(notify_text)\r\n});\r\n\r\nonClick('mode-rotate', function() {\r\n  gps.toggleRotateMap()\r\n  let ele = document.getElementById('mode-rotate')\r\n  if (gps.getRotateMapStatus())\r\n    ele.className='active'\r\n  else\r\n    ele.className=''\r\n  //HideToolBar()\r\n  let notify_text = 'Rotate Map mode '\r\n  ele.className==''? notify_text += 'disabled': notify_text += 'enabled'\r\n  notify.set(notify_text)\r\n});\r\n\r\n\r\nonClick('recording', function() {\r\n  gps.toggleTrackRecording()\r\n  let ele = document.getElementById('recording')\r\n  if (gps.getTrackRecording())\r\n    ele.className='active'\r\n  else\r\n    ele.className=''\r\n  HideToolBar()\r\n});\r\n\r\n\r\nonClick('mode-drag', function() {\r\n  gps.setMode('drag')\r\n  onButtonsClick()\r\n  notify.set('Dragging')\r\n});\r\n\r\nonClick('mode-measuring', function() {\r\n  //gps.toggleMeasuring()\r\n  gps.setMode('measuring')\r\n  onButtonsClick()\r\n  notify.set('Measuring')\r\n  /*\r\n  let ele = document.getElementById('mode-measuring')\r\n  if (gps.getMeasuringStatus() > -1)\r\n    ele.className='active'\r\n  else\r\n    ele.className=''\r\n  */\r\n});\r\n\r\nonClick('mode-point', function() {\r\n  //gps.togglePoint()\r\n  gps.setMode('point')\r\n  onButtonsClick()\r\n  notify.set('Set GPS Point')\r\n  /*\r\n  let ele = document.getElementById('mode-point')\r\n  if (gps.getPointStatus() > -1)\r\n    ele.className='active'\r\n  else\r\n    ele.className=''\r\n  */  \r\n});\r\n\r\nonClick('mode-route', function() {\r\n  gps.setMode('route')\r\n  onButtonsClick()\r\n  notify.set('Route drawing')\r\n  /*\r\n  let ele = document.getElementById('mode-track')\r\n  if (gps.getTrackStatus() > -1)\r\n    ele.className='active'\r\n  else\r\n    ele.className=''\r\n  */\r\n});\r\n\r\nonClick('load', function() {\r\n  var el =  document.getElementById('list')\r\n  el.className = 'list'\r\n  el.innerHTML = ''\r\n\r\n  for(var key in localStorage)\r\n  {\r\n    if (key.indexOf('Track_')==0) {\r\n      let newItem = document.createElement('button');\r\n      newItem.innerHTML = key\r\n      newItem.className='btn-list'\r\n      newItem.onclick = function(evt){\r\n        gps.loadTrack(evt.target.innerHTML)\r\n        el.className = ''\r\n      };\r\n      el.appendChild(newItem);\r\n\r\n      let newDelItem = document.createElement('button');\r\n      newDelItem.innerHTML = 'x'\r\n      newDelItem.className='btn-list btn-del'\r\n      newDelItem.id = key\r\n      newDelItem.onclick = function(evt){\r\n        //gps.deleteTrack(evt.target.innerHTML)\r\n        if (confirm(\"Do you want to DELETE record \\\"\"+ evt.target.id +\"\\\" ?\")) {\r\n          localStorage.removeItem(evt.target.id)\r\n          el.className = ''\r\n          notify.set('The record \"' + evt.target.id + '\" is deleted.')\r\n        }\r\n      };\r\n      el.appendChild(newDelItem);      \r\n\r\n    }\r\n  }\r\n\r\n  let newItem = document.createElement('button');\r\n  newItem.innerHTML = 'Cancel'\r\n  newItem.className='btn-list'\r\n  newItem.onclick = function() {\r\n    el.className = ''\r\n  };\r\n  el.appendChild(newItem);\r\n  HideToolBar()\r\n});\r\n\r\n\r\nonClick('toolbar', function() {\r\n  if (controlPanel.className == '')\r\n    controlPanel.className = 'show'\r\n  else\r\n    controlPanel.className = ''\r\n});\r\n\r\n\r\n/*\r\nonClick('settings', function() {\r\n  gps.test()\r\n});\r\n*/","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","exports = module.exports = require(\"../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 2px solid blue;\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: rgba(0,60,136,0.3);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n.ol-scale-line-inner {\\n  border: 1px solid #eee;\\n  border-top: none;\\n  color: #eee;\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n}\\n.ol-overlay-container {\\n  will-change: left,right,top,bottom;\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n.ol-viewport, .ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\\n}\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  -ms-user-select: text;\\n  user-select: text;\\n}\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n.ol-control {\\n  position: absolute;\\n  background-color: rgba(255,255,255,0.4);\\n  border-radius: 4px;\\n  padding: 2px;\\n}\\n.ol-control:hover {\\n  background-color: rgba(255,255,255,0.6);\\n}\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n@media print {\\n  .ol-control {\\n    display: none;\\n  }\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: white;\\n  font-size: 1.14em;\\n  font-weight: bold;\\n  text-decoration: none;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: rgba(0,60,136,0.5);\\n  border: none;\\n  border-radius: 2px;\\n}\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  font-size: 1.2em;\\n  will-change: transform;\\n}\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  background-color: rgba(0,60,136,0.7);\\n}\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 0 .5em;\\n  font-size: .7rem;\\n  line-height: 1.375em;\\n  color: #000;\\n  text-shadow: 0 0 2px #fff;\\n}\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n  line-height: inherit;\\n}\\n.ol-attribution li:not(:last-child):after {\\n  content: \\\" \\\";\\n}\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n.ol-attribution ul, .ol-attribution button {\\n  display: inline-block;\\n}\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n.ol-attribution:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n  height: 1.1em;\\n  line-height: 1em;\\n}\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: inline-block;\\n}\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid #7b98bc;\\n  height: 150px;\\n  margin: 2px;\\n  width: 150px;\\n}\\n.ol-overviewmap:not(.ol-collapsed) button{\\n  bottom: 1px;\\n  left: 2px;\\n  position: absolute;\\n}\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-overviewmap-box {\\n  border: 2px dotted rgba(0,60,136,0.7);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../css-loader/index.js!./ol.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../css-loader/index.js!./ol.css\", function() {\n\t\tvar newContent = require(\"!!../css-loader/index.js!./ol.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}